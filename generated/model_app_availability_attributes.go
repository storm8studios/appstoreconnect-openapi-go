/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppAvailabilityAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppAvailabilityAttributes{}

// AppAvailabilityAttributes struct for AppAvailabilityAttributes
type AppAvailabilityAttributes struct {
	AvailableInNewTerritories *bool `json:"availableInNewTerritories,omitempty"`
}

// NewAppAvailabilityAttributes instantiates a new AppAvailabilityAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppAvailabilityAttributes() *AppAvailabilityAttributes {
	this := AppAvailabilityAttributes{}
	return &this
}

// NewAppAvailabilityAttributesWithDefaults instantiates a new AppAvailabilityAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppAvailabilityAttributesWithDefaults() *AppAvailabilityAttributes {
	this := AppAvailabilityAttributes{}
	return &this
}

// GetAvailableInNewTerritories returns the AvailableInNewTerritories field value if set, zero value otherwise.
func (o *AppAvailabilityAttributes) GetAvailableInNewTerritories() bool {
	if o == nil || IsNil(o.AvailableInNewTerritories) {
		var ret bool
		return ret
	}
	return *o.AvailableInNewTerritories
}

// GetAvailableInNewTerritoriesOk returns a tuple with the AvailableInNewTerritories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAvailabilityAttributes) GetAvailableInNewTerritoriesOk() (*bool, bool) {
	if o == nil || IsNil(o.AvailableInNewTerritories) {
		return nil, false
	}
	return o.AvailableInNewTerritories, true
}

// HasAvailableInNewTerritories returns a boolean if a field has been set.
func (o *AppAvailabilityAttributes) HasAvailableInNewTerritories() bool {
	if o != nil && !IsNil(o.AvailableInNewTerritories) {
		return true
	}

	return false
}

// SetAvailableInNewTerritories gets a reference to the given bool and assigns it to the AvailableInNewTerritories field.
func (o *AppAvailabilityAttributes) SetAvailableInNewTerritories(v bool) {
	o.AvailableInNewTerritories = &v
}

func (o AppAvailabilityAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppAvailabilityAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailableInNewTerritories) {
		toSerialize["availableInNewTerritories"] = o.AvailableInNewTerritories
	}
	return toSerialize, nil
}

type NullableAppAvailabilityAttributes struct {
	value *AppAvailabilityAttributes
	isSet bool
}

func (v NullableAppAvailabilityAttributes) Get() *AppAvailabilityAttributes {
	return v.value
}

func (v *NullableAppAvailabilityAttributes) Set(val *AppAvailabilityAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAppAvailabilityAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAppAvailabilityAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppAvailabilityAttributes(val *AppAvailabilityAttributes) *NullableAppAvailabilityAttributes {
	return &NullableAppAvailabilityAttributes{value: val, isSet: true}
}

func (v NullableAppAvailabilityAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppAvailabilityAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


