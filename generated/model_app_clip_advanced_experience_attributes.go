/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppClipAdvancedExperienceAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppClipAdvancedExperienceAttributes{}

// AppClipAdvancedExperienceAttributes struct for AppClipAdvancedExperienceAttributes
type AppClipAdvancedExperienceAttributes struct {
	Link *string `json:"link,omitempty"`
	Version *int32 `json:"version,omitempty"`
	Status *string `json:"status,omitempty"`
	Action *AppClipAction `json:"action,omitempty"`
	IsPoweredBy *bool `json:"isPoweredBy,omitempty"`
	Place *AppClipAdvancedExperienceAttributesPlace `json:"place,omitempty"`
	PlaceStatus *string `json:"placeStatus,omitempty"`
	BusinessCategory *string `json:"businessCategory,omitempty"`
	DefaultLanguage *AppClipAdvancedExperienceLanguage `json:"defaultLanguage,omitempty"`
}

// NewAppClipAdvancedExperienceAttributes instantiates a new AppClipAdvancedExperienceAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppClipAdvancedExperienceAttributes() *AppClipAdvancedExperienceAttributes {
	this := AppClipAdvancedExperienceAttributes{}
	return &this
}

// NewAppClipAdvancedExperienceAttributesWithDefaults instantiates a new AppClipAdvancedExperienceAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppClipAdvancedExperienceAttributesWithDefaults() *AppClipAdvancedExperienceAttributes {
	this := AppClipAdvancedExperienceAttributes{}
	return &this
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceAttributes) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceAttributes) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceAttributes) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *AppClipAdvancedExperienceAttributes) SetLink(v string) {
	o.Link = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceAttributes) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceAttributes) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceAttributes) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *AppClipAdvancedExperienceAttributes) SetVersion(v int32) {
	o.Version = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceAttributes) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceAttributes) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceAttributes) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AppClipAdvancedExperienceAttributes) SetStatus(v string) {
	o.Status = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceAttributes) GetAction() AppClipAction {
	if o == nil || IsNil(o.Action) {
		var ret AppClipAction
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceAttributes) GetActionOk() (*AppClipAction, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceAttributes) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given AppClipAction and assigns it to the Action field.
func (o *AppClipAdvancedExperienceAttributes) SetAction(v AppClipAction) {
	o.Action = &v
}

// GetIsPoweredBy returns the IsPoweredBy field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceAttributes) GetIsPoweredBy() bool {
	if o == nil || IsNil(o.IsPoweredBy) {
		var ret bool
		return ret
	}
	return *o.IsPoweredBy
}

// GetIsPoweredByOk returns a tuple with the IsPoweredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceAttributes) GetIsPoweredByOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPoweredBy) {
		return nil, false
	}
	return o.IsPoweredBy, true
}

// HasIsPoweredBy returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceAttributes) HasIsPoweredBy() bool {
	if o != nil && !IsNil(o.IsPoweredBy) {
		return true
	}

	return false
}

// SetIsPoweredBy gets a reference to the given bool and assigns it to the IsPoweredBy field.
func (o *AppClipAdvancedExperienceAttributes) SetIsPoweredBy(v bool) {
	o.IsPoweredBy = &v
}

// GetPlace returns the Place field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceAttributes) GetPlace() AppClipAdvancedExperienceAttributesPlace {
	if o == nil || IsNil(o.Place) {
		var ret AppClipAdvancedExperienceAttributesPlace
		return ret
	}
	return *o.Place
}

// GetPlaceOk returns a tuple with the Place field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceAttributes) GetPlaceOk() (*AppClipAdvancedExperienceAttributesPlace, bool) {
	if o == nil || IsNil(o.Place) {
		return nil, false
	}
	return o.Place, true
}

// HasPlace returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceAttributes) HasPlace() bool {
	if o != nil && !IsNil(o.Place) {
		return true
	}

	return false
}

// SetPlace gets a reference to the given AppClipAdvancedExperienceAttributesPlace and assigns it to the Place field.
func (o *AppClipAdvancedExperienceAttributes) SetPlace(v AppClipAdvancedExperienceAttributesPlace) {
	o.Place = &v
}

// GetPlaceStatus returns the PlaceStatus field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceAttributes) GetPlaceStatus() string {
	if o == nil || IsNil(o.PlaceStatus) {
		var ret string
		return ret
	}
	return *o.PlaceStatus
}

// GetPlaceStatusOk returns a tuple with the PlaceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceAttributes) GetPlaceStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PlaceStatus) {
		return nil, false
	}
	return o.PlaceStatus, true
}

// HasPlaceStatus returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceAttributes) HasPlaceStatus() bool {
	if o != nil && !IsNil(o.PlaceStatus) {
		return true
	}

	return false
}

// SetPlaceStatus gets a reference to the given string and assigns it to the PlaceStatus field.
func (o *AppClipAdvancedExperienceAttributes) SetPlaceStatus(v string) {
	o.PlaceStatus = &v
}

// GetBusinessCategory returns the BusinessCategory field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceAttributes) GetBusinessCategory() string {
	if o == nil || IsNil(o.BusinessCategory) {
		var ret string
		return ret
	}
	return *o.BusinessCategory
}

// GetBusinessCategoryOk returns a tuple with the BusinessCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceAttributes) GetBusinessCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessCategory) {
		return nil, false
	}
	return o.BusinessCategory, true
}

// HasBusinessCategory returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceAttributes) HasBusinessCategory() bool {
	if o != nil && !IsNil(o.BusinessCategory) {
		return true
	}

	return false
}

// SetBusinessCategory gets a reference to the given string and assigns it to the BusinessCategory field.
func (o *AppClipAdvancedExperienceAttributes) SetBusinessCategory(v string) {
	o.BusinessCategory = &v
}

// GetDefaultLanguage returns the DefaultLanguage field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceAttributes) GetDefaultLanguage() AppClipAdvancedExperienceLanguage {
	if o == nil || IsNil(o.DefaultLanguage) {
		var ret AppClipAdvancedExperienceLanguage
		return ret
	}
	return *o.DefaultLanguage
}

// GetDefaultLanguageOk returns a tuple with the DefaultLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceAttributes) GetDefaultLanguageOk() (*AppClipAdvancedExperienceLanguage, bool) {
	if o == nil || IsNil(o.DefaultLanguage) {
		return nil, false
	}
	return o.DefaultLanguage, true
}

// HasDefaultLanguage returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceAttributes) HasDefaultLanguage() bool {
	if o != nil && !IsNil(o.DefaultLanguage) {
		return true
	}

	return false
}

// SetDefaultLanguage gets a reference to the given AppClipAdvancedExperienceLanguage and assigns it to the DefaultLanguage field.
func (o *AppClipAdvancedExperienceAttributes) SetDefaultLanguage(v AppClipAdvancedExperienceLanguage) {
	o.DefaultLanguage = &v
}

func (o AppClipAdvancedExperienceAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppClipAdvancedExperienceAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.IsPoweredBy) {
		toSerialize["isPoweredBy"] = o.IsPoweredBy
	}
	if !IsNil(o.Place) {
		toSerialize["place"] = o.Place
	}
	if !IsNil(o.PlaceStatus) {
		toSerialize["placeStatus"] = o.PlaceStatus
	}
	if !IsNil(o.BusinessCategory) {
		toSerialize["businessCategory"] = o.BusinessCategory
	}
	if !IsNil(o.DefaultLanguage) {
		toSerialize["defaultLanguage"] = o.DefaultLanguage
	}
	return toSerialize, nil
}

type NullableAppClipAdvancedExperienceAttributes struct {
	value *AppClipAdvancedExperienceAttributes
	isSet bool
}

func (v NullableAppClipAdvancedExperienceAttributes) Get() *AppClipAdvancedExperienceAttributes {
	return v.value
}

func (v *NullableAppClipAdvancedExperienceAttributes) Set(val *AppClipAdvancedExperienceAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAppClipAdvancedExperienceAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAppClipAdvancedExperienceAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppClipAdvancedExperienceAttributes(val *AppClipAdvancedExperienceAttributes) *NullableAppClipAdvancedExperienceAttributes {
	return &NullableAppClipAdvancedExperienceAttributes{value: val, isSet: true}
}

func (v NullableAppClipAdvancedExperienceAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppClipAdvancedExperienceAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


