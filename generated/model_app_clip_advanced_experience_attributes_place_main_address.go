/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppClipAdvancedExperienceAttributesPlaceMainAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppClipAdvancedExperienceAttributesPlaceMainAddress{}

// AppClipAdvancedExperienceAttributesPlaceMainAddress struct for AppClipAdvancedExperienceAttributesPlaceMainAddress
type AppClipAdvancedExperienceAttributesPlaceMainAddress struct {
	FullAddress *string `json:"fullAddress,omitempty"`
	StructuredAddress *AppClipAdvancedExperienceAttributesPlaceMainAddressStructuredAddress `json:"structuredAddress,omitempty"`
}

// NewAppClipAdvancedExperienceAttributesPlaceMainAddress instantiates a new AppClipAdvancedExperienceAttributesPlaceMainAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppClipAdvancedExperienceAttributesPlaceMainAddress() *AppClipAdvancedExperienceAttributesPlaceMainAddress {
	this := AppClipAdvancedExperienceAttributesPlaceMainAddress{}
	return &this
}

// NewAppClipAdvancedExperienceAttributesPlaceMainAddressWithDefaults instantiates a new AppClipAdvancedExperienceAttributesPlaceMainAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppClipAdvancedExperienceAttributesPlaceMainAddressWithDefaults() *AppClipAdvancedExperienceAttributesPlaceMainAddress {
	this := AppClipAdvancedExperienceAttributesPlaceMainAddress{}
	return &this
}

// GetFullAddress returns the FullAddress field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceAttributesPlaceMainAddress) GetFullAddress() string {
	if o == nil || IsNil(o.FullAddress) {
		var ret string
		return ret
	}
	return *o.FullAddress
}

// GetFullAddressOk returns a tuple with the FullAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceAttributesPlaceMainAddress) GetFullAddressOk() (*string, bool) {
	if o == nil || IsNil(o.FullAddress) {
		return nil, false
	}
	return o.FullAddress, true
}

// HasFullAddress returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceAttributesPlaceMainAddress) HasFullAddress() bool {
	if o != nil && !IsNil(o.FullAddress) {
		return true
	}

	return false
}

// SetFullAddress gets a reference to the given string and assigns it to the FullAddress field.
func (o *AppClipAdvancedExperienceAttributesPlaceMainAddress) SetFullAddress(v string) {
	o.FullAddress = &v
}

// GetStructuredAddress returns the StructuredAddress field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceAttributesPlaceMainAddress) GetStructuredAddress() AppClipAdvancedExperienceAttributesPlaceMainAddressStructuredAddress {
	if o == nil || IsNil(o.StructuredAddress) {
		var ret AppClipAdvancedExperienceAttributesPlaceMainAddressStructuredAddress
		return ret
	}
	return *o.StructuredAddress
}

// GetStructuredAddressOk returns a tuple with the StructuredAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceAttributesPlaceMainAddress) GetStructuredAddressOk() (*AppClipAdvancedExperienceAttributesPlaceMainAddressStructuredAddress, bool) {
	if o == nil || IsNil(o.StructuredAddress) {
		return nil, false
	}
	return o.StructuredAddress, true
}

// HasStructuredAddress returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceAttributesPlaceMainAddress) HasStructuredAddress() bool {
	if o != nil && !IsNil(o.StructuredAddress) {
		return true
	}

	return false
}

// SetStructuredAddress gets a reference to the given AppClipAdvancedExperienceAttributesPlaceMainAddressStructuredAddress and assigns it to the StructuredAddress field.
func (o *AppClipAdvancedExperienceAttributesPlaceMainAddress) SetStructuredAddress(v AppClipAdvancedExperienceAttributesPlaceMainAddressStructuredAddress) {
	o.StructuredAddress = &v
}

func (o AppClipAdvancedExperienceAttributesPlaceMainAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppClipAdvancedExperienceAttributesPlaceMainAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FullAddress) {
		toSerialize["fullAddress"] = o.FullAddress
	}
	if !IsNil(o.StructuredAddress) {
		toSerialize["structuredAddress"] = o.StructuredAddress
	}
	return toSerialize, nil
}

type NullableAppClipAdvancedExperienceAttributesPlaceMainAddress struct {
	value *AppClipAdvancedExperienceAttributesPlaceMainAddress
	isSet bool
}

func (v NullableAppClipAdvancedExperienceAttributesPlaceMainAddress) Get() *AppClipAdvancedExperienceAttributesPlaceMainAddress {
	return v.value
}

func (v *NullableAppClipAdvancedExperienceAttributesPlaceMainAddress) Set(val *AppClipAdvancedExperienceAttributesPlaceMainAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableAppClipAdvancedExperienceAttributesPlaceMainAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableAppClipAdvancedExperienceAttributesPlaceMainAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppClipAdvancedExperienceAttributesPlaceMainAddress(val *AppClipAdvancedExperienceAttributesPlaceMainAddress) *NullableAppClipAdvancedExperienceAttributesPlaceMainAddress {
	return &NullableAppClipAdvancedExperienceAttributesPlaceMainAddress{value: val, isSet: true}
}

func (v NullableAppClipAdvancedExperienceAttributesPlaceMainAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppClipAdvancedExperienceAttributesPlaceMainAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


