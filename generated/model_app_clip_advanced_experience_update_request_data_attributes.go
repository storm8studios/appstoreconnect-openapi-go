/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppClipAdvancedExperienceUpdateRequestDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppClipAdvancedExperienceUpdateRequestDataAttributes{}

// AppClipAdvancedExperienceUpdateRequestDataAttributes struct for AppClipAdvancedExperienceUpdateRequestDataAttributes
type AppClipAdvancedExperienceUpdateRequestDataAttributes struct {
	Action *AppClipAction `json:"action,omitempty"`
	IsPoweredBy *bool `json:"isPoweredBy,omitempty"`
	Place *AppClipAdvancedExperienceAttributesPlace `json:"place,omitempty"`
	BusinessCategory *string `json:"businessCategory,omitempty"`
	DefaultLanguage *AppClipAdvancedExperienceLanguage `json:"defaultLanguage,omitempty"`
	Removed *bool `json:"removed,omitempty"`
}

// NewAppClipAdvancedExperienceUpdateRequestDataAttributes instantiates a new AppClipAdvancedExperienceUpdateRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppClipAdvancedExperienceUpdateRequestDataAttributes() *AppClipAdvancedExperienceUpdateRequestDataAttributes {
	this := AppClipAdvancedExperienceUpdateRequestDataAttributes{}
	return &this
}

// NewAppClipAdvancedExperienceUpdateRequestDataAttributesWithDefaults instantiates a new AppClipAdvancedExperienceUpdateRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppClipAdvancedExperienceUpdateRequestDataAttributesWithDefaults() *AppClipAdvancedExperienceUpdateRequestDataAttributes {
	this := AppClipAdvancedExperienceUpdateRequestDataAttributes{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) GetAction() AppClipAction {
	if o == nil || IsNil(o.Action) {
		var ret AppClipAction
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) GetActionOk() (*AppClipAction, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given AppClipAction and assigns it to the Action field.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) SetAction(v AppClipAction) {
	o.Action = &v
}

// GetIsPoweredBy returns the IsPoweredBy field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) GetIsPoweredBy() bool {
	if o == nil || IsNil(o.IsPoweredBy) {
		var ret bool
		return ret
	}
	return *o.IsPoweredBy
}

// GetIsPoweredByOk returns a tuple with the IsPoweredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) GetIsPoweredByOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPoweredBy) {
		return nil, false
	}
	return o.IsPoweredBy, true
}

// HasIsPoweredBy returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) HasIsPoweredBy() bool {
	if o != nil && !IsNil(o.IsPoweredBy) {
		return true
	}

	return false
}

// SetIsPoweredBy gets a reference to the given bool and assigns it to the IsPoweredBy field.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) SetIsPoweredBy(v bool) {
	o.IsPoweredBy = &v
}

// GetPlace returns the Place field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) GetPlace() AppClipAdvancedExperienceAttributesPlace {
	if o == nil || IsNil(o.Place) {
		var ret AppClipAdvancedExperienceAttributesPlace
		return ret
	}
	return *o.Place
}

// GetPlaceOk returns a tuple with the Place field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) GetPlaceOk() (*AppClipAdvancedExperienceAttributesPlace, bool) {
	if o == nil || IsNil(o.Place) {
		return nil, false
	}
	return o.Place, true
}

// HasPlace returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) HasPlace() bool {
	if o != nil && !IsNil(o.Place) {
		return true
	}

	return false
}

// SetPlace gets a reference to the given AppClipAdvancedExperienceAttributesPlace and assigns it to the Place field.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) SetPlace(v AppClipAdvancedExperienceAttributesPlace) {
	o.Place = &v
}

// GetBusinessCategory returns the BusinessCategory field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) GetBusinessCategory() string {
	if o == nil || IsNil(o.BusinessCategory) {
		var ret string
		return ret
	}
	return *o.BusinessCategory
}

// GetBusinessCategoryOk returns a tuple with the BusinessCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) GetBusinessCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessCategory) {
		return nil, false
	}
	return o.BusinessCategory, true
}

// HasBusinessCategory returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) HasBusinessCategory() bool {
	if o != nil && !IsNil(o.BusinessCategory) {
		return true
	}

	return false
}

// SetBusinessCategory gets a reference to the given string and assigns it to the BusinessCategory field.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) SetBusinessCategory(v string) {
	o.BusinessCategory = &v
}

// GetDefaultLanguage returns the DefaultLanguage field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) GetDefaultLanguage() AppClipAdvancedExperienceLanguage {
	if o == nil || IsNil(o.DefaultLanguage) {
		var ret AppClipAdvancedExperienceLanguage
		return ret
	}
	return *o.DefaultLanguage
}

// GetDefaultLanguageOk returns a tuple with the DefaultLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) GetDefaultLanguageOk() (*AppClipAdvancedExperienceLanguage, bool) {
	if o == nil || IsNil(o.DefaultLanguage) {
		return nil, false
	}
	return o.DefaultLanguage, true
}

// HasDefaultLanguage returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) HasDefaultLanguage() bool {
	if o != nil && !IsNil(o.DefaultLanguage) {
		return true
	}

	return false
}

// SetDefaultLanguage gets a reference to the given AppClipAdvancedExperienceLanguage and assigns it to the DefaultLanguage field.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) SetDefaultLanguage(v AppClipAdvancedExperienceLanguage) {
	o.DefaultLanguage = &v
}

// GetRemoved returns the Removed field value if set, zero value otherwise.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) GetRemoved() bool {
	if o == nil || IsNil(o.Removed) {
		var ret bool
		return ret
	}
	return *o.Removed
}

// GetRemovedOk returns a tuple with the Removed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) GetRemovedOk() (*bool, bool) {
	if o == nil || IsNil(o.Removed) {
		return nil, false
	}
	return o.Removed, true
}

// HasRemoved returns a boolean if a field has been set.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) HasRemoved() bool {
	if o != nil && !IsNil(o.Removed) {
		return true
	}

	return false
}

// SetRemoved gets a reference to the given bool and assigns it to the Removed field.
func (o *AppClipAdvancedExperienceUpdateRequestDataAttributes) SetRemoved(v bool) {
	o.Removed = &v
}

func (o AppClipAdvancedExperienceUpdateRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppClipAdvancedExperienceUpdateRequestDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.IsPoweredBy) {
		toSerialize["isPoweredBy"] = o.IsPoweredBy
	}
	if !IsNil(o.Place) {
		toSerialize["place"] = o.Place
	}
	if !IsNil(o.BusinessCategory) {
		toSerialize["businessCategory"] = o.BusinessCategory
	}
	if !IsNil(o.DefaultLanguage) {
		toSerialize["defaultLanguage"] = o.DefaultLanguage
	}
	if !IsNil(o.Removed) {
		toSerialize["removed"] = o.Removed
	}
	return toSerialize, nil
}

type NullableAppClipAdvancedExperienceUpdateRequestDataAttributes struct {
	value *AppClipAdvancedExperienceUpdateRequestDataAttributes
	isSet bool
}

func (v NullableAppClipAdvancedExperienceUpdateRequestDataAttributes) Get() *AppClipAdvancedExperienceUpdateRequestDataAttributes {
	return v.value
}

func (v *NullableAppClipAdvancedExperienceUpdateRequestDataAttributes) Set(val *AppClipAdvancedExperienceUpdateRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAppClipAdvancedExperienceUpdateRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAppClipAdvancedExperienceUpdateRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppClipAdvancedExperienceUpdateRequestDataAttributes(val *AppClipAdvancedExperienceUpdateRequestDataAttributes) *NullableAppClipAdvancedExperienceUpdateRequestDataAttributes {
	return &NullableAppClipAdvancedExperienceUpdateRequestDataAttributes{value: val, isSet: true}
}

func (v NullableAppClipAdvancedExperienceUpdateRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppClipAdvancedExperienceUpdateRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


