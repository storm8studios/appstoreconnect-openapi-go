/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppClipAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppClipAttributes{}

// AppClipAttributes struct for AppClipAttributes
type AppClipAttributes struct {
	BundleId *string `json:"bundleId,omitempty"`
}

// NewAppClipAttributes instantiates a new AppClipAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppClipAttributes() *AppClipAttributes {
	this := AppClipAttributes{}
	return &this
}

// NewAppClipAttributesWithDefaults instantiates a new AppClipAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppClipAttributesWithDefaults() *AppClipAttributes {
	this := AppClipAttributes{}
	return &this
}

// GetBundleId returns the BundleId field value if set, zero value otherwise.
func (o *AppClipAttributes) GetBundleId() string {
	if o == nil || IsNil(o.BundleId) {
		var ret string
		return ret
	}
	return *o.BundleId
}

// GetBundleIdOk returns a tuple with the BundleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipAttributes) GetBundleIdOk() (*string, bool) {
	if o == nil || IsNil(o.BundleId) {
		return nil, false
	}
	return o.BundleId, true
}

// HasBundleId returns a boolean if a field has been set.
func (o *AppClipAttributes) HasBundleId() bool {
	if o != nil && !IsNil(o.BundleId) {
		return true
	}

	return false
}

// SetBundleId gets a reference to the given string and assigns it to the BundleId field.
func (o *AppClipAttributes) SetBundleId(v string) {
	o.BundleId = &v
}

func (o AppClipAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppClipAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BundleId) {
		toSerialize["bundleId"] = o.BundleId
	}
	return toSerialize, nil
}

type NullableAppClipAttributes struct {
	value *AppClipAttributes
	isSet bool
}

func (v NullableAppClipAttributes) Get() *AppClipAttributes {
	return v.value
}

func (v *NullableAppClipAttributes) Set(val *AppClipAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAppClipAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAppClipAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppClipAttributes(val *AppClipAttributes) *NullableAppClipAttributes {
	return &NullableAppClipAttributes{value: val, isSet: true}
}

func (v NullableAppClipAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppClipAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


