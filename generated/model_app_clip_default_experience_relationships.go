/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppClipDefaultExperienceRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppClipDefaultExperienceRelationships{}

// AppClipDefaultExperienceRelationships struct for AppClipDefaultExperienceRelationships
type AppClipDefaultExperienceRelationships struct {
	AppClip *AppClipAdvancedExperienceRelationshipsAppClip `json:"appClip,omitempty"`
	ReleaseWithAppStoreVersion *AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion `json:"releaseWithAppStoreVersion,omitempty"`
	AppClipDefaultExperienceLocalizations *AppClipDefaultExperienceRelationshipsAppClipDefaultExperienceLocalizations `json:"appClipDefaultExperienceLocalizations,omitempty"`
	AppClipAppStoreReviewDetail *AppClipDefaultExperienceRelationshipsAppClipAppStoreReviewDetail `json:"appClipAppStoreReviewDetail,omitempty"`
}

// NewAppClipDefaultExperienceRelationships instantiates a new AppClipDefaultExperienceRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppClipDefaultExperienceRelationships() *AppClipDefaultExperienceRelationships {
	this := AppClipDefaultExperienceRelationships{}
	return &this
}

// NewAppClipDefaultExperienceRelationshipsWithDefaults instantiates a new AppClipDefaultExperienceRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppClipDefaultExperienceRelationshipsWithDefaults() *AppClipDefaultExperienceRelationships {
	this := AppClipDefaultExperienceRelationships{}
	return &this
}

// GetAppClip returns the AppClip field value if set, zero value otherwise.
func (o *AppClipDefaultExperienceRelationships) GetAppClip() AppClipAdvancedExperienceRelationshipsAppClip {
	if o == nil || IsNil(o.AppClip) {
		var ret AppClipAdvancedExperienceRelationshipsAppClip
		return ret
	}
	return *o.AppClip
}

// GetAppClipOk returns a tuple with the AppClip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipDefaultExperienceRelationships) GetAppClipOk() (*AppClipAdvancedExperienceRelationshipsAppClip, bool) {
	if o == nil || IsNil(o.AppClip) {
		return nil, false
	}
	return o.AppClip, true
}

// HasAppClip returns a boolean if a field has been set.
func (o *AppClipDefaultExperienceRelationships) HasAppClip() bool {
	if o != nil && !IsNil(o.AppClip) {
		return true
	}

	return false
}

// SetAppClip gets a reference to the given AppClipAdvancedExperienceRelationshipsAppClip and assigns it to the AppClip field.
func (o *AppClipDefaultExperienceRelationships) SetAppClip(v AppClipAdvancedExperienceRelationshipsAppClip) {
	o.AppClip = &v
}

// GetReleaseWithAppStoreVersion returns the ReleaseWithAppStoreVersion field value if set, zero value otherwise.
func (o *AppClipDefaultExperienceRelationships) GetReleaseWithAppStoreVersion() AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion {
	if o == nil || IsNil(o.ReleaseWithAppStoreVersion) {
		var ret AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion
		return ret
	}
	return *o.ReleaseWithAppStoreVersion
}

// GetReleaseWithAppStoreVersionOk returns a tuple with the ReleaseWithAppStoreVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipDefaultExperienceRelationships) GetReleaseWithAppStoreVersionOk() (*AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion, bool) {
	if o == nil || IsNil(o.ReleaseWithAppStoreVersion) {
		return nil, false
	}
	return o.ReleaseWithAppStoreVersion, true
}

// HasReleaseWithAppStoreVersion returns a boolean if a field has been set.
func (o *AppClipDefaultExperienceRelationships) HasReleaseWithAppStoreVersion() bool {
	if o != nil && !IsNil(o.ReleaseWithAppStoreVersion) {
		return true
	}

	return false
}

// SetReleaseWithAppStoreVersion gets a reference to the given AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion and assigns it to the ReleaseWithAppStoreVersion field.
func (o *AppClipDefaultExperienceRelationships) SetReleaseWithAppStoreVersion(v AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion) {
	o.ReleaseWithAppStoreVersion = &v
}

// GetAppClipDefaultExperienceLocalizations returns the AppClipDefaultExperienceLocalizations field value if set, zero value otherwise.
func (o *AppClipDefaultExperienceRelationships) GetAppClipDefaultExperienceLocalizations() AppClipDefaultExperienceRelationshipsAppClipDefaultExperienceLocalizations {
	if o == nil || IsNil(o.AppClipDefaultExperienceLocalizations) {
		var ret AppClipDefaultExperienceRelationshipsAppClipDefaultExperienceLocalizations
		return ret
	}
	return *o.AppClipDefaultExperienceLocalizations
}

// GetAppClipDefaultExperienceLocalizationsOk returns a tuple with the AppClipDefaultExperienceLocalizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipDefaultExperienceRelationships) GetAppClipDefaultExperienceLocalizationsOk() (*AppClipDefaultExperienceRelationshipsAppClipDefaultExperienceLocalizations, bool) {
	if o == nil || IsNil(o.AppClipDefaultExperienceLocalizations) {
		return nil, false
	}
	return o.AppClipDefaultExperienceLocalizations, true
}

// HasAppClipDefaultExperienceLocalizations returns a boolean if a field has been set.
func (o *AppClipDefaultExperienceRelationships) HasAppClipDefaultExperienceLocalizations() bool {
	if o != nil && !IsNil(o.AppClipDefaultExperienceLocalizations) {
		return true
	}

	return false
}

// SetAppClipDefaultExperienceLocalizations gets a reference to the given AppClipDefaultExperienceRelationshipsAppClipDefaultExperienceLocalizations and assigns it to the AppClipDefaultExperienceLocalizations field.
func (o *AppClipDefaultExperienceRelationships) SetAppClipDefaultExperienceLocalizations(v AppClipDefaultExperienceRelationshipsAppClipDefaultExperienceLocalizations) {
	o.AppClipDefaultExperienceLocalizations = &v
}

// GetAppClipAppStoreReviewDetail returns the AppClipAppStoreReviewDetail field value if set, zero value otherwise.
func (o *AppClipDefaultExperienceRelationships) GetAppClipAppStoreReviewDetail() AppClipDefaultExperienceRelationshipsAppClipAppStoreReviewDetail {
	if o == nil || IsNil(o.AppClipAppStoreReviewDetail) {
		var ret AppClipDefaultExperienceRelationshipsAppClipAppStoreReviewDetail
		return ret
	}
	return *o.AppClipAppStoreReviewDetail
}

// GetAppClipAppStoreReviewDetailOk returns a tuple with the AppClipAppStoreReviewDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipDefaultExperienceRelationships) GetAppClipAppStoreReviewDetailOk() (*AppClipDefaultExperienceRelationshipsAppClipAppStoreReviewDetail, bool) {
	if o == nil || IsNil(o.AppClipAppStoreReviewDetail) {
		return nil, false
	}
	return o.AppClipAppStoreReviewDetail, true
}

// HasAppClipAppStoreReviewDetail returns a boolean if a field has been set.
func (o *AppClipDefaultExperienceRelationships) HasAppClipAppStoreReviewDetail() bool {
	if o != nil && !IsNil(o.AppClipAppStoreReviewDetail) {
		return true
	}

	return false
}

// SetAppClipAppStoreReviewDetail gets a reference to the given AppClipDefaultExperienceRelationshipsAppClipAppStoreReviewDetail and assigns it to the AppClipAppStoreReviewDetail field.
func (o *AppClipDefaultExperienceRelationships) SetAppClipAppStoreReviewDetail(v AppClipDefaultExperienceRelationshipsAppClipAppStoreReviewDetail) {
	o.AppClipAppStoreReviewDetail = &v
}

func (o AppClipDefaultExperienceRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppClipDefaultExperienceRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppClip) {
		toSerialize["appClip"] = o.AppClip
	}
	if !IsNil(o.ReleaseWithAppStoreVersion) {
		toSerialize["releaseWithAppStoreVersion"] = o.ReleaseWithAppStoreVersion
	}
	if !IsNil(o.AppClipDefaultExperienceLocalizations) {
		toSerialize["appClipDefaultExperienceLocalizations"] = o.AppClipDefaultExperienceLocalizations
	}
	if !IsNil(o.AppClipAppStoreReviewDetail) {
		toSerialize["appClipAppStoreReviewDetail"] = o.AppClipAppStoreReviewDetail
	}
	return toSerialize, nil
}

type NullableAppClipDefaultExperienceRelationships struct {
	value *AppClipDefaultExperienceRelationships
	isSet bool
}

func (v NullableAppClipDefaultExperienceRelationships) Get() *AppClipDefaultExperienceRelationships {
	return v.value
}

func (v *NullableAppClipDefaultExperienceRelationships) Set(val *AppClipDefaultExperienceRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppClipDefaultExperienceRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppClipDefaultExperienceRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppClipDefaultExperienceRelationships(val *AppClipDefaultExperienceRelationships) *NullableAppClipDefaultExperienceRelationships {
	return &NullableAppClipDefaultExperienceRelationships{value: val, isSet: true}
}

func (v NullableAppClipDefaultExperienceRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppClipDefaultExperienceRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


