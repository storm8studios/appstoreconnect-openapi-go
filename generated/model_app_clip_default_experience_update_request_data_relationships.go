/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppClipDefaultExperienceUpdateRequestDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppClipDefaultExperienceUpdateRequestDataRelationships{}

// AppClipDefaultExperienceUpdateRequestDataRelationships struct for AppClipDefaultExperienceUpdateRequestDataRelationships
type AppClipDefaultExperienceUpdateRequestDataRelationships struct {
	ReleaseWithAppStoreVersion *AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion `json:"releaseWithAppStoreVersion,omitempty"`
}

// NewAppClipDefaultExperienceUpdateRequestDataRelationships instantiates a new AppClipDefaultExperienceUpdateRequestDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppClipDefaultExperienceUpdateRequestDataRelationships() *AppClipDefaultExperienceUpdateRequestDataRelationships {
	this := AppClipDefaultExperienceUpdateRequestDataRelationships{}
	return &this
}

// NewAppClipDefaultExperienceUpdateRequestDataRelationshipsWithDefaults instantiates a new AppClipDefaultExperienceUpdateRequestDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppClipDefaultExperienceUpdateRequestDataRelationshipsWithDefaults() *AppClipDefaultExperienceUpdateRequestDataRelationships {
	this := AppClipDefaultExperienceUpdateRequestDataRelationships{}
	return &this
}

// GetReleaseWithAppStoreVersion returns the ReleaseWithAppStoreVersion field value if set, zero value otherwise.
func (o *AppClipDefaultExperienceUpdateRequestDataRelationships) GetReleaseWithAppStoreVersion() AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion {
	if o == nil || IsNil(o.ReleaseWithAppStoreVersion) {
		var ret AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion
		return ret
	}
	return *o.ReleaseWithAppStoreVersion
}

// GetReleaseWithAppStoreVersionOk returns a tuple with the ReleaseWithAppStoreVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipDefaultExperienceUpdateRequestDataRelationships) GetReleaseWithAppStoreVersionOk() (*AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion, bool) {
	if o == nil || IsNil(o.ReleaseWithAppStoreVersion) {
		return nil, false
	}
	return o.ReleaseWithAppStoreVersion, true
}

// HasReleaseWithAppStoreVersion returns a boolean if a field has been set.
func (o *AppClipDefaultExperienceUpdateRequestDataRelationships) HasReleaseWithAppStoreVersion() bool {
	if o != nil && !IsNil(o.ReleaseWithAppStoreVersion) {
		return true
	}

	return false
}

// SetReleaseWithAppStoreVersion gets a reference to the given AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion and assigns it to the ReleaseWithAppStoreVersion field.
func (o *AppClipDefaultExperienceUpdateRequestDataRelationships) SetReleaseWithAppStoreVersion(v AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion) {
	o.ReleaseWithAppStoreVersion = &v
}

func (o AppClipDefaultExperienceUpdateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppClipDefaultExperienceUpdateRequestDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReleaseWithAppStoreVersion) {
		toSerialize["releaseWithAppStoreVersion"] = o.ReleaseWithAppStoreVersion
	}
	return toSerialize, nil
}

type NullableAppClipDefaultExperienceUpdateRequestDataRelationships struct {
	value *AppClipDefaultExperienceUpdateRequestDataRelationships
	isSet bool
}

func (v NullableAppClipDefaultExperienceUpdateRequestDataRelationships) Get() *AppClipDefaultExperienceUpdateRequestDataRelationships {
	return v.value
}

func (v *NullableAppClipDefaultExperienceUpdateRequestDataRelationships) Set(val *AppClipDefaultExperienceUpdateRequestDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppClipDefaultExperienceUpdateRequestDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppClipDefaultExperienceUpdateRequestDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppClipDefaultExperienceUpdateRequestDataRelationships(val *AppClipDefaultExperienceUpdateRequestDataRelationships) *NullableAppClipDefaultExperienceUpdateRequestDataRelationships {
	return &NullableAppClipDefaultExperienceUpdateRequestDataRelationships{value: val, isSet: true}
}

func (v NullableAppClipDefaultExperienceUpdateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppClipDefaultExperienceUpdateRequestDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


