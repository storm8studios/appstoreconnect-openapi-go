/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppClipRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppClipRelationships{}

// AppClipRelationships struct for AppClipRelationships
type AppClipRelationships struct {
	App *AppAvailabilityRelationshipsApp `json:"app,omitempty"`
	AppClipDefaultExperiences *AppClipRelationshipsAppClipDefaultExperiences `json:"appClipDefaultExperiences,omitempty"`
}

// NewAppClipRelationships instantiates a new AppClipRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppClipRelationships() *AppClipRelationships {
	this := AppClipRelationships{}
	return &this
}

// NewAppClipRelationshipsWithDefaults instantiates a new AppClipRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppClipRelationshipsWithDefaults() *AppClipRelationships {
	this := AppClipRelationships{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *AppClipRelationships) GetApp() AppAvailabilityRelationshipsApp {
	if o == nil || IsNil(o.App) {
		var ret AppAvailabilityRelationshipsApp
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipRelationships) GetAppOk() (*AppAvailabilityRelationshipsApp, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *AppClipRelationships) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given AppAvailabilityRelationshipsApp and assigns it to the App field.
func (o *AppClipRelationships) SetApp(v AppAvailabilityRelationshipsApp) {
	o.App = &v
}

// GetAppClipDefaultExperiences returns the AppClipDefaultExperiences field value if set, zero value otherwise.
func (o *AppClipRelationships) GetAppClipDefaultExperiences() AppClipRelationshipsAppClipDefaultExperiences {
	if o == nil || IsNil(o.AppClipDefaultExperiences) {
		var ret AppClipRelationshipsAppClipDefaultExperiences
		return ret
	}
	return *o.AppClipDefaultExperiences
}

// GetAppClipDefaultExperiencesOk returns a tuple with the AppClipDefaultExperiences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppClipRelationships) GetAppClipDefaultExperiencesOk() (*AppClipRelationshipsAppClipDefaultExperiences, bool) {
	if o == nil || IsNil(o.AppClipDefaultExperiences) {
		return nil, false
	}
	return o.AppClipDefaultExperiences, true
}

// HasAppClipDefaultExperiences returns a boolean if a field has been set.
func (o *AppClipRelationships) HasAppClipDefaultExperiences() bool {
	if o != nil && !IsNil(o.AppClipDefaultExperiences) {
		return true
	}

	return false
}

// SetAppClipDefaultExperiences gets a reference to the given AppClipRelationshipsAppClipDefaultExperiences and assigns it to the AppClipDefaultExperiences field.
func (o *AppClipRelationships) SetAppClipDefaultExperiences(v AppClipRelationshipsAppClipDefaultExperiences) {
	o.AppClipDefaultExperiences = &v
}

func (o AppClipRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppClipRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.AppClipDefaultExperiences) {
		toSerialize["appClipDefaultExperiences"] = o.AppClipDefaultExperiences
	}
	return toSerialize, nil
}

type NullableAppClipRelationships struct {
	value *AppClipRelationships
	isSet bool
}

func (v NullableAppClipRelationships) Get() *AppClipRelationships {
	return v.value
}

func (v *NullableAppClipRelationships) Set(val *AppClipRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppClipRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppClipRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppClipRelationships(val *AppClipRelationships) *NullableAppClipRelationships {
	return &NullableAppClipRelationships{value: val, isSet: true}
}

func (v NullableAppClipRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppClipRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


