/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppEventScreenshotRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppEventScreenshotRelationships{}

// AppEventScreenshotRelationships struct for AppEventScreenshotRelationships
type AppEventScreenshotRelationships struct {
	AppEventLocalization *AppEventScreenshotRelationshipsAppEventLocalization `json:"appEventLocalization,omitempty"`
}

// NewAppEventScreenshotRelationships instantiates a new AppEventScreenshotRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppEventScreenshotRelationships() *AppEventScreenshotRelationships {
	this := AppEventScreenshotRelationships{}
	return &this
}

// NewAppEventScreenshotRelationshipsWithDefaults instantiates a new AppEventScreenshotRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppEventScreenshotRelationshipsWithDefaults() *AppEventScreenshotRelationships {
	this := AppEventScreenshotRelationships{}
	return &this
}

// GetAppEventLocalization returns the AppEventLocalization field value if set, zero value otherwise.
func (o *AppEventScreenshotRelationships) GetAppEventLocalization() AppEventScreenshotRelationshipsAppEventLocalization {
	if o == nil || IsNil(o.AppEventLocalization) {
		var ret AppEventScreenshotRelationshipsAppEventLocalization
		return ret
	}
	return *o.AppEventLocalization
}

// GetAppEventLocalizationOk returns a tuple with the AppEventLocalization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppEventScreenshotRelationships) GetAppEventLocalizationOk() (*AppEventScreenshotRelationshipsAppEventLocalization, bool) {
	if o == nil || IsNil(o.AppEventLocalization) {
		return nil, false
	}
	return o.AppEventLocalization, true
}

// HasAppEventLocalization returns a boolean if a field has been set.
func (o *AppEventScreenshotRelationships) HasAppEventLocalization() bool {
	if o != nil && !IsNil(o.AppEventLocalization) {
		return true
	}

	return false
}

// SetAppEventLocalization gets a reference to the given AppEventScreenshotRelationshipsAppEventLocalization and assigns it to the AppEventLocalization field.
func (o *AppEventScreenshotRelationships) SetAppEventLocalization(v AppEventScreenshotRelationshipsAppEventLocalization) {
	o.AppEventLocalization = &v
}

func (o AppEventScreenshotRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppEventScreenshotRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppEventLocalization) {
		toSerialize["appEventLocalization"] = o.AppEventLocalization
	}
	return toSerialize, nil
}

type NullableAppEventScreenshotRelationships struct {
	value *AppEventScreenshotRelationships
	isSet bool
}

func (v NullableAppEventScreenshotRelationships) Get() *AppEventScreenshotRelationships {
	return v.value
}

func (v *NullableAppEventScreenshotRelationships) Set(val *AppEventScreenshotRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppEventScreenshotRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppEventScreenshotRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppEventScreenshotRelationships(val *AppEventScreenshotRelationships) *NullableAppEventScreenshotRelationships {
	return &NullableAppEventScreenshotRelationships{value: val, isSet: true}
}

func (v NullableAppEventScreenshotRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppEventScreenshotRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


