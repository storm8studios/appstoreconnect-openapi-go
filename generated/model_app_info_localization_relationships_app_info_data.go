/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppInfoLocalizationRelationshipsAppInfoData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppInfoLocalizationRelationshipsAppInfoData{}

// AppInfoLocalizationRelationshipsAppInfoData struct for AppInfoLocalizationRelationshipsAppInfoData
type AppInfoLocalizationRelationshipsAppInfoData struct {
	Type string `json:"type"`
	Id string `json:"id"`
}

// NewAppInfoLocalizationRelationshipsAppInfoData instantiates a new AppInfoLocalizationRelationshipsAppInfoData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppInfoLocalizationRelationshipsAppInfoData(type_ string, id string) *AppInfoLocalizationRelationshipsAppInfoData {
	this := AppInfoLocalizationRelationshipsAppInfoData{}
	this.Type = type_
	this.Id = id
	return &this
}

// NewAppInfoLocalizationRelationshipsAppInfoDataWithDefaults instantiates a new AppInfoLocalizationRelationshipsAppInfoData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppInfoLocalizationRelationshipsAppInfoDataWithDefaults() *AppInfoLocalizationRelationshipsAppInfoData {
	this := AppInfoLocalizationRelationshipsAppInfoData{}
	return &this
}

// GetType returns the Type field value
func (o *AppInfoLocalizationRelationshipsAppInfoData) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AppInfoLocalizationRelationshipsAppInfoData) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AppInfoLocalizationRelationshipsAppInfoData) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *AppInfoLocalizationRelationshipsAppInfoData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AppInfoLocalizationRelationshipsAppInfoData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AppInfoLocalizationRelationshipsAppInfoData) SetId(v string) {
	o.Id = v
}

func (o AppInfoLocalizationRelationshipsAppInfoData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppInfoLocalizationRelationshipsAppInfoData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableAppInfoLocalizationRelationshipsAppInfoData struct {
	value *AppInfoLocalizationRelationshipsAppInfoData
	isSet bool
}

func (v NullableAppInfoLocalizationRelationshipsAppInfoData) Get() *AppInfoLocalizationRelationshipsAppInfoData {
	return v.value
}

func (v *NullableAppInfoLocalizationRelationshipsAppInfoData) Set(val *AppInfoLocalizationRelationshipsAppInfoData) {
	v.value = val
	v.isSet = true
}

func (v NullableAppInfoLocalizationRelationshipsAppInfoData) IsSet() bool {
	return v.isSet
}

func (v *NullableAppInfoLocalizationRelationshipsAppInfoData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppInfoLocalizationRelationshipsAppInfoData(val *AppInfoLocalizationRelationshipsAppInfoData) *NullableAppInfoLocalizationRelationshipsAppInfoData {
	return &NullableAppInfoLocalizationRelationshipsAppInfoData{value: val, isSet: true}
}

func (v NullableAppInfoLocalizationRelationshipsAppInfoData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppInfoLocalizationRelationshipsAppInfoData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


