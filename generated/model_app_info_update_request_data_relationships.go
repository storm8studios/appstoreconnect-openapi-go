/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppInfoUpdateRequestDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppInfoUpdateRequestDataRelationships{}

// AppInfoUpdateRequestDataRelationships struct for AppInfoUpdateRequestDataRelationships
type AppInfoUpdateRequestDataRelationships struct {
	PrimaryCategory *AppInfoUpdateRequestDataRelationshipsPrimaryCategory `json:"primaryCategory,omitempty"`
	PrimarySubcategoryOne *AppInfoUpdateRequestDataRelationshipsPrimaryCategory `json:"primarySubcategoryOne,omitempty"`
	PrimarySubcategoryTwo *AppInfoUpdateRequestDataRelationshipsPrimaryCategory `json:"primarySubcategoryTwo,omitempty"`
	SecondaryCategory *AppInfoUpdateRequestDataRelationshipsPrimaryCategory `json:"secondaryCategory,omitempty"`
	SecondarySubcategoryOne *AppInfoUpdateRequestDataRelationshipsPrimaryCategory `json:"secondarySubcategoryOne,omitempty"`
	SecondarySubcategoryTwo *AppInfoUpdateRequestDataRelationshipsPrimaryCategory `json:"secondarySubcategoryTwo,omitempty"`
}

// NewAppInfoUpdateRequestDataRelationships instantiates a new AppInfoUpdateRequestDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppInfoUpdateRequestDataRelationships() *AppInfoUpdateRequestDataRelationships {
	this := AppInfoUpdateRequestDataRelationships{}
	return &this
}

// NewAppInfoUpdateRequestDataRelationshipsWithDefaults instantiates a new AppInfoUpdateRequestDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppInfoUpdateRequestDataRelationshipsWithDefaults() *AppInfoUpdateRequestDataRelationships {
	this := AppInfoUpdateRequestDataRelationships{}
	return &this
}

// GetPrimaryCategory returns the PrimaryCategory field value if set, zero value otherwise.
func (o *AppInfoUpdateRequestDataRelationships) GetPrimaryCategory() AppInfoUpdateRequestDataRelationshipsPrimaryCategory {
	if o == nil || IsNil(o.PrimaryCategory) {
		var ret AppInfoUpdateRequestDataRelationshipsPrimaryCategory
		return ret
	}
	return *o.PrimaryCategory
}

// GetPrimaryCategoryOk returns a tuple with the PrimaryCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfoUpdateRequestDataRelationships) GetPrimaryCategoryOk() (*AppInfoUpdateRequestDataRelationshipsPrimaryCategory, bool) {
	if o == nil || IsNil(o.PrimaryCategory) {
		return nil, false
	}
	return o.PrimaryCategory, true
}

// HasPrimaryCategory returns a boolean if a field has been set.
func (o *AppInfoUpdateRequestDataRelationships) HasPrimaryCategory() bool {
	if o != nil && !IsNil(o.PrimaryCategory) {
		return true
	}

	return false
}

// SetPrimaryCategory gets a reference to the given AppInfoUpdateRequestDataRelationshipsPrimaryCategory and assigns it to the PrimaryCategory field.
func (o *AppInfoUpdateRequestDataRelationships) SetPrimaryCategory(v AppInfoUpdateRequestDataRelationshipsPrimaryCategory) {
	o.PrimaryCategory = &v
}

// GetPrimarySubcategoryOne returns the PrimarySubcategoryOne field value if set, zero value otherwise.
func (o *AppInfoUpdateRequestDataRelationships) GetPrimarySubcategoryOne() AppInfoUpdateRequestDataRelationshipsPrimaryCategory {
	if o == nil || IsNil(o.PrimarySubcategoryOne) {
		var ret AppInfoUpdateRequestDataRelationshipsPrimaryCategory
		return ret
	}
	return *o.PrimarySubcategoryOne
}

// GetPrimarySubcategoryOneOk returns a tuple with the PrimarySubcategoryOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfoUpdateRequestDataRelationships) GetPrimarySubcategoryOneOk() (*AppInfoUpdateRequestDataRelationshipsPrimaryCategory, bool) {
	if o == nil || IsNil(o.PrimarySubcategoryOne) {
		return nil, false
	}
	return o.PrimarySubcategoryOne, true
}

// HasPrimarySubcategoryOne returns a boolean if a field has been set.
func (o *AppInfoUpdateRequestDataRelationships) HasPrimarySubcategoryOne() bool {
	if o != nil && !IsNil(o.PrimarySubcategoryOne) {
		return true
	}

	return false
}

// SetPrimarySubcategoryOne gets a reference to the given AppInfoUpdateRequestDataRelationshipsPrimaryCategory and assigns it to the PrimarySubcategoryOne field.
func (o *AppInfoUpdateRequestDataRelationships) SetPrimarySubcategoryOne(v AppInfoUpdateRequestDataRelationshipsPrimaryCategory) {
	o.PrimarySubcategoryOne = &v
}

// GetPrimarySubcategoryTwo returns the PrimarySubcategoryTwo field value if set, zero value otherwise.
func (o *AppInfoUpdateRequestDataRelationships) GetPrimarySubcategoryTwo() AppInfoUpdateRequestDataRelationshipsPrimaryCategory {
	if o == nil || IsNil(o.PrimarySubcategoryTwo) {
		var ret AppInfoUpdateRequestDataRelationshipsPrimaryCategory
		return ret
	}
	return *o.PrimarySubcategoryTwo
}

// GetPrimarySubcategoryTwoOk returns a tuple with the PrimarySubcategoryTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfoUpdateRequestDataRelationships) GetPrimarySubcategoryTwoOk() (*AppInfoUpdateRequestDataRelationshipsPrimaryCategory, bool) {
	if o == nil || IsNil(o.PrimarySubcategoryTwo) {
		return nil, false
	}
	return o.PrimarySubcategoryTwo, true
}

// HasPrimarySubcategoryTwo returns a boolean if a field has been set.
func (o *AppInfoUpdateRequestDataRelationships) HasPrimarySubcategoryTwo() bool {
	if o != nil && !IsNil(o.PrimarySubcategoryTwo) {
		return true
	}

	return false
}

// SetPrimarySubcategoryTwo gets a reference to the given AppInfoUpdateRequestDataRelationshipsPrimaryCategory and assigns it to the PrimarySubcategoryTwo field.
func (o *AppInfoUpdateRequestDataRelationships) SetPrimarySubcategoryTwo(v AppInfoUpdateRequestDataRelationshipsPrimaryCategory) {
	o.PrimarySubcategoryTwo = &v
}

// GetSecondaryCategory returns the SecondaryCategory field value if set, zero value otherwise.
func (o *AppInfoUpdateRequestDataRelationships) GetSecondaryCategory() AppInfoUpdateRequestDataRelationshipsPrimaryCategory {
	if o == nil || IsNil(o.SecondaryCategory) {
		var ret AppInfoUpdateRequestDataRelationshipsPrimaryCategory
		return ret
	}
	return *o.SecondaryCategory
}

// GetSecondaryCategoryOk returns a tuple with the SecondaryCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfoUpdateRequestDataRelationships) GetSecondaryCategoryOk() (*AppInfoUpdateRequestDataRelationshipsPrimaryCategory, bool) {
	if o == nil || IsNil(o.SecondaryCategory) {
		return nil, false
	}
	return o.SecondaryCategory, true
}

// HasSecondaryCategory returns a boolean if a field has been set.
func (o *AppInfoUpdateRequestDataRelationships) HasSecondaryCategory() bool {
	if o != nil && !IsNil(o.SecondaryCategory) {
		return true
	}

	return false
}

// SetSecondaryCategory gets a reference to the given AppInfoUpdateRequestDataRelationshipsPrimaryCategory and assigns it to the SecondaryCategory field.
func (o *AppInfoUpdateRequestDataRelationships) SetSecondaryCategory(v AppInfoUpdateRequestDataRelationshipsPrimaryCategory) {
	o.SecondaryCategory = &v
}

// GetSecondarySubcategoryOne returns the SecondarySubcategoryOne field value if set, zero value otherwise.
func (o *AppInfoUpdateRequestDataRelationships) GetSecondarySubcategoryOne() AppInfoUpdateRequestDataRelationshipsPrimaryCategory {
	if o == nil || IsNil(o.SecondarySubcategoryOne) {
		var ret AppInfoUpdateRequestDataRelationshipsPrimaryCategory
		return ret
	}
	return *o.SecondarySubcategoryOne
}

// GetSecondarySubcategoryOneOk returns a tuple with the SecondarySubcategoryOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfoUpdateRequestDataRelationships) GetSecondarySubcategoryOneOk() (*AppInfoUpdateRequestDataRelationshipsPrimaryCategory, bool) {
	if o == nil || IsNil(o.SecondarySubcategoryOne) {
		return nil, false
	}
	return o.SecondarySubcategoryOne, true
}

// HasSecondarySubcategoryOne returns a boolean if a field has been set.
func (o *AppInfoUpdateRequestDataRelationships) HasSecondarySubcategoryOne() bool {
	if o != nil && !IsNil(o.SecondarySubcategoryOne) {
		return true
	}

	return false
}

// SetSecondarySubcategoryOne gets a reference to the given AppInfoUpdateRequestDataRelationshipsPrimaryCategory and assigns it to the SecondarySubcategoryOne field.
func (o *AppInfoUpdateRequestDataRelationships) SetSecondarySubcategoryOne(v AppInfoUpdateRequestDataRelationshipsPrimaryCategory) {
	o.SecondarySubcategoryOne = &v
}

// GetSecondarySubcategoryTwo returns the SecondarySubcategoryTwo field value if set, zero value otherwise.
func (o *AppInfoUpdateRequestDataRelationships) GetSecondarySubcategoryTwo() AppInfoUpdateRequestDataRelationshipsPrimaryCategory {
	if o == nil || IsNil(o.SecondarySubcategoryTwo) {
		var ret AppInfoUpdateRequestDataRelationshipsPrimaryCategory
		return ret
	}
	return *o.SecondarySubcategoryTwo
}

// GetSecondarySubcategoryTwoOk returns a tuple with the SecondarySubcategoryTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfoUpdateRequestDataRelationships) GetSecondarySubcategoryTwoOk() (*AppInfoUpdateRequestDataRelationshipsPrimaryCategory, bool) {
	if o == nil || IsNil(o.SecondarySubcategoryTwo) {
		return nil, false
	}
	return o.SecondarySubcategoryTwo, true
}

// HasSecondarySubcategoryTwo returns a boolean if a field has been set.
func (o *AppInfoUpdateRequestDataRelationships) HasSecondarySubcategoryTwo() bool {
	if o != nil && !IsNil(o.SecondarySubcategoryTwo) {
		return true
	}

	return false
}

// SetSecondarySubcategoryTwo gets a reference to the given AppInfoUpdateRequestDataRelationshipsPrimaryCategory and assigns it to the SecondarySubcategoryTwo field.
func (o *AppInfoUpdateRequestDataRelationships) SetSecondarySubcategoryTwo(v AppInfoUpdateRequestDataRelationshipsPrimaryCategory) {
	o.SecondarySubcategoryTwo = &v
}

func (o AppInfoUpdateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppInfoUpdateRequestDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrimaryCategory) {
		toSerialize["primaryCategory"] = o.PrimaryCategory
	}
	if !IsNil(o.PrimarySubcategoryOne) {
		toSerialize["primarySubcategoryOne"] = o.PrimarySubcategoryOne
	}
	if !IsNil(o.PrimarySubcategoryTwo) {
		toSerialize["primarySubcategoryTwo"] = o.PrimarySubcategoryTwo
	}
	if !IsNil(o.SecondaryCategory) {
		toSerialize["secondaryCategory"] = o.SecondaryCategory
	}
	if !IsNil(o.SecondarySubcategoryOne) {
		toSerialize["secondarySubcategoryOne"] = o.SecondarySubcategoryOne
	}
	if !IsNil(o.SecondarySubcategoryTwo) {
		toSerialize["secondarySubcategoryTwo"] = o.SecondarySubcategoryTwo
	}
	return toSerialize, nil
}

type NullableAppInfoUpdateRequestDataRelationships struct {
	value *AppInfoUpdateRequestDataRelationships
	isSet bool
}

func (v NullableAppInfoUpdateRequestDataRelationships) Get() *AppInfoUpdateRequestDataRelationships {
	return v.value
}

func (v *NullableAppInfoUpdateRequestDataRelationships) Set(val *AppInfoUpdateRequestDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppInfoUpdateRequestDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppInfoUpdateRequestDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppInfoUpdateRequestDataRelationships(val *AppInfoUpdateRequestDataRelationships) *NullableAppInfoUpdateRequestDataRelationships {
	return &NullableAppInfoUpdateRequestDataRelationships{value: val, isSet: true}
}

func (v NullableAppInfoUpdateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppInfoUpdateRequestDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


