/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppPricePointV2Relationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppPricePointV2Relationships{}

// AppPricePointV2Relationships struct for AppPricePointV2Relationships
type AppPricePointV2Relationships struct {
	App *AppAvailabilityRelationshipsApp `json:"app,omitempty"`
	PriceTier *AppPricePointV2RelationshipsPriceTier `json:"priceTier,omitempty"`
	Territory *AppPricePointV2RelationshipsTerritory `json:"territory,omitempty"`
}

// NewAppPricePointV2Relationships instantiates a new AppPricePointV2Relationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppPricePointV2Relationships() *AppPricePointV2Relationships {
	this := AppPricePointV2Relationships{}
	return &this
}

// NewAppPricePointV2RelationshipsWithDefaults instantiates a new AppPricePointV2Relationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppPricePointV2RelationshipsWithDefaults() *AppPricePointV2Relationships {
	this := AppPricePointV2Relationships{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *AppPricePointV2Relationships) GetApp() AppAvailabilityRelationshipsApp {
	if o == nil || IsNil(o.App) {
		var ret AppAvailabilityRelationshipsApp
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricePointV2Relationships) GetAppOk() (*AppAvailabilityRelationshipsApp, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *AppPricePointV2Relationships) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given AppAvailabilityRelationshipsApp and assigns it to the App field.
func (o *AppPricePointV2Relationships) SetApp(v AppAvailabilityRelationshipsApp) {
	o.App = &v
}

// GetPriceTier returns the PriceTier field value if set, zero value otherwise.
func (o *AppPricePointV2Relationships) GetPriceTier() AppPricePointV2RelationshipsPriceTier {
	if o == nil || IsNil(o.PriceTier) {
		var ret AppPricePointV2RelationshipsPriceTier
		return ret
	}
	return *o.PriceTier
}

// GetPriceTierOk returns a tuple with the PriceTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricePointV2Relationships) GetPriceTierOk() (*AppPricePointV2RelationshipsPriceTier, bool) {
	if o == nil || IsNil(o.PriceTier) {
		return nil, false
	}
	return o.PriceTier, true
}

// HasPriceTier returns a boolean if a field has been set.
func (o *AppPricePointV2Relationships) HasPriceTier() bool {
	if o != nil && !IsNil(o.PriceTier) {
		return true
	}

	return false
}

// SetPriceTier gets a reference to the given AppPricePointV2RelationshipsPriceTier and assigns it to the PriceTier field.
func (o *AppPricePointV2Relationships) SetPriceTier(v AppPricePointV2RelationshipsPriceTier) {
	o.PriceTier = &v
}

// GetTerritory returns the Territory field value if set, zero value otherwise.
func (o *AppPricePointV2Relationships) GetTerritory() AppPricePointV2RelationshipsTerritory {
	if o == nil || IsNil(o.Territory) {
		var ret AppPricePointV2RelationshipsTerritory
		return ret
	}
	return *o.Territory
}

// GetTerritoryOk returns a tuple with the Territory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricePointV2Relationships) GetTerritoryOk() (*AppPricePointV2RelationshipsTerritory, bool) {
	if o == nil || IsNil(o.Territory) {
		return nil, false
	}
	return o.Territory, true
}

// HasTerritory returns a boolean if a field has been set.
func (o *AppPricePointV2Relationships) HasTerritory() bool {
	if o != nil && !IsNil(o.Territory) {
		return true
	}

	return false
}

// SetTerritory gets a reference to the given AppPricePointV2RelationshipsTerritory and assigns it to the Territory field.
func (o *AppPricePointV2Relationships) SetTerritory(v AppPricePointV2RelationshipsTerritory) {
	o.Territory = &v
}

func (o AppPricePointV2Relationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppPricePointV2Relationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.PriceTier) {
		toSerialize["priceTier"] = o.PriceTier
	}
	if !IsNil(o.Territory) {
		toSerialize["territory"] = o.Territory
	}
	return toSerialize, nil
}

type NullableAppPricePointV2Relationships struct {
	value *AppPricePointV2Relationships
	isSet bool
}

func (v NullableAppPricePointV2Relationships) Get() *AppPricePointV2Relationships {
	return v.value
}

func (v *NullableAppPricePointV2Relationships) Set(val *AppPricePointV2Relationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppPricePointV2Relationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppPricePointV2Relationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppPricePointV2Relationships(val *AppPricePointV2Relationships) *NullableAppPricePointV2Relationships {
	return &NullableAppPricePointV2Relationships{value: val, isSet: true}
}

func (v NullableAppPricePointV2Relationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppPricePointV2Relationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


