/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppPriceScheduleRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppPriceScheduleRelationships{}

// AppPriceScheduleRelationships struct for AppPriceScheduleRelationships
type AppPriceScheduleRelationships struct {
	App *AppAvailabilityRelationshipsApp `json:"app,omitempty"`
	BaseTerritory *AppPricePointV2RelationshipsTerritory `json:"baseTerritory,omitempty"`
	ManualPrices *AppPriceScheduleRelationshipsManualPrices `json:"manualPrices,omitempty"`
	AutomaticPrices *AppPriceScheduleRelationshipsManualPrices `json:"automaticPrices,omitempty"`
}

// NewAppPriceScheduleRelationships instantiates a new AppPriceScheduleRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppPriceScheduleRelationships() *AppPriceScheduleRelationships {
	this := AppPriceScheduleRelationships{}
	return &this
}

// NewAppPriceScheduleRelationshipsWithDefaults instantiates a new AppPriceScheduleRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppPriceScheduleRelationshipsWithDefaults() *AppPriceScheduleRelationships {
	this := AppPriceScheduleRelationships{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *AppPriceScheduleRelationships) GetApp() AppAvailabilityRelationshipsApp {
	if o == nil || IsNil(o.App) {
		var ret AppAvailabilityRelationshipsApp
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPriceScheduleRelationships) GetAppOk() (*AppAvailabilityRelationshipsApp, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *AppPriceScheduleRelationships) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given AppAvailabilityRelationshipsApp and assigns it to the App field.
func (o *AppPriceScheduleRelationships) SetApp(v AppAvailabilityRelationshipsApp) {
	o.App = &v
}

// GetBaseTerritory returns the BaseTerritory field value if set, zero value otherwise.
func (o *AppPriceScheduleRelationships) GetBaseTerritory() AppPricePointV2RelationshipsTerritory {
	if o == nil || IsNil(o.BaseTerritory) {
		var ret AppPricePointV2RelationshipsTerritory
		return ret
	}
	return *o.BaseTerritory
}

// GetBaseTerritoryOk returns a tuple with the BaseTerritory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPriceScheduleRelationships) GetBaseTerritoryOk() (*AppPricePointV2RelationshipsTerritory, bool) {
	if o == nil || IsNil(o.BaseTerritory) {
		return nil, false
	}
	return o.BaseTerritory, true
}

// HasBaseTerritory returns a boolean if a field has been set.
func (o *AppPriceScheduleRelationships) HasBaseTerritory() bool {
	if o != nil && !IsNil(o.BaseTerritory) {
		return true
	}

	return false
}

// SetBaseTerritory gets a reference to the given AppPricePointV2RelationshipsTerritory and assigns it to the BaseTerritory field.
func (o *AppPriceScheduleRelationships) SetBaseTerritory(v AppPricePointV2RelationshipsTerritory) {
	o.BaseTerritory = &v
}

// GetManualPrices returns the ManualPrices field value if set, zero value otherwise.
func (o *AppPriceScheduleRelationships) GetManualPrices() AppPriceScheduleRelationshipsManualPrices {
	if o == nil || IsNil(o.ManualPrices) {
		var ret AppPriceScheduleRelationshipsManualPrices
		return ret
	}
	return *o.ManualPrices
}

// GetManualPricesOk returns a tuple with the ManualPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPriceScheduleRelationships) GetManualPricesOk() (*AppPriceScheduleRelationshipsManualPrices, bool) {
	if o == nil || IsNil(o.ManualPrices) {
		return nil, false
	}
	return o.ManualPrices, true
}

// HasManualPrices returns a boolean if a field has been set.
func (o *AppPriceScheduleRelationships) HasManualPrices() bool {
	if o != nil && !IsNil(o.ManualPrices) {
		return true
	}

	return false
}

// SetManualPrices gets a reference to the given AppPriceScheduleRelationshipsManualPrices and assigns it to the ManualPrices field.
func (o *AppPriceScheduleRelationships) SetManualPrices(v AppPriceScheduleRelationshipsManualPrices) {
	o.ManualPrices = &v
}

// GetAutomaticPrices returns the AutomaticPrices field value if set, zero value otherwise.
func (o *AppPriceScheduleRelationships) GetAutomaticPrices() AppPriceScheduleRelationshipsManualPrices {
	if o == nil || IsNil(o.AutomaticPrices) {
		var ret AppPriceScheduleRelationshipsManualPrices
		return ret
	}
	return *o.AutomaticPrices
}

// GetAutomaticPricesOk returns a tuple with the AutomaticPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPriceScheduleRelationships) GetAutomaticPricesOk() (*AppPriceScheduleRelationshipsManualPrices, bool) {
	if o == nil || IsNil(o.AutomaticPrices) {
		return nil, false
	}
	return o.AutomaticPrices, true
}

// HasAutomaticPrices returns a boolean if a field has been set.
func (o *AppPriceScheduleRelationships) HasAutomaticPrices() bool {
	if o != nil && !IsNil(o.AutomaticPrices) {
		return true
	}

	return false
}

// SetAutomaticPrices gets a reference to the given AppPriceScheduleRelationshipsManualPrices and assigns it to the AutomaticPrices field.
func (o *AppPriceScheduleRelationships) SetAutomaticPrices(v AppPriceScheduleRelationshipsManualPrices) {
	o.AutomaticPrices = &v
}

func (o AppPriceScheduleRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppPriceScheduleRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.BaseTerritory) {
		toSerialize["baseTerritory"] = o.BaseTerritory
	}
	if !IsNil(o.ManualPrices) {
		toSerialize["manualPrices"] = o.ManualPrices
	}
	if !IsNil(o.AutomaticPrices) {
		toSerialize["automaticPrices"] = o.AutomaticPrices
	}
	return toSerialize, nil
}

type NullableAppPriceScheduleRelationships struct {
	value *AppPriceScheduleRelationships
	isSet bool
}

func (v NullableAppPriceScheduleRelationships) Get() *AppPriceScheduleRelationships {
	return v.value
}

func (v *NullableAppPriceScheduleRelationships) Set(val *AppPriceScheduleRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppPriceScheduleRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppPriceScheduleRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppPriceScheduleRelationships(val *AppPriceScheduleRelationships) *NullableAppPriceScheduleRelationships {
	return &NullableAppPriceScheduleRelationships{value: val, isSet: true}
}

func (v NullableAppPriceScheduleRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppPriceScheduleRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


