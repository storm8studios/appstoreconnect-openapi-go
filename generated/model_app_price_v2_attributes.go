/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppPriceV2Attributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppPriceV2Attributes{}

// AppPriceV2Attributes struct for AppPriceV2Attributes
type AppPriceV2Attributes struct {
	Manual *bool `json:"manual,omitempty"`
	StartDate *string `json:"startDate,omitempty"`
	EndDate *string `json:"endDate,omitempty"`
}

// NewAppPriceV2Attributes instantiates a new AppPriceV2Attributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppPriceV2Attributes() *AppPriceV2Attributes {
	this := AppPriceV2Attributes{}
	return &this
}

// NewAppPriceV2AttributesWithDefaults instantiates a new AppPriceV2Attributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppPriceV2AttributesWithDefaults() *AppPriceV2Attributes {
	this := AppPriceV2Attributes{}
	return &this
}

// GetManual returns the Manual field value if set, zero value otherwise.
func (o *AppPriceV2Attributes) GetManual() bool {
	if o == nil || IsNil(o.Manual) {
		var ret bool
		return ret
	}
	return *o.Manual
}

// GetManualOk returns a tuple with the Manual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPriceV2Attributes) GetManualOk() (*bool, bool) {
	if o == nil || IsNil(o.Manual) {
		return nil, false
	}
	return o.Manual, true
}

// HasManual returns a boolean if a field has been set.
func (o *AppPriceV2Attributes) HasManual() bool {
	if o != nil && !IsNil(o.Manual) {
		return true
	}

	return false
}

// SetManual gets a reference to the given bool and assigns it to the Manual field.
func (o *AppPriceV2Attributes) SetManual(v bool) {
	o.Manual = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *AppPriceV2Attributes) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPriceV2Attributes) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *AppPriceV2Attributes) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *AppPriceV2Attributes) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *AppPriceV2Attributes) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPriceV2Attributes) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *AppPriceV2Attributes) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *AppPriceV2Attributes) SetEndDate(v string) {
	o.EndDate = &v
}

func (o AppPriceV2Attributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppPriceV2Attributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Manual) {
		toSerialize["manual"] = o.Manual
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	return toSerialize, nil
}

type NullableAppPriceV2Attributes struct {
	value *AppPriceV2Attributes
	isSet bool
}

func (v NullableAppPriceV2Attributes) Get() *AppPriceV2Attributes {
	return v.value
}

func (v *NullableAppPriceV2Attributes) Set(val *AppPriceV2Attributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAppPriceV2Attributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAppPriceV2Attributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppPriceV2Attributes(val *AppPriceV2Attributes) *NullableAppPriceV2Attributes {
	return &NullableAppPriceV2Attributes{value: val, isSet: true}
}

func (v NullableAppPriceV2Attributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppPriceV2Attributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


