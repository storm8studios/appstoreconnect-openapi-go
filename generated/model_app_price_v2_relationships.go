/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppPriceV2Relationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppPriceV2Relationships{}

// AppPriceV2Relationships struct for AppPriceV2Relationships
type AppPriceV2Relationships struct {
	AppPricePoint *AppPriceV2RelationshipsAppPricePoint `json:"appPricePoint,omitempty"`
	Territory *AppPricePointV2RelationshipsTerritory `json:"territory,omitempty"`
}

// NewAppPriceV2Relationships instantiates a new AppPriceV2Relationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppPriceV2Relationships() *AppPriceV2Relationships {
	this := AppPriceV2Relationships{}
	return &this
}

// NewAppPriceV2RelationshipsWithDefaults instantiates a new AppPriceV2Relationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppPriceV2RelationshipsWithDefaults() *AppPriceV2Relationships {
	this := AppPriceV2Relationships{}
	return &this
}

// GetAppPricePoint returns the AppPricePoint field value if set, zero value otherwise.
func (o *AppPriceV2Relationships) GetAppPricePoint() AppPriceV2RelationshipsAppPricePoint {
	if o == nil || IsNil(o.AppPricePoint) {
		var ret AppPriceV2RelationshipsAppPricePoint
		return ret
	}
	return *o.AppPricePoint
}

// GetAppPricePointOk returns a tuple with the AppPricePoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPriceV2Relationships) GetAppPricePointOk() (*AppPriceV2RelationshipsAppPricePoint, bool) {
	if o == nil || IsNil(o.AppPricePoint) {
		return nil, false
	}
	return o.AppPricePoint, true
}

// HasAppPricePoint returns a boolean if a field has been set.
func (o *AppPriceV2Relationships) HasAppPricePoint() bool {
	if o != nil && !IsNil(o.AppPricePoint) {
		return true
	}

	return false
}

// SetAppPricePoint gets a reference to the given AppPriceV2RelationshipsAppPricePoint and assigns it to the AppPricePoint field.
func (o *AppPriceV2Relationships) SetAppPricePoint(v AppPriceV2RelationshipsAppPricePoint) {
	o.AppPricePoint = &v
}

// GetTerritory returns the Territory field value if set, zero value otherwise.
func (o *AppPriceV2Relationships) GetTerritory() AppPricePointV2RelationshipsTerritory {
	if o == nil || IsNil(o.Territory) {
		var ret AppPricePointV2RelationshipsTerritory
		return ret
	}
	return *o.Territory
}

// GetTerritoryOk returns a tuple with the Territory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPriceV2Relationships) GetTerritoryOk() (*AppPricePointV2RelationshipsTerritory, bool) {
	if o == nil || IsNil(o.Territory) {
		return nil, false
	}
	return o.Territory, true
}

// HasTerritory returns a boolean if a field has been set.
func (o *AppPriceV2Relationships) HasTerritory() bool {
	if o != nil && !IsNil(o.Territory) {
		return true
	}

	return false
}

// SetTerritory gets a reference to the given AppPricePointV2RelationshipsTerritory and assigns it to the Territory field.
func (o *AppPriceV2Relationships) SetTerritory(v AppPricePointV2RelationshipsTerritory) {
	o.Territory = &v
}

func (o AppPriceV2Relationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppPriceV2Relationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppPricePoint) {
		toSerialize["appPricePoint"] = o.AppPricePoint
	}
	if !IsNil(o.Territory) {
		toSerialize["territory"] = o.Territory
	}
	return toSerialize, nil
}

type NullableAppPriceV2Relationships struct {
	value *AppPriceV2Relationships
	isSet bool
}

func (v NullableAppPriceV2Relationships) Get() *AppPriceV2Relationships {
	return v.value
}

func (v *NullableAppPriceV2Relationships) Set(val *AppPriceV2Relationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppPriceV2Relationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppPriceV2Relationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppPriceV2Relationships(val *AppPriceV2Relationships) *NullableAppPriceV2Relationships {
	return &NullableAppPriceV2Relationships{value: val, isSet: true}
}

func (v NullableAppPriceV2Relationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppPriceV2Relationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


