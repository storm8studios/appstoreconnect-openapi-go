/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppRelationships{}

// AppRelationships struct for AppRelationships
type AppRelationships struct {
	CiProduct *AppRelationshipsCiProduct `json:"ciProduct,omitempty"`
	BetaGroups *AppRelationshipsBetaGroups `json:"betaGroups,omitempty"`
	AppStoreVersions *AppRelationshipsAppStoreVersions `json:"appStoreVersions,omitempty"`
	PreReleaseVersions *AppRelationshipsPreReleaseVersions `json:"preReleaseVersions,omitempty"`
	BetaAppLocalizations *AppRelationshipsBetaAppLocalizations `json:"betaAppLocalizations,omitempty"`
	Builds *AppEncryptionDeclarationRelationshipsBuilds `json:"builds,omitempty"`
	BetaLicenseAgreement *AppRelationshipsBetaLicenseAgreement `json:"betaLicenseAgreement,omitempty"`
	BetaAppReviewDetail *AppRelationshipsBetaAppReviewDetail `json:"betaAppReviewDetail,omitempty"`
	AppInfos *AppRelationshipsAppInfos `json:"appInfos,omitempty"`
	AppClips *AppRelationshipsAppClips `json:"appClips,omitempty"`
	EndUserLicenseAgreement *AppRelationshipsEndUserLicenseAgreement `json:"endUserLicenseAgreement,omitempty"`
	PreOrder *AppRelationshipsPreOrder `json:"preOrder,omitempty"`
	// Deprecated
	Prices *AppRelationshipsPrices `json:"prices,omitempty"`
	// Deprecated
	AvailableTerritories *AppRelationshipsAvailableTerritories `json:"availableTerritories,omitempty"`
	// Deprecated
	InAppPurchases *AppRelationshipsInAppPurchases `json:"inAppPurchases,omitempty"`
	SubscriptionGroups *AppRelationshipsSubscriptionGroups `json:"subscriptionGroups,omitempty"`
	GameCenterEnabledVersions *AppRelationshipsGameCenterEnabledVersions `json:"gameCenterEnabledVersions,omitempty"`
	AppCustomProductPages *AppRelationshipsAppCustomProductPages `json:"appCustomProductPages,omitempty"`
	InAppPurchasesV2 *AppRelationshipsInAppPurchasesV2 `json:"inAppPurchasesV2,omitempty"`
	PromotedPurchases *AppRelationshipsPromotedPurchases `json:"promotedPurchases,omitempty"`
	AppEvents *AppRelationshipsAppEvents `json:"appEvents,omitempty"`
	ReviewSubmissions *AppRelationshipsReviewSubmissions `json:"reviewSubmissions,omitempty"`
	SubscriptionGracePeriod *AppRelationshipsSubscriptionGracePeriod `json:"subscriptionGracePeriod,omitempty"`
}

// NewAppRelationships instantiates a new AppRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppRelationships() *AppRelationships {
	this := AppRelationships{}
	return &this
}

// NewAppRelationshipsWithDefaults instantiates a new AppRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRelationshipsWithDefaults() *AppRelationships {
	this := AppRelationships{}
	return &this
}

// GetCiProduct returns the CiProduct field value if set, zero value otherwise.
func (o *AppRelationships) GetCiProduct() AppRelationshipsCiProduct {
	if o == nil || IsNil(o.CiProduct) {
		var ret AppRelationshipsCiProduct
		return ret
	}
	return *o.CiProduct
}

// GetCiProductOk returns a tuple with the CiProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetCiProductOk() (*AppRelationshipsCiProduct, bool) {
	if o == nil || IsNil(o.CiProduct) {
		return nil, false
	}
	return o.CiProduct, true
}

// HasCiProduct returns a boolean if a field has been set.
func (o *AppRelationships) HasCiProduct() bool {
	if o != nil && !IsNil(o.CiProduct) {
		return true
	}

	return false
}

// SetCiProduct gets a reference to the given AppRelationshipsCiProduct and assigns it to the CiProduct field.
func (o *AppRelationships) SetCiProduct(v AppRelationshipsCiProduct) {
	o.CiProduct = &v
}

// GetBetaGroups returns the BetaGroups field value if set, zero value otherwise.
func (o *AppRelationships) GetBetaGroups() AppRelationshipsBetaGroups {
	if o == nil || IsNil(o.BetaGroups) {
		var ret AppRelationshipsBetaGroups
		return ret
	}
	return *o.BetaGroups
}

// GetBetaGroupsOk returns a tuple with the BetaGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetBetaGroupsOk() (*AppRelationshipsBetaGroups, bool) {
	if o == nil || IsNil(o.BetaGroups) {
		return nil, false
	}
	return o.BetaGroups, true
}

// HasBetaGroups returns a boolean if a field has been set.
func (o *AppRelationships) HasBetaGroups() bool {
	if o != nil && !IsNil(o.BetaGroups) {
		return true
	}

	return false
}

// SetBetaGroups gets a reference to the given AppRelationshipsBetaGroups and assigns it to the BetaGroups field.
func (o *AppRelationships) SetBetaGroups(v AppRelationshipsBetaGroups) {
	o.BetaGroups = &v
}

// GetAppStoreVersions returns the AppStoreVersions field value if set, zero value otherwise.
func (o *AppRelationships) GetAppStoreVersions() AppRelationshipsAppStoreVersions {
	if o == nil || IsNil(o.AppStoreVersions) {
		var ret AppRelationshipsAppStoreVersions
		return ret
	}
	return *o.AppStoreVersions
}

// GetAppStoreVersionsOk returns a tuple with the AppStoreVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetAppStoreVersionsOk() (*AppRelationshipsAppStoreVersions, bool) {
	if o == nil || IsNil(o.AppStoreVersions) {
		return nil, false
	}
	return o.AppStoreVersions, true
}

// HasAppStoreVersions returns a boolean if a field has been set.
func (o *AppRelationships) HasAppStoreVersions() bool {
	if o != nil && !IsNil(o.AppStoreVersions) {
		return true
	}

	return false
}

// SetAppStoreVersions gets a reference to the given AppRelationshipsAppStoreVersions and assigns it to the AppStoreVersions field.
func (o *AppRelationships) SetAppStoreVersions(v AppRelationshipsAppStoreVersions) {
	o.AppStoreVersions = &v
}

// GetPreReleaseVersions returns the PreReleaseVersions field value if set, zero value otherwise.
func (o *AppRelationships) GetPreReleaseVersions() AppRelationshipsPreReleaseVersions {
	if o == nil || IsNil(o.PreReleaseVersions) {
		var ret AppRelationshipsPreReleaseVersions
		return ret
	}
	return *o.PreReleaseVersions
}

// GetPreReleaseVersionsOk returns a tuple with the PreReleaseVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetPreReleaseVersionsOk() (*AppRelationshipsPreReleaseVersions, bool) {
	if o == nil || IsNil(o.PreReleaseVersions) {
		return nil, false
	}
	return o.PreReleaseVersions, true
}

// HasPreReleaseVersions returns a boolean if a field has been set.
func (o *AppRelationships) HasPreReleaseVersions() bool {
	if o != nil && !IsNil(o.PreReleaseVersions) {
		return true
	}

	return false
}

// SetPreReleaseVersions gets a reference to the given AppRelationshipsPreReleaseVersions and assigns it to the PreReleaseVersions field.
func (o *AppRelationships) SetPreReleaseVersions(v AppRelationshipsPreReleaseVersions) {
	o.PreReleaseVersions = &v
}

// GetBetaAppLocalizations returns the BetaAppLocalizations field value if set, zero value otherwise.
func (o *AppRelationships) GetBetaAppLocalizations() AppRelationshipsBetaAppLocalizations {
	if o == nil || IsNil(o.BetaAppLocalizations) {
		var ret AppRelationshipsBetaAppLocalizations
		return ret
	}
	return *o.BetaAppLocalizations
}

// GetBetaAppLocalizationsOk returns a tuple with the BetaAppLocalizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetBetaAppLocalizationsOk() (*AppRelationshipsBetaAppLocalizations, bool) {
	if o == nil || IsNil(o.BetaAppLocalizations) {
		return nil, false
	}
	return o.BetaAppLocalizations, true
}

// HasBetaAppLocalizations returns a boolean if a field has been set.
func (o *AppRelationships) HasBetaAppLocalizations() bool {
	if o != nil && !IsNil(o.BetaAppLocalizations) {
		return true
	}

	return false
}

// SetBetaAppLocalizations gets a reference to the given AppRelationshipsBetaAppLocalizations and assigns it to the BetaAppLocalizations field.
func (o *AppRelationships) SetBetaAppLocalizations(v AppRelationshipsBetaAppLocalizations) {
	o.BetaAppLocalizations = &v
}

// GetBuilds returns the Builds field value if set, zero value otherwise.
func (o *AppRelationships) GetBuilds() AppEncryptionDeclarationRelationshipsBuilds {
	if o == nil || IsNil(o.Builds) {
		var ret AppEncryptionDeclarationRelationshipsBuilds
		return ret
	}
	return *o.Builds
}

// GetBuildsOk returns a tuple with the Builds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetBuildsOk() (*AppEncryptionDeclarationRelationshipsBuilds, bool) {
	if o == nil || IsNil(o.Builds) {
		return nil, false
	}
	return o.Builds, true
}

// HasBuilds returns a boolean if a field has been set.
func (o *AppRelationships) HasBuilds() bool {
	if o != nil && !IsNil(o.Builds) {
		return true
	}

	return false
}

// SetBuilds gets a reference to the given AppEncryptionDeclarationRelationshipsBuilds and assigns it to the Builds field.
func (o *AppRelationships) SetBuilds(v AppEncryptionDeclarationRelationshipsBuilds) {
	o.Builds = &v
}

// GetBetaLicenseAgreement returns the BetaLicenseAgreement field value if set, zero value otherwise.
func (o *AppRelationships) GetBetaLicenseAgreement() AppRelationshipsBetaLicenseAgreement {
	if o == nil || IsNil(o.BetaLicenseAgreement) {
		var ret AppRelationshipsBetaLicenseAgreement
		return ret
	}
	return *o.BetaLicenseAgreement
}

// GetBetaLicenseAgreementOk returns a tuple with the BetaLicenseAgreement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetBetaLicenseAgreementOk() (*AppRelationshipsBetaLicenseAgreement, bool) {
	if o == nil || IsNil(o.BetaLicenseAgreement) {
		return nil, false
	}
	return o.BetaLicenseAgreement, true
}

// HasBetaLicenseAgreement returns a boolean if a field has been set.
func (o *AppRelationships) HasBetaLicenseAgreement() bool {
	if o != nil && !IsNil(o.BetaLicenseAgreement) {
		return true
	}

	return false
}

// SetBetaLicenseAgreement gets a reference to the given AppRelationshipsBetaLicenseAgreement and assigns it to the BetaLicenseAgreement field.
func (o *AppRelationships) SetBetaLicenseAgreement(v AppRelationshipsBetaLicenseAgreement) {
	o.BetaLicenseAgreement = &v
}

// GetBetaAppReviewDetail returns the BetaAppReviewDetail field value if set, zero value otherwise.
func (o *AppRelationships) GetBetaAppReviewDetail() AppRelationshipsBetaAppReviewDetail {
	if o == nil || IsNil(o.BetaAppReviewDetail) {
		var ret AppRelationshipsBetaAppReviewDetail
		return ret
	}
	return *o.BetaAppReviewDetail
}

// GetBetaAppReviewDetailOk returns a tuple with the BetaAppReviewDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetBetaAppReviewDetailOk() (*AppRelationshipsBetaAppReviewDetail, bool) {
	if o == nil || IsNil(o.BetaAppReviewDetail) {
		return nil, false
	}
	return o.BetaAppReviewDetail, true
}

// HasBetaAppReviewDetail returns a boolean if a field has been set.
func (o *AppRelationships) HasBetaAppReviewDetail() bool {
	if o != nil && !IsNil(o.BetaAppReviewDetail) {
		return true
	}

	return false
}

// SetBetaAppReviewDetail gets a reference to the given AppRelationshipsBetaAppReviewDetail and assigns it to the BetaAppReviewDetail field.
func (o *AppRelationships) SetBetaAppReviewDetail(v AppRelationshipsBetaAppReviewDetail) {
	o.BetaAppReviewDetail = &v
}

// GetAppInfos returns the AppInfos field value if set, zero value otherwise.
func (o *AppRelationships) GetAppInfos() AppRelationshipsAppInfos {
	if o == nil || IsNil(o.AppInfos) {
		var ret AppRelationshipsAppInfos
		return ret
	}
	return *o.AppInfos
}

// GetAppInfosOk returns a tuple with the AppInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetAppInfosOk() (*AppRelationshipsAppInfos, bool) {
	if o == nil || IsNil(o.AppInfos) {
		return nil, false
	}
	return o.AppInfos, true
}

// HasAppInfos returns a boolean if a field has been set.
func (o *AppRelationships) HasAppInfos() bool {
	if o != nil && !IsNil(o.AppInfos) {
		return true
	}

	return false
}

// SetAppInfos gets a reference to the given AppRelationshipsAppInfos and assigns it to the AppInfos field.
func (o *AppRelationships) SetAppInfos(v AppRelationshipsAppInfos) {
	o.AppInfos = &v
}

// GetAppClips returns the AppClips field value if set, zero value otherwise.
func (o *AppRelationships) GetAppClips() AppRelationshipsAppClips {
	if o == nil || IsNil(o.AppClips) {
		var ret AppRelationshipsAppClips
		return ret
	}
	return *o.AppClips
}

// GetAppClipsOk returns a tuple with the AppClips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetAppClipsOk() (*AppRelationshipsAppClips, bool) {
	if o == nil || IsNil(o.AppClips) {
		return nil, false
	}
	return o.AppClips, true
}

// HasAppClips returns a boolean if a field has been set.
func (o *AppRelationships) HasAppClips() bool {
	if o != nil && !IsNil(o.AppClips) {
		return true
	}

	return false
}

// SetAppClips gets a reference to the given AppRelationshipsAppClips and assigns it to the AppClips field.
func (o *AppRelationships) SetAppClips(v AppRelationshipsAppClips) {
	o.AppClips = &v
}

// GetEndUserLicenseAgreement returns the EndUserLicenseAgreement field value if set, zero value otherwise.
func (o *AppRelationships) GetEndUserLicenseAgreement() AppRelationshipsEndUserLicenseAgreement {
	if o == nil || IsNil(o.EndUserLicenseAgreement) {
		var ret AppRelationshipsEndUserLicenseAgreement
		return ret
	}
	return *o.EndUserLicenseAgreement
}

// GetEndUserLicenseAgreementOk returns a tuple with the EndUserLicenseAgreement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetEndUserLicenseAgreementOk() (*AppRelationshipsEndUserLicenseAgreement, bool) {
	if o == nil || IsNil(o.EndUserLicenseAgreement) {
		return nil, false
	}
	return o.EndUserLicenseAgreement, true
}

// HasEndUserLicenseAgreement returns a boolean if a field has been set.
func (o *AppRelationships) HasEndUserLicenseAgreement() bool {
	if o != nil && !IsNil(o.EndUserLicenseAgreement) {
		return true
	}

	return false
}

// SetEndUserLicenseAgreement gets a reference to the given AppRelationshipsEndUserLicenseAgreement and assigns it to the EndUserLicenseAgreement field.
func (o *AppRelationships) SetEndUserLicenseAgreement(v AppRelationshipsEndUserLicenseAgreement) {
	o.EndUserLicenseAgreement = &v
}

// GetPreOrder returns the PreOrder field value if set, zero value otherwise.
func (o *AppRelationships) GetPreOrder() AppRelationshipsPreOrder {
	if o == nil || IsNil(o.PreOrder) {
		var ret AppRelationshipsPreOrder
		return ret
	}
	return *o.PreOrder
}

// GetPreOrderOk returns a tuple with the PreOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetPreOrderOk() (*AppRelationshipsPreOrder, bool) {
	if o == nil || IsNil(o.PreOrder) {
		return nil, false
	}
	return o.PreOrder, true
}

// HasPreOrder returns a boolean if a field has been set.
func (o *AppRelationships) HasPreOrder() bool {
	if o != nil && !IsNil(o.PreOrder) {
		return true
	}

	return false
}

// SetPreOrder gets a reference to the given AppRelationshipsPreOrder and assigns it to the PreOrder field.
func (o *AppRelationships) SetPreOrder(v AppRelationshipsPreOrder) {
	o.PreOrder = &v
}

// GetPrices returns the Prices field value if set, zero value otherwise.
// Deprecated
func (o *AppRelationships) GetPrices() AppRelationshipsPrices {
	if o == nil || IsNil(o.Prices) {
		var ret AppRelationshipsPrices
		return ret
	}
	return *o.Prices
}

// GetPricesOk returns a tuple with the Prices field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AppRelationships) GetPricesOk() (*AppRelationshipsPrices, bool) {
	if o == nil || IsNil(o.Prices) {
		return nil, false
	}
	return o.Prices, true
}

// HasPrices returns a boolean if a field has been set.
func (o *AppRelationships) HasPrices() bool {
	if o != nil && !IsNil(o.Prices) {
		return true
	}

	return false
}

// SetPrices gets a reference to the given AppRelationshipsPrices and assigns it to the Prices field.
// Deprecated
func (o *AppRelationships) SetPrices(v AppRelationshipsPrices) {
	o.Prices = &v
}

// GetAvailableTerritories returns the AvailableTerritories field value if set, zero value otherwise.
// Deprecated
func (o *AppRelationships) GetAvailableTerritories() AppRelationshipsAvailableTerritories {
	if o == nil || IsNil(o.AvailableTerritories) {
		var ret AppRelationshipsAvailableTerritories
		return ret
	}
	return *o.AvailableTerritories
}

// GetAvailableTerritoriesOk returns a tuple with the AvailableTerritories field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AppRelationships) GetAvailableTerritoriesOk() (*AppRelationshipsAvailableTerritories, bool) {
	if o == nil || IsNil(o.AvailableTerritories) {
		return nil, false
	}
	return o.AvailableTerritories, true
}

// HasAvailableTerritories returns a boolean if a field has been set.
func (o *AppRelationships) HasAvailableTerritories() bool {
	if o != nil && !IsNil(o.AvailableTerritories) {
		return true
	}

	return false
}

// SetAvailableTerritories gets a reference to the given AppRelationshipsAvailableTerritories and assigns it to the AvailableTerritories field.
// Deprecated
func (o *AppRelationships) SetAvailableTerritories(v AppRelationshipsAvailableTerritories) {
	o.AvailableTerritories = &v
}

// GetInAppPurchases returns the InAppPurchases field value if set, zero value otherwise.
// Deprecated
func (o *AppRelationships) GetInAppPurchases() AppRelationshipsInAppPurchases {
	if o == nil || IsNil(o.InAppPurchases) {
		var ret AppRelationshipsInAppPurchases
		return ret
	}
	return *o.InAppPurchases
}

// GetInAppPurchasesOk returns a tuple with the InAppPurchases field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AppRelationships) GetInAppPurchasesOk() (*AppRelationshipsInAppPurchases, bool) {
	if o == nil || IsNil(o.InAppPurchases) {
		return nil, false
	}
	return o.InAppPurchases, true
}

// HasInAppPurchases returns a boolean if a field has been set.
func (o *AppRelationships) HasInAppPurchases() bool {
	if o != nil && !IsNil(o.InAppPurchases) {
		return true
	}

	return false
}

// SetInAppPurchases gets a reference to the given AppRelationshipsInAppPurchases and assigns it to the InAppPurchases field.
// Deprecated
func (o *AppRelationships) SetInAppPurchases(v AppRelationshipsInAppPurchases) {
	o.InAppPurchases = &v
}

// GetSubscriptionGroups returns the SubscriptionGroups field value if set, zero value otherwise.
func (o *AppRelationships) GetSubscriptionGroups() AppRelationshipsSubscriptionGroups {
	if o == nil || IsNil(o.SubscriptionGroups) {
		var ret AppRelationshipsSubscriptionGroups
		return ret
	}
	return *o.SubscriptionGroups
}

// GetSubscriptionGroupsOk returns a tuple with the SubscriptionGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetSubscriptionGroupsOk() (*AppRelationshipsSubscriptionGroups, bool) {
	if o == nil || IsNil(o.SubscriptionGroups) {
		return nil, false
	}
	return o.SubscriptionGroups, true
}

// HasSubscriptionGroups returns a boolean if a field has been set.
func (o *AppRelationships) HasSubscriptionGroups() bool {
	if o != nil && !IsNil(o.SubscriptionGroups) {
		return true
	}

	return false
}

// SetSubscriptionGroups gets a reference to the given AppRelationshipsSubscriptionGroups and assigns it to the SubscriptionGroups field.
func (o *AppRelationships) SetSubscriptionGroups(v AppRelationshipsSubscriptionGroups) {
	o.SubscriptionGroups = &v
}

// GetGameCenterEnabledVersions returns the GameCenterEnabledVersions field value if set, zero value otherwise.
func (o *AppRelationships) GetGameCenterEnabledVersions() AppRelationshipsGameCenterEnabledVersions {
	if o == nil || IsNil(o.GameCenterEnabledVersions) {
		var ret AppRelationshipsGameCenterEnabledVersions
		return ret
	}
	return *o.GameCenterEnabledVersions
}

// GetGameCenterEnabledVersionsOk returns a tuple with the GameCenterEnabledVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetGameCenterEnabledVersionsOk() (*AppRelationshipsGameCenterEnabledVersions, bool) {
	if o == nil || IsNil(o.GameCenterEnabledVersions) {
		return nil, false
	}
	return o.GameCenterEnabledVersions, true
}

// HasGameCenterEnabledVersions returns a boolean if a field has been set.
func (o *AppRelationships) HasGameCenterEnabledVersions() bool {
	if o != nil && !IsNil(o.GameCenterEnabledVersions) {
		return true
	}

	return false
}

// SetGameCenterEnabledVersions gets a reference to the given AppRelationshipsGameCenterEnabledVersions and assigns it to the GameCenterEnabledVersions field.
func (o *AppRelationships) SetGameCenterEnabledVersions(v AppRelationshipsGameCenterEnabledVersions) {
	o.GameCenterEnabledVersions = &v
}

// GetAppCustomProductPages returns the AppCustomProductPages field value if set, zero value otherwise.
func (o *AppRelationships) GetAppCustomProductPages() AppRelationshipsAppCustomProductPages {
	if o == nil || IsNil(o.AppCustomProductPages) {
		var ret AppRelationshipsAppCustomProductPages
		return ret
	}
	return *o.AppCustomProductPages
}

// GetAppCustomProductPagesOk returns a tuple with the AppCustomProductPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetAppCustomProductPagesOk() (*AppRelationshipsAppCustomProductPages, bool) {
	if o == nil || IsNil(o.AppCustomProductPages) {
		return nil, false
	}
	return o.AppCustomProductPages, true
}

// HasAppCustomProductPages returns a boolean if a field has been set.
func (o *AppRelationships) HasAppCustomProductPages() bool {
	if o != nil && !IsNil(o.AppCustomProductPages) {
		return true
	}

	return false
}

// SetAppCustomProductPages gets a reference to the given AppRelationshipsAppCustomProductPages and assigns it to the AppCustomProductPages field.
func (o *AppRelationships) SetAppCustomProductPages(v AppRelationshipsAppCustomProductPages) {
	o.AppCustomProductPages = &v
}

// GetInAppPurchasesV2 returns the InAppPurchasesV2 field value if set, zero value otherwise.
func (o *AppRelationships) GetInAppPurchasesV2() AppRelationshipsInAppPurchasesV2 {
	if o == nil || IsNil(o.InAppPurchasesV2) {
		var ret AppRelationshipsInAppPurchasesV2
		return ret
	}
	return *o.InAppPurchasesV2
}

// GetInAppPurchasesV2Ok returns a tuple with the InAppPurchasesV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetInAppPurchasesV2Ok() (*AppRelationshipsInAppPurchasesV2, bool) {
	if o == nil || IsNil(o.InAppPurchasesV2) {
		return nil, false
	}
	return o.InAppPurchasesV2, true
}

// HasInAppPurchasesV2 returns a boolean if a field has been set.
func (o *AppRelationships) HasInAppPurchasesV2() bool {
	if o != nil && !IsNil(o.InAppPurchasesV2) {
		return true
	}

	return false
}

// SetInAppPurchasesV2 gets a reference to the given AppRelationshipsInAppPurchasesV2 and assigns it to the InAppPurchasesV2 field.
func (o *AppRelationships) SetInAppPurchasesV2(v AppRelationshipsInAppPurchasesV2) {
	o.InAppPurchasesV2 = &v
}

// GetPromotedPurchases returns the PromotedPurchases field value if set, zero value otherwise.
func (o *AppRelationships) GetPromotedPurchases() AppRelationshipsPromotedPurchases {
	if o == nil || IsNil(o.PromotedPurchases) {
		var ret AppRelationshipsPromotedPurchases
		return ret
	}
	return *o.PromotedPurchases
}

// GetPromotedPurchasesOk returns a tuple with the PromotedPurchases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetPromotedPurchasesOk() (*AppRelationshipsPromotedPurchases, bool) {
	if o == nil || IsNil(o.PromotedPurchases) {
		return nil, false
	}
	return o.PromotedPurchases, true
}

// HasPromotedPurchases returns a boolean if a field has been set.
func (o *AppRelationships) HasPromotedPurchases() bool {
	if o != nil && !IsNil(o.PromotedPurchases) {
		return true
	}

	return false
}

// SetPromotedPurchases gets a reference to the given AppRelationshipsPromotedPurchases and assigns it to the PromotedPurchases field.
func (o *AppRelationships) SetPromotedPurchases(v AppRelationshipsPromotedPurchases) {
	o.PromotedPurchases = &v
}

// GetAppEvents returns the AppEvents field value if set, zero value otherwise.
func (o *AppRelationships) GetAppEvents() AppRelationshipsAppEvents {
	if o == nil || IsNil(o.AppEvents) {
		var ret AppRelationshipsAppEvents
		return ret
	}
	return *o.AppEvents
}

// GetAppEventsOk returns a tuple with the AppEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetAppEventsOk() (*AppRelationshipsAppEvents, bool) {
	if o == nil || IsNil(o.AppEvents) {
		return nil, false
	}
	return o.AppEvents, true
}

// HasAppEvents returns a boolean if a field has been set.
func (o *AppRelationships) HasAppEvents() bool {
	if o != nil && !IsNil(o.AppEvents) {
		return true
	}

	return false
}

// SetAppEvents gets a reference to the given AppRelationshipsAppEvents and assigns it to the AppEvents field.
func (o *AppRelationships) SetAppEvents(v AppRelationshipsAppEvents) {
	o.AppEvents = &v
}

// GetReviewSubmissions returns the ReviewSubmissions field value if set, zero value otherwise.
func (o *AppRelationships) GetReviewSubmissions() AppRelationshipsReviewSubmissions {
	if o == nil || IsNil(o.ReviewSubmissions) {
		var ret AppRelationshipsReviewSubmissions
		return ret
	}
	return *o.ReviewSubmissions
}

// GetReviewSubmissionsOk returns a tuple with the ReviewSubmissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetReviewSubmissionsOk() (*AppRelationshipsReviewSubmissions, bool) {
	if o == nil || IsNil(o.ReviewSubmissions) {
		return nil, false
	}
	return o.ReviewSubmissions, true
}

// HasReviewSubmissions returns a boolean if a field has been set.
func (o *AppRelationships) HasReviewSubmissions() bool {
	if o != nil && !IsNil(o.ReviewSubmissions) {
		return true
	}

	return false
}

// SetReviewSubmissions gets a reference to the given AppRelationshipsReviewSubmissions and assigns it to the ReviewSubmissions field.
func (o *AppRelationships) SetReviewSubmissions(v AppRelationshipsReviewSubmissions) {
	o.ReviewSubmissions = &v
}

// GetSubscriptionGracePeriod returns the SubscriptionGracePeriod field value if set, zero value otherwise.
func (o *AppRelationships) GetSubscriptionGracePeriod() AppRelationshipsSubscriptionGracePeriod {
	if o == nil || IsNil(o.SubscriptionGracePeriod) {
		var ret AppRelationshipsSubscriptionGracePeriod
		return ret
	}
	return *o.SubscriptionGracePeriod
}

// GetSubscriptionGracePeriodOk returns a tuple with the SubscriptionGracePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationships) GetSubscriptionGracePeriodOk() (*AppRelationshipsSubscriptionGracePeriod, bool) {
	if o == nil || IsNil(o.SubscriptionGracePeriod) {
		return nil, false
	}
	return o.SubscriptionGracePeriod, true
}

// HasSubscriptionGracePeriod returns a boolean if a field has been set.
func (o *AppRelationships) HasSubscriptionGracePeriod() bool {
	if o != nil && !IsNil(o.SubscriptionGracePeriod) {
		return true
	}

	return false
}

// SetSubscriptionGracePeriod gets a reference to the given AppRelationshipsSubscriptionGracePeriod and assigns it to the SubscriptionGracePeriod field.
func (o *AppRelationships) SetSubscriptionGracePeriod(v AppRelationshipsSubscriptionGracePeriod) {
	o.SubscriptionGracePeriod = &v
}

func (o AppRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CiProduct) {
		toSerialize["ciProduct"] = o.CiProduct
	}
	if !IsNil(o.BetaGroups) {
		toSerialize["betaGroups"] = o.BetaGroups
	}
	if !IsNil(o.AppStoreVersions) {
		toSerialize["appStoreVersions"] = o.AppStoreVersions
	}
	if !IsNil(o.PreReleaseVersions) {
		toSerialize["preReleaseVersions"] = o.PreReleaseVersions
	}
	if !IsNil(o.BetaAppLocalizations) {
		toSerialize["betaAppLocalizations"] = o.BetaAppLocalizations
	}
	if !IsNil(o.Builds) {
		toSerialize["builds"] = o.Builds
	}
	if !IsNil(o.BetaLicenseAgreement) {
		toSerialize["betaLicenseAgreement"] = o.BetaLicenseAgreement
	}
	if !IsNil(o.BetaAppReviewDetail) {
		toSerialize["betaAppReviewDetail"] = o.BetaAppReviewDetail
	}
	if !IsNil(o.AppInfos) {
		toSerialize["appInfos"] = o.AppInfos
	}
	if !IsNil(o.AppClips) {
		toSerialize["appClips"] = o.AppClips
	}
	if !IsNil(o.EndUserLicenseAgreement) {
		toSerialize["endUserLicenseAgreement"] = o.EndUserLicenseAgreement
	}
	if !IsNil(o.PreOrder) {
		toSerialize["preOrder"] = o.PreOrder
	}
	if !IsNil(o.Prices) {
		toSerialize["prices"] = o.Prices
	}
	if !IsNil(o.AvailableTerritories) {
		toSerialize["availableTerritories"] = o.AvailableTerritories
	}
	if !IsNil(o.InAppPurchases) {
		toSerialize["inAppPurchases"] = o.InAppPurchases
	}
	if !IsNil(o.SubscriptionGroups) {
		toSerialize["subscriptionGroups"] = o.SubscriptionGroups
	}
	if !IsNil(o.GameCenterEnabledVersions) {
		toSerialize["gameCenterEnabledVersions"] = o.GameCenterEnabledVersions
	}
	if !IsNil(o.AppCustomProductPages) {
		toSerialize["appCustomProductPages"] = o.AppCustomProductPages
	}
	if !IsNil(o.InAppPurchasesV2) {
		toSerialize["inAppPurchasesV2"] = o.InAppPurchasesV2
	}
	if !IsNil(o.PromotedPurchases) {
		toSerialize["promotedPurchases"] = o.PromotedPurchases
	}
	if !IsNil(o.AppEvents) {
		toSerialize["appEvents"] = o.AppEvents
	}
	if !IsNil(o.ReviewSubmissions) {
		toSerialize["reviewSubmissions"] = o.ReviewSubmissions
	}
	if !IsNil(o.SubscriptionGracePeriod) {
		toSerialize["subscriptionGracePeriod"] = o.SubscriptionGracePeriod
	}
	return toSerialize, nil
}

type NullableAppRelationships struct {
	value *AppRelationships
	isSet bool
}

func (v NullableAppRelationships) Get() *AppRelationships {
	return v.value
}

func (v *NullableAppRelationships) Set(val *AppRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppRelationships(val *AppRelationships) *NullableAppRelationships {
	return &NullableAppRelationships{value: val, isSet: true}
}

func (v NullableAppRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


