/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppStoreReviewAttachmentRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppStoreReviewAttachmentRelationships{}

// AppStoreReviewAttachmentRelationships struct for AppStoreReviewAttachmentRelationships
type AppStoreReviewAttachmentRelationships struct {
	AppStoreReviewDetail *AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail `json:"appStoreReviewDetail,omitempty"`
}

// NewAppStoreReviewAttachmentRelationships instantiates a new AppStoreReviewAttachmentRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStoreReviewAttachmentRelationships() *AppStoreReviewAttachmentRelationships {
	this := AppStoreReviewAttachmentRelationships{}
	return &this
}

// NewAppStoreReviewAttachmentRelationshipsWithDefaults instantiates a new AppStoreReviewAttachmentRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStoreReviewAttachmentRelationshipsWithDefaults() *AppStoreReviewAttachmentRelationships {
	this := AppStoreReviewAttachmentRelationships{}
	return &this
}

// GetAppStoreReviewDetail returns the AppStoreReviewDetail field value if set, zero value otherwise.
func (o *AppStoreReviewAttachmentRelationships) GetAppStoreReviewDetail() AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail {
	if o == nil || IsNil(o.AppStoreReviewDetail) {
		var ret AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail
		return ret
	}
	return *o.AppStoreReviewDetail
}

// GetAppStoreReviewDetailOk returns a tuple with the AppStoreReviewDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreReviewAttachmentRelationships) GetAppStoreReviewDetailOk() (*AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail, bool) {
	if o == nil || IsNil(o.AppStoreReviewDetail) {
		return nil, false
	}
	return o.AppStoreReviewDetail, true
}

// HasAppStoreReviewDetail returns a boolean if a field has been set.
func (o *AppStoreReviewAttachmentRelationships) HasAppStoreReviewDetail() bool {
	if o != nil && !IsNil(o.AppStoreReviewDetail) {
		return true
	}

	return false
}

// SetAppStoreReviewDetail gets a reference to the given AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail and assigns it to the AppStoreReviewDetail field.
func (o *AppStoreReviewAttachmentRelationships) SetAppStoreReviewDetail(v AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail) {
	o.AppStoreReviewDetail = &v
}

func (o AppStoreReviewAttachmentRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppStoreReviewAttachmentRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppStoreReviewDetail) {
		toSerialize["appStoreReviewDetail"] = o.AppStoreReviewDetail
	}
	return toSerialize, nil
}

type NullableAppStoreReviewAttachmentRelationships struct {
	value *AppStoreReviewAttachmentRelationships
	isSet bool
}

func (v NullableAppStoreReviewAttachmentRelationships) Get() *AppStoreReviewAttachmentRelationships {
	return v.value
}

func (v *NullableAppStoreReviewAttachmentRelationships) Set(val *AppStoreReviewAttachmentRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStoreReviewAttachmentRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStoreReviewAttachmentRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStoreReviewAttachmentRelationships(val *AppStoreReviewAttachmentRelationships) *NullableAppStoreReviewAttachmentRelationships {
	return &NullableAppStoreReviewAttachmentRelationships{value: val, isSet: true}
}

func (v NullableAppStoreReviewAttachmentRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStoreReviewAttachmentRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


