/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppStoreReviewAttachmentsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppStoreReviewAttachmentsResponse{}

// AppStoreReviewAttachmentsResponse struct for AppStoreReviewAttachmentsResponse
type AppStoreReviewAttachmentsResponse struct {
	Data []AppStoreReviewAttachment `json:"data"`
	Included []AppStoreReviewDetail `json:"included,omitempty"`
	Links PagedDocumentLinks `json:"links"`
	Meta *PagingInformation `json:"meta,omitempty"`
}

// NewAppStoreReviewAttachmentsResponse instantiates a new AppStoreReviewAttachmentsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStoreReviewAttachmentsResponse(data []AppStoreReviewAttachment, links PagedDocumentLinks) *AppStoreReviewAttachmentsResponse {
	this := AppStoreReviewAttachmentsResponse{}
	this.Data = data
	this.Links = links
	return &this
}

// NewAppStoreReviewAttachmentsResponseWithDefaults instantiates a new AppStoreReviewAttachmentsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStoreReviewAttachmentsResponseWithDefaults() *AppStoreReviewAttachmentsResponse {
	this := AppStoreReviewAttachmentsResponse{}
	return &this
}

// GetData returns the Data field value
func (o *AppStoreReviewAttachmentsResponse) GetData() []AppStoreReviewAttachment {
	if o == nil {
		var ret []AppStoreReviewAttachment
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *AppStoreReviewAttachmentsResponse) GetDataOk() ([]AppStoreReviewAttachment, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *AppStoreReviewAttachmentsResponse) SetData(v []AppStoreReviewAttachment) {
	o.Data = v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *AppStoreReviewAttachmentsResponse) GetIncluded() []AppStoreReviewDetail {
	if o == nil || IsNil(o.Included) {
		var ret []AppStoreReviewDetail
		return ret
	}
	return o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreReviewAttachmentsResponse) GetIncludedOk() ([]AppStoreReviewDetail, bool) {
	if o == nil || IsNil(o.Included) {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *AppStoreReviewAttachmentsResponse) HasIncluded() bool {
	if o != nil && !IsNil(o.Included) {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given []AppStoreReviewDetail and assigns it to the Included field.
func (o *AppStoreReviewAttachmentsResponse) SetIncluded(v []AppStoreReviewDetail) {
	o.Included = v
}

// GetLinks returns the Links field value
func (o *AppStoreReviewAttachmentsResponse) GetLinks() PagedDocumentLinks {
	if o == nil {
		var ret PagedDocumentLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *AppStoreReviewAttachmentsResponse) GetLinksOk() (*PagedDocumentLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *AppStoreReviewAttachmentsResponse) SetLinks(v PagedDocumentLinks) {
	o.Links = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *AppStoreReviewAttachmentsResponse) GetMeta() PagingInformation {
	if o == nil || IsNil(o.Meta) {
		var ret PagingInformation
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreReviewAttachmentsResponse) GetMetaOk() (*PagingInformation, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *AppStoreReviewAttachmentsResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given PagingInformation and assigns it to the Meta field.
func (o *AppStoreReviewAttachmentsResponse) SetMeta(v PagingInformation) {
	o.Meta = &v
}

func (o AppStoreReviewAttachmentsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppStoreReviewAttachmentsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	if !IsNil(o.Included) {
		toSerialize["included"] = o.Included
	}
	toSerialize["links"] = o.Links
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableAppStoreReviewAttachmentsResponse struct {
	value *AppStoreReviewAttachmentsResponse
	isSet bool
}

func (v NullableAppStoreReviewAttachmentsResponse) Get() *AppStoreReviewAttachmentsResponse {
	return v.value
}

func (v *NullableAppStoreReviewAttachmentsResponse) Set(val *AppStoreReviewAttachmentsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStoreReviewAttachmentsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStoreReviewAttachmentsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStoreReviewAttachmentsResponse(val *AppStoreReviewAttachmentsResponse) *NullableAppStoreReviewAttachmentsResponse {
	return &NullableAppStoreReviewAttachmentsResponse{value: val, isSet: true}
}

func (v NullableAppStoreReviewAttachmentsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStoreReviewAttachmentsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


