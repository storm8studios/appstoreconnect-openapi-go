/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
	"time"
)

// checks if the AppStoreVersionExperimentAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppStoreVersionExperimentAttributes{}

// AppStoreVersionExperimentAttributes struct for AppStoreVersionExperimentAttributes
type AppStoreVersionExperimentAttributes struct {
	Name *string `json:"name,omitempty"`
	TrafficProportion *int32 `json:"trafficProportion,omitempty"`
	State *string `json:"state,omitempty"`
	ReviewRequired *bool `json:"reviewRequired,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
	EndDate *time.Time `json:"endDate,omitempty"`
}

// NewAppStoreVersionExperimentAttributes instantiates a new AppStoreVersionExperimentAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStoreVersionExperimentAttributes() *AppStoreVersionExperimentAttributes {
	this := AppStoreVersionExperimentAttributes{}
	return &this
}

// NewAppStoreVersionExperimentAttributesWithDefaults instantiates a new AppStoreVersionExperimentAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStoreVersionExperimentAttributesWithDefaults() *AppStoreVersionExperimentAttributes {
	this := AppStoreVersionExperimentAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentAttributes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentAttributes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentAttributes) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AppStoreVersionExperimentAttributes) SetName(v string) {
	o.Name = &v
}

// GetTrafficProportion returns the TrafficProportion field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentAttributes) GetTrafficProportion() int32 {
	if o == nil || IsNil(o.TrafficProportion) {
		var ret int32
		return ret
	}
	return *o.TrafficProportion
}

// GetTrafficProportionOk returns a tuple with the TrafficProportion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentAttributes) GetTrafficProportionOk() (*int32, bool) {
	if o == nil || IsNil(o.TrafficProportion) {
		return nil, false
	}
	return o.TrafficProportion, true
}

// HasTrafficProportion returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentAttributes) HasTrafficProportion() bool {
	if o != nil && !IsNil(o.TrafficProportion) {
		return true
	}

	return false
}

// SetTrafficProportion gets a reference to the given int32 and assigns it to the TrafficProportion field.
func (o *AppStoreVersionExperimentAttributes) SetTrafficProportion(v int32) {
	o.TrafficProportion = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentAttributes) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentAttributes) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentAttributes) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *AppStoreVersionExperimentAttributes) SetState(v string) {
	o.State = &v
}

// GetReviewRequired returns the ReviewRequired field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentAttributes) GetReviewRequired() bool {
	if o == nil || IsNil(o.ReviewRequired) {
		var ret bool
		return ret
	}
	return *o.ReviewRequired
}

// GetReviewRequiredOk returns a tuple with the ReviewRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentAttributes) GetReviewRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.ReviewRequired) {
		return nil, false
	}
	return o.ReviewRequired, true
}

// HasReviewRequired returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentAttributes) HasReviewRequired() bool {
	if o != nil && !IsNil(o.ReviewRequired) {
		return true
	}

	return false
}

// SetReviewRequired gets a reference to the given bool and assigns it to the ReviewRequired field.
func (o *AppStoreVersionExperimentAttributes) SetReviewRequired(v bool) {
	o.ReviewRequired = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentAttributes) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentAttributes) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentAttributes) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *AppStoreVersionExperimentAttributes) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentAttributes) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentAttributes) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentAttributes) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *AppStoreVersionExperimentAttributes) SetEndDate(v time.Time) {
	o.EndDate = &v
}

func (o AppStoreVersionExperimentAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppStoreVersionExperimentAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TrafficProportion) {
		toSerialize["trafficProportion"] = o.TrafficProportion
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.ReviewRequired) {
		toSerialize["reviewRequired"] = o.ReviewRequired
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	return toSerialize, nil
}

type NullableAppStoreVersionExperimentAttributes struct {
	value *AppStoreVersionExperimentAttributes
	isSet bool
}

func (v NullableAppStoreVersionExperimentAttributes) Get() *AppStoreVersionExperimentAttributes {
	return v.value
}

func (v *NullableAppStoreVersionExperimentAttributes) Set(val *AppStoreVersionExperimentAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStoreVersionExperimentAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStoreVersionExperimentAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStoreVersionExperimentAttributes(val *AppStoreVersionExperimentAttributes) *NullableAppStoreVersionExperimentAttributes {
	return &NullableAppStoreVersionExperimentAttributes{value: val, isSet: true}
}

func (v NullableAppStoreVersionExperimentAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStoreVersionExperimentAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


