/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppStoreVersionExperimentRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppStoreVersionExperimentRelationships{}

// AppStoreVersionExperimentRelationships struct for AppStoreVersionExperimentRelationships
type AppStoreVersionExperimentRelationships struct {
	AppStoreVersion *AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion `json:"appStoreVersion,omitempty"`
	AppStoreVersionExperimentTreatments *AppStoreVersionExperimentRelationshipsAppStoreVersionExperimentTreatments `json:"appStoreVersionExperimentTreatments,omitempty"`
}

// NewAppStoreVersionExperimentRelationships instantiates a new AppStoreVersionExperimentRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStoreVersionExperimentRelationships() *AppStoreVersionExperimentRelationships {
	this := AppStoreVersionExperimentRelationships{}
	return &this
}

// NewAppStoreVersionExperimentRelationshipsWithDefaults instantiates a new AppStoreVersionExperimentRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStoreVersionExperimentRelationshipsWithDefaults() *AppStoreVersionExperimentRelationships {
	this := AppStoreVersionExperimentRelationships{}
	return &this
}

// GetAppStoreVersion returns the AppStoreVersion field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentRelationships) GetAppStoreVersion() AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion {
	if o == nil || IsNil(o.AppStoreVersion) {
		var ret AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion
		return ret
	}
	return *o.AppStoreVersion
}

// GetAppStoreVersionOk returns a tuple with the AppStoreVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentRelationships) GetAppStoreVersionOk() (*AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion, bool) {
	if o == nil || IsNil(o.AppStoreVersion) {
		return nil, false
	}
	return o.AppStoreVersion, true
}

// HasAppStoreVersion returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentRelationships) HasAppStoreVersion() bool {
	if o != nil && !IsNil(o.AppStoreVersion) {
		return true
	}

	return false
}

// SetAppStoreVersion gets a reference to the given AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion and assigns it to the AppStoreVersion field.
func (o *AppStoreVersionExperimentRelationships) SetAppStoreVersion(v AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion) {
	o.AppStoreVersion = &v
}

// GetAppStoreVersionExperimentTreatments returns the AppStoreVersionExperimentTreatments field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentRelationships) GetAppStoreVersionExperimentTreatments() AppStoreVersionExperimentRelationshipsAppStoreVersionExperimentTreatments {
	if o == nil || IsNil(o.AppStoreVersionExperimentTreatments) {
		var ret AppStoreVersionExperimentRelationshipsAppStoreVersionExperimentTreatments
		return ret
	}
	return *o.AppStoreVersionExperimentTreatments
}

// GetAppStoreVersionExperimentTreatmentsOk returns a tuple with the AppStoreVersionExperimentTreatments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentRelationships) GetAppStoreVersionExperimentTreatmentsOk() (*AppStoreVersionExperimentRelationshipsAppStoreVersionExperimentTreatments, bool) {
	if o == nil || IsNil(o.AppStoreVersionExperimentTreatments) {
		return nil, false
	}
	return o.AppStoreVersionExperimentTreatments, true
}

// HasAppStoreVersionExperimentTreatments returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentRelationships) HasAppStoreVersionExperimentTreatments() bool {
	if o != nil && !IsNil(o.AppStoreVersionExperimentTreatments) {
		return true
	}

	return false
}

// SetAppStoreVersionExperimentTreatments gets a reference to the given AppStoreVersionExperimentRelationshipsAppStoreVersionExperimentTreatments and assigns it to the AppStoreVersionExperimentTreatments field.
func (o *AppStoreVersionExperimentRelationships) SetAppStoreVersionExperimentTreatments(v AppStoreVersionExperimentRelationshipsAppStoreVersionExperimentTreatments) {
	o.AppStoreVersionExperimentTreatments = &v
}

func (o AppStoreVersionExperimentRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppStoreVersionExperimentRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppStoreVersion) {
		toSerialize["appStoreVersion"] = o.AppStoreVersion
	}
	if !IsNil(o.AppStoreVersionExperimentTreatments) {
		toSerialize["appStoreVersionExperimentTreatments"] = o.AppStoreVersionExperimentTreatments
	}
	return toSerialize, nil
}

type NullableAppStoreVersionExperimentRelationships struct {
	value *AppStoreVersionExperimentRelationships
	isSet bool
}

func (v NullableAppStoreVersionExperimentRelationships) Get() *AppStoreVersionExperimentRelationships {
	return v.value
}

func (v *NullableAppStoreVersionExperimentRelationships) Set(val *AppStoreVersionExperimentRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStoreVersionExperimentRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStoreVersionExperimentRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStoreVersionExperimentRelationships(val *AppStoreVersionExperimentRelationships) *NullableAppStoreVersionExperimentRelationships {
	return &NullableAppStoreVersionExperimentRelationships{value: val, isSet: true}
}

func (v NullableAppStoreVersionExperimentRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStoreVersionExperimentRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


