/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the AppStoreVersionSubmissionRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppStoreVersionSubmissionRelationships{}

// AppStoreVersionSubmissionRelationships struct for AppStoreVersionSubmissionRelationships
type AppStoreVersionSubmissionRelationships struct {
	AppStoreVersion *AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion `json:"appStoreVersion,omitempty"`
}

// NewAppStoreVersionSubmissionRelationships instantiates a new AppStoreVersionSubmissionRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStoreVersionSubmissionRelationships() *AppStoreVersionSubmissionRelationships {
	this := AppStoreVersionSubmissionRelationships{}
	return &this
}

// NewAppStoreVersionSubmissionRelationshipsWithDefaults instantiates a new AppStoreVersionSubmissionRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStoreVersionSubmissionRelationshipsWithDefaults() *AppStoreVersionSubmissionRelationships {
	this := AppStoreVersionSubmissionRelationships{}
	return &this
}

// GetAppStoreVersion returns the AppStoreVersion field value if set, zero value otherwise.
func (o *AppStoreVersionSubmissionRelationships) GetAppStoreVersion() AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion {
	if o == nil || IsNil(o.AppStoreVersion) {
		var ret AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion
		return ret
	}
	return *o.AppStoreVersion
}

// GetAppStoreVersionOk returns a tuple with the AppStoreVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionSubmissionRelationships) GetAppStoreVersionOk() (*AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion, bool) {
	if o == nil || IsNil(o.AppStoreVersion) {
		return nil, false
	}
	return o.AppStoreVersion, true
}

// HasAppStoreVersion returns a boolean if a field has been set.
func (o *AppStoreVersionSubmissionRelationships) HasAppStoreVersion() bool {
	if o != nil && !IsNil(o.AppStoreVersion) {
		return true
	}

	return false
}

// SetAppStoreVersion gets a reference to the given AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion and assigns it to the AppStoreVersion field.
func (o *AppStoreVersionSubmissionRelationships) SetAppStoreVersion(v AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion) {
	o.AppStoreVersion = &v
}

func (o AppStoreVersionSubmissionRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppStoreVersionSubmissionRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppStoreVersion) {
		toSerialize["appStoreVersion"] = o.AppStoreVersion
	}
	return toSerialize, nil
}

type NullableAppStoreVersionSubmissionRelationships struct {
	value *AppStoreVersionSubmissionRelationships
	isSet bool
}

func (v NullableAppStoreVersionSubmissionRelationships) Get() *AppStoreVersionSubmissionRelationships {
	return v.value
}

func (v *NullableAppStoreVersionSubmissionRelationships) Set(val *AppStoreVersionSubmissionRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStoreVersionSubmissionRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStoreVersionSubmissionRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStoreVersionSubmissionRelationships(val *AppStoreVersionSubmissionRelationships) *NullableAppStoreVersionSubmissionRelationships {
	return &NullableAppStoreVersionSubmissionRelationships{value: val, isSet: true}
}

func (v NullableAppStoreVersionSubmissionRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStoreVersionSubmissionRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


