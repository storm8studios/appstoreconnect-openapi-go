/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the BetaBuildLocalization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BetaBuildLocalization{}

// BetaBuildLocalization struct for BetaBuildLocalization
type BetaBuildLocalization struct {
	Type string `json:"type"`
	Id string `json:"id"`
	Attributes *BetaBuildLocalizationAttributes `json:"attributes,omitempty"`
	Relationships *BetaAppReviewSubmissionRelationships `json:"relationships,omitempty"`
	Links ResourceLinks `json:"links"`
}

// NewBetaBuildLocalization instantiates a new BetaBuildLocalization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBetaBuildLocalization(type_ string, id string, links ResourceLinks) *BetaBuildLocalization {
	this := BetaBuildLocalization{}
	this.Type = type_
	this.Id = id
	this.Links = links
	return &this
}

// NewBetaBuildLocalizationWithDefaults instantiates a new BetaBuildLocalization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBetaBuildLocalizationWithDefaults() *BetaBuildLocalization {
	this := BetaBuildLocalization{}
	return &this
}

// GetType returns the Type field value
func (o *BetaBuildLocalization) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BetaBuildLocalization) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BetaBuildLocalization) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *BetaBuildLocalization) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BetaBuildLocalization) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BetaBuildLocalization) SetId(v string) {
	o.Id = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *BetaBuildLocalization) GetAttributes() BetaBuildLocalizationAttributes {
	if o == nil || IsNil(o.Attributes) {
		var ret BetaBuildLocalizationAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BetaBuildLocalization) GetAttributesOk() (*BetaBuildLocalizationAttributes, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *BetaBuildLocalization) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given BetaBuildLocalizationAttributes and assigns it to the Attributes field.
func (o *BetaBuildLocalization) SetAttributes(v BetaBuildLocalizationAttributes) {
	o.Attributes = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *BetaBuildLocalization) GetRelationships() BetaAppReviewSubmissionRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret BetaAppReviewSubmissionRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BetaBuildLocalization) GetRelationshipsOk() (*BetaAppReviewSubmissionRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *BetaBuildLocalization) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given BetaAppReviewSubmissionRelationships and assigns it to the Relationships field.
func (o *BetaBuildLocalization) SetRelationships(v BetaAppReviewSubmissionRelationships) {
	o.Relationships = &v
}

// GetLinks returns the Links field value
func (o *BetaBuildLocalization) GetLinks() ResourceLinks {
	if o == nil {
		var ret ResourceLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *BetaBuildLocalization) GetLinksOk() (*ResourceLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *BetaBuildLocalization) SetLinks(v ResourceLinks) {
	o.Links = v
}

func (o BetaBuildLocalization) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BetaBuildLocalization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["id"] = o.Id
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	toSerialize["links"] = o.Links
	return toSerialize, nil
}

type NullableBetaBuildLocalization struct {
	value *BetaBuildLocalization
	isSet bool
}

func (v NullableBetaBuildLocalization) Get() *BetaBuildLocalization {
	return v.value
}

func (v *NullableBetaBuildLocalization) Set(val *BetaBuildLocalization) {
	v.value = val
	v.isSet = true
}

func (v NullableBetaBuildLocalization) IsSet() bool {
	return v.isSet
}

func (v *NullableBetaBuildLocalization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBetaBuildLocalization(val *BetaBuildLocalization) *NullableBetaBuildLocalization {
	return &NullableBetaBuildLocalization{value: val, isSet: true}
}

func (v NullableBetaBuildLocalization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBetaBuildLocalization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


