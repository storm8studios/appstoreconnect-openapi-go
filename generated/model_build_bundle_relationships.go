/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the BuildBundleRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildBundleRelationships{}

// BuildBundleRelationships struct for BuildBundleRelationships
type BuildBundleRelationships struct {
	AppClipDomainCacheStatus *BuildBundleRelationshipsAppClipDomainCacheStatus `json:"appClipDomainCacheStatus,omitempty"`
	AppClipDomainDebugStatus *BuildBundleRelationshipsAppClipDomainCacheStatus `json:"appClipDomainDebugStatus,omitempty"`
	BetaAppClipInvocations *BuildBundleRelationshipsBetaAppClipInvocations `json:"betaAppClipInvocations,omitempty"`
	BuildBundleFileSizes *BuildBundleRelationshipsBuildBundleFileSizes `json:"buildBundleFileSizes,omitempty"`
}

// NewBuildBundleRelationships instantiates a new BuildBundleRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildBundleRelationships() *BuildBundleRelationships {
	this := BuildBundleRelationships{}
	return &this
}

// NewBuildBundleRelationshipsWithDefaults instantiates a new BuildBundleRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildBundleRelationshipsWithDefaults() *BuildBundleRelationships {
	this := BuildBundleRelationships{}
	return &this
}

// GetAppClipDomainCacheStatus returns the AppClipDomainCacheStatus field value if set, zero value otherwise.
func (o *BuildBundleRelationships) GetAppClipDomainCacheStatus() BuildBundleRelationshipsAppClipDomainCacheStatus {
	if o == nil || IsNil(o.AppClipDomainCacheStatus) {
		var ret BuildBundleRelationshipsAppClipDomainCacheStatus
		return ret
	}
	return *o.AppClipDomainCacheStatus
}

// GetAppClipDomainCacheStatusOk returns a tuple with the AppClipDomainCacheStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildBundleRelationships) GetAppClipDomainCacheStatusOk() (*BuildBundleRelationshipsAppClipDomainCacheStatus, bool) {
	if o == nil || IsNil(o.AppClipDomainCacheStatus) {
		return nil, false
	}
	return o.AppClipDomainCacheStatus, true
}

// HasAppClipDomainCacheStatus returns a boolean if a field has been set.
func (o *BuildBundleRelationships) HasAppClipDomainCacheStatus() bool {
	if o != nil && !IsNil(o.AppClipDomainCacheStatus) {
		return true
	}

	return false
}

// SetAppClipDomainCacheStatus gets a reference to the given BuildBundleRelationshipsAppClipDomainCacheStatus and assigns it to the AppClipDomainCacheStatus field.
func (o *BuildBundleRelationships) SetAppClipDomainCacheStatus(v BuildBundleRelationshipsAppClipDomainCacheStatus) {
	o.AppClipDomainCacheStatus = &v
}

// GetAppClipDomainDebugStatus returns the AppClipDomainDebugStatus field value if set, zero value otherwise.
func (o *BuildBundleRelationships) GetAppClipDomainDebugStatus() BuildBundleRelationshipsAppClipDomainCacheStatus {
	if o == nil || IsNil(o.AppClipDomainDebugStatus) {
		var ret BuildBundleRelationshipsAppClipDomainCacheStatus
		return ret
	}
	return *o.AppClipDomainDebugStatus
}

// GetAppClipDomainDebugStatusOk returns a tuple with the AppClipDomainDebugStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildBundleRelationships) GetAppClipDomainDebugStatusOk() (*BuildBundleRelationshipsAppClipDomainCacheStatus, bool) {
	if o == nil || IsNil(o.AppClipDomainDebugStatus) {
		return nil, false
	}
	return o.AppClipDomainDebugStatus, true
}

// HasAppClipDomainDebugStatus returns a boolean if a field has been set.
func (o *BuildBundleRelationships) HasAppClipDomainDebugStatus() bool {
	if o != nil && !IsNil(o.AppClipDomainDebugStatus) {
		return true
	}

	return false
}

// SetAppClipDomainDebugStatus gets a reference to the given BuildBundleRelationshipsAppClipDomainCacheStatus and assigns it to the AppClipDomainDebugStatus field.
func (o *BuildBundleRelationships) SetAppClipDomainDebugStatus(v BuildBundleRelationshipsAppClipDomainCacheStatus) {
	o.AppClipDomainDebugStatus = &v
}

// GetBetaAppClipInvocations returns the BetaAppClipInvocations field value if set, zero value otherwise.
func (o *BuildBundleRelationships) GetBetaAppClipInvocations() BuildBundleRelationshipsBetaAppClipInvocations {
	if o == nil || IsNil(o.BetaAppClipInvocations) {
		var ret BuildBundleRelationshipsBetaAppClipInvocations
		return ret
	}
	return *o.BetaAppClipInvocations
}

// GetBetaAppClipInvocationsOk returns a tuple with the BetaAppClipInvocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildBundleRelationships) GetBetaAppClipInvocationsOk() (*BuildBundleRelationshipsBetaAppClipInvocations, bool) {
	if o == nil || IsNil(o.BetaAppClipInvocations) {
		return nil, false
	}
	return o.BetaAppClipInvocations, true
}

// HasBetaAppClipInvocations returns a boolean if a field has been set.
func (o *BuildBundleRelationships) HasBetaAppClipInvocations() bool {
	if o != nil && !IsNil(o.BetaAppClipInvocations) {
		return true
	}

	return false
}

// SetBetaAppClipInvocations gets a reference to the given BuildBundleRelationshipsBetaAppClipInvocations and assigns it to the BetaAppClipInvocations field.
func (o *BuildBundleRelationships) SetBetaAppClipInvocations(v BuildBundleRelationshipsBetaAppClipInvocations) {
	o.BetaAppClipInvocations = &v
}

// GetBuildBundleFileSizes returns the BuildBundleFileSizes field value if set, zero value otherwise.
func (o *BuildBundleRelationships) GetBuildBundleFileSizes() BuildBundleRelationshipsBuildBundleFileSizes {
	if o == nil || IsNil(o.BuildBundleFileSizes) {
		var ret BuildBundleRelationshipsBuildBundleFileSizes
		return ret
	}
	return *o.BuildBundleFileSizes
}

// GetBuildBundleFileSizesOk returns a tuple with the BuildBundleFileSizes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildBundleRelationships) GetBuildBundleFileSizesOk() (*BuildBundleRelationshipsBuildBundleFileSizes, bool) {
	if o == nil || IsNil(o.BuildBundleFileSizes) {
		return nil, false
	}
	return o.BuildBundleFileSizes, true
}

// HasBuildBundleFileSizes returns a boolean if a field has been set.
func (o *BuildBundleRelationships) HasBuildBundleFileSizes() bool {
	if o != nil && !IsNil(o.BuildBundleFileSizes) {
		return true
	}

	return false
}

// SetBuildBundleFileSizes gets a reference to the given BuildBundleRelationshipsBuildBundleFileSizes and assigns it to the BuildBundleFileSizes field.
func (o *BuildBundleRelationships) SetBuildBundleFileSizes(v BuildBundleRelationshipsBuildBundleFileSizes) {
	o.BuildBundleFileSizes = &v
}

func (o BuildBundleRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildBundleRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppClipDomainCacheStatus) {
		toSerialize["appClipDomainCacheStatus"] = o.AppClipDomainCacheStatus
	}
	if !IsNil(o.AppClipDomainDebugStatus) {
		toSerialize["appClipDomainDebugStatus"] = o.AppClipDomainDebugStatus
	}
	if !IsNil(o.BetaAppClipInvocations) {
		toSerialize["betaAppClipInvocations"] = o.BetaAppClipInvocations
	}
	if !IsNil(o.BuildBundleFileSizes) {
		toSerialize["buildBundleFileSizes"] = o.BuildBundleFileSizes
	}
	return toSerialize, nil
}

type NullableBuildBundleRelationships struct {
	value *BuildBundleRelationships
	isSet bool
}

func (v NullableBuildBundleRelationships) Get() *BuildBundleRelationships {
	return v.value
}

func (v *NullableBuildBundleRelationships) Set(val *BuildBundleRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildBundleRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildBundleRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildBundleRelationships(val *BuildBundleRelationships) *NullableBuildBundleRelationships {
	return &NullableBuildBundleRelationships{value: val, isSet: true}
}

func (v NullableBuildBundleRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildBundleRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


