/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the BuildIconAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildIconAttributes{}

// BuildIconAttributes struct for BuildIconAttributes
type BuildIconAttributes struct {
	Name *string `json:"name,omitempty"`
	IconAsset *ImageAsset `json:"iconAsset,omitempty"`
	IconType *IconAssetType `json:"iconType,omitempty"`
}

// NewBuildIconAttributes instantiates a new BuildIconAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildIconAttributes() *BuildIconAttributes {
	this := BuildIconAttributes{}
	return &this
}

// NewBuildIconAttributesWithDefaults instantiates a new BuildIconAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildIconAttributesWithDefaults() *BuildIconAttributes {
	this := BuildIconAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BuildIconAttributes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildIconAttributes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BuildIconAttributes) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BuildIconAttributes) SetName(v string) {
	o.Name = &v
}

// GetIconAsset returns the IconAsset field value if set, zero value otherwise.
func (o *BuildIconAttributes) GetIconAsset() ImageAsset {
	if o == nil || IsNil(o.IconAsset) {
		var ret ImageAsset
		return ret
	}
	return *o.IconAsset
}

// GetIconAssetOk returns a tuple with the IconAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildIconAttributes) GetIconAssetOk() (*ImageAsset, bool) {
	if o == nil || IsNil(o.IconAsset) {
		return nil, false
	}
	return o.IconAsset, true
}

// HasIconAsset returns a boolean if a field has been set.
func (o *BuildIconAttributes) HasIconAsset() bool {
	if o != nil && !IsNil(o.IconAsset) {
		return true
	}

	return false
}

// SetIconAsset gets a reference to the given ImageAsset and assigns it to the IconAsset field.
func (o *BuildIconAttributes) SetIconAsset(v ImageAsset) {
	o.IconAsset = &v
}

// GetIconType returns the IconType field value if set, zero value otherwise.
func (o *BuildIconAttributes) GetIconType() IconAssetType {
	if o == nil || IsNil(o.IconType) {
		var ret IconAssetType
		return ret
	}
	return *o.IconType
}

// GetIconTypeOk returns a tuple with the IconType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildIconAttributes) GetIconTypeOk() (*IconAssetType, bool) {
	if o == nil || IsNil(o.IconType) {
		return nil, false
	}
	return o.IconType, true
}

// HasIconType returns a boolean if a field has been set.
func (o *BuildIconAttributes) HasIconType() bool {
	if o != nil && !IsNil(o.IconType) {
		return true
	}

	return false
}

// SetIconType gets a reference to the given IconAssetType and assigns it to the IconType field.
func (o *BuildIconAttributes) SetIconType(v IconAssetType) {
	o.IconType = &v
}

func (o BuildIconAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildIconAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.IconAsset) {
		toSerialize["iconAsset"] = o.IconAsset
	}
	if !IsNil(o.IconType) {
		toSerialize["iconType"] = o.IconType
	}
	return toSerialize, nil
}

type NullableBuildIconAttributes struct {
	value *BuildIconAttributes
	isSet bool
}

func (v NullableBuildIconAttributes) Get() *BuildIconAttributes {
	return v.value
}

func (v *NullableBuildIconAttributes) Set(val *BuildIconAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildIconAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildIconAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildIconAttributes(val *BuildIconAttributes) *NullableBuildIconAttributes {
	return &NullableBuildIconAttributes{value: val, isSet: true}
}

func (v NullableBuildIconAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildIconAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


