/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the BuildUpdateRequestDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildUpdateRequestDataAttributes{}

// BuildUpdateRequestDataAttributes struct for BuildUpdateRequestDataAttributes
type BuildUpdateRequestDataAttributes struct {
	Expired *bool `json:"expired,omitempty"`
	UsesNonExemptEncryption *bool `json:"usesNonExemptEncryption,omitempty"`
}

// NewBuildUpdateRequestDataAttributes instantiates a new BuildUpdateRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildUpdateRequestDataAttributes() *BuildUpdateRequestDataAttributes {
	this := BuildUpdateRequestDataAttributes{}
	return &this
}

// NewBuildUpdateRequestDataAttributesWithDefaults instantiates a new BuildUpdateRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildUpdateRequestDataAttributesWithDefaults() *BuildUpdateRequestDataAttributes {
	this := BuildUpdateRequestDataAttributes{}
	return &this
}

// GetExpired returns the Expired field value if set, zero value otherwise.
func (o *BuildUpdateRequestDataAttributes) GetExpired() bool {
	if o == nil || IsNil(o.Expired) {
		var ret bool
		return ret
	}
	return *o.Expired
}

// GetExpiredOk returns a tuple with the Expired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildUpdateRequestDataAttributes) GetExpiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Expired) {
		return nil, false
	}
	return o.Expired, true
}

// HasExpired returns a boolean if a field has been set.
func (o *BuildUpdateRequestDataAttributes) HasExpired() bool {
	if o != nil && !IsNil(o.Expired) {
		return true
	}

	return false
}

// SetExpired gets a reference to the given bool and assigns it to the Expired field.
func (o *BuildUpdateRequestDataAttributes) SetExpired(v bool) {
	o.Expired = &v
}

// GetUsesNonExemptEncryption returns the UsesNonExemptEncryption field value if set, zero value otherwise.
func (o *BuildUpdateRequestDataAttributes) GetUsesNonExemptEncryption() bool {
	if o == nil || IsNil(o.UsesNonExemptEncryption) {
		var ret bool
		return ret
	}
	return *o.UsesNonExemptEncryption
}

// GetUsesNonExemptEncryptionOk returns a tuple with the UsesNonExemptEncryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildUpdateRequestDataAttributes) GetUsesNonExemptEncryptionOk() (*bool, bool) {
	if o == nil || IsNil(o.UsesNonExemptEncryption) {
		return nil, false
	}
	return o.UsesNonExemptEncryption, true
}

// HasUsesNonExemptEncryption returns a boolean if a field has been set.
func (o *BuildUpdateRequestDataAttributes) HasUsesNonExemptEncryption() bool {
	if o != nil && !IsNil(o.UsesNonExemptEncryption) {
		return true
	}

	return false
}

// SetUsesNonExemptEncryption gets a reference to the given bool and assigns it to the UsesNonExemptEncryption field.
func (o *BuildUpdateRequestDataAttributes) SetUsesNonExemptEncryption(v bool) {
	o.UsesNonExemptEncryption = &v
}

func (o BuildUpdateRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildUpdateRequestDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Expired) {
		toSerialize["expired"] = o.Expired
	}
	if !IsNil(o.UsesNonExemptEncryption) {
		toSerialize["usesNonExemptEncryption"] = o.UsesNonExemptEncryption
	}
	return toSerialize, nil
}

type NullableBuildUpdateRequestDataAttributes struct {
	value *BuildUpdateRequestDataAttributes
	isSet bool
}

func (v NullableBuildUpdateRequestDataAttributes) Get() *BuildUpdateRequestDataAttributes {
	return v.value
}

func (v *NullableBuildUpdateRequestDataAttributes) Set(val *BuildUpdateRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildUpdateRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildUpdateRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildUpdateRequestDataAttributes(val *BuildUpdateRequestDataAttributes) *NullableBuildUpdateRequestDataAttributes {
	return &NullableBuildUpdateRequestDataAttributes{value: val, isSet: true}
}

func (v NullableBuildUpdateRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildUpdateRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


