/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the CiTestResultAttributesDestinationTestResultsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CiTestResultAttributesDestinationTestResultsInner{}

// CiTestResultAttributesDestinationTestResultsInner struct for CiTestResultAttributesDestinationTestResultsInner
type CiTestResultAttributesDestinationTestResultsInner struct {
	Uuid *string `json:"uuid,omitempty"`
	DeviceName *string `json:"deviceName,omitempty"`
	OsVersion *string `json:"osVersion,omitempty"`
	Status *CiTestStatus `json:"status,omitempty"`
	Duration *float32 `json:"duration,omitempty"`
}

// NewCiTestResultAttributesDestinationTestResultsInner instantiates a new CiTestResultAttributesDestinationTestResultsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCiTestResultAttributesDestinationTestResultsInner() *CiTestResultAttributesDestinationTestResultsInner {
	this := CiTestResultAttributesDestinationTestResultsInner{}
	return &this
}

// NewCiTestResultAttributesDestinationTestResultsInnerWithDefaults instantiates a new CiTestResultAttributesDestinationTestResultsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCiTestResultAttributesDestinationTestResultsInnerWithDefaults() *CiTestResultAttributesDestinationTestResultsInner {
	this := CiTestResultAttributesDestinationTestResultsInner{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *CiTestResultAttributesDestinationTestResultsInner) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiTestResultAttributesDestinationTestResultsInner) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *CiTestResultAttributesDestinationTestResultsInner) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *CiTestResultAttributesDestinationTestResultsInner) SetUuid(v string) {
	o.Uuid = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *CiTestResultAttributesDestinationTestResultsInner) GetDeviceName() string {
	if o == nil || IsNil(o.DeviceName) {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiTestResultAttributesDestinationTestResultsInner) GetDeviceNameOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceName) {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *CiTestResultAttributesDestinationTestResultsInner) HasDeviceName() bool {
	if o != nil && !IsNil(o.DeviceName) {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *CiTestResultAttributesDestinationTestResultsInner) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *CiTestResultAttributesDestinationTestResultsInner) GetOsVersion() string {
	if o == nil || IsNil(o.OsVersion) {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiTestResultAttributesDestinationTestResultsInner) GetOsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.OsVersion) {
		return nil, false
	}
	return o.OsVersion, true
}

// HasOsVersion returns a boolean if a field has been set.
func (o *CiTestResultAttributesDestinationTestResultsInner) HasOsVersion() bool {
	if o != nil && !IsNil(o.OsVersion) {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *CiTestResultAttributesDestinationTestResultsInner) SetOsVersion(v string) {
	o.OsVersion = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CiTestResultAttributesDestinationTestResultsInner) GetStatus() CiTestStatus {
	if o == nil || IsNil(o.Status) {
		var ret CiTestStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiTestResultAttributesDestinationTestResultsInner) GetStatusOk() (*CiTestStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CiTestResultAttributesDestinationTestResultsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CiTestStatus and assigns it to the Status field.
func (o *CiTestResultAttributesDestinationTestResultsInner) SetStatus(v CiTestStatus) {
	o.Status = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *CiTestResultAttributesDestinationTestResultsInner) GetDuration() float32 {
	if o == nil || IsNil(o.Duration) {
		var ret float32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiTestResultAttributesDestinationTestResultsInner) GetDurationOk() (*float32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *CiTestResultAttributesDestinationTestResultsInner) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given float32 and assigns it to the Duration field.
func (o *CiTestResultAttributesDestinationTestResultsInner) SetDuration(v float32) {
	o.Duration = &v
}

func (o CiTestResultAttributesDestinationTestResultsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CiTestResultAttributesDestinationTestResultsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.DeviceName) {
		toSerialize["deviceName"] = o.DeviceName
	}
	if !IsNil(o.OsVersion) {
		toSerialize["osVersion"] = o.OsVersion
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	return toSerialize, nil
}

type NullableCiTestResultAttributesDestinationTestResultsInner struct {
	value *CiTestResultAttributesDestinationTestResultsInner
	isSet bool
}

func (v NullableCiTestResultAttributesDestinationTestResultsInner) Get() *CiTestResultAttributesDestinationTestResultsInner {
	return v.value
}

func (v *NullableCiTestResultAttributesDestinationTestResultsInner) Set(val *CiTestResultAttributesDestinationTestResultsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCiTestResultAttributesDestinationTestResultsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCiTestResultAttributesDestinationTestResultsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCiTestResultAttributesDestinationTestResultsInner(val *CiTestResultAttributesDestinationTestResultsInner) *NullableCiTestResultAttributesDestinationTestResultsInner {
	return &NullableCiTestResultAttributesDestinationTestResultsInner{value: val, isSet: true}
}

func (v NullableCiTestResultAttributesDestinationTestResultsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCiTestResultAttributesDestinationTestResultsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


