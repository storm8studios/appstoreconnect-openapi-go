/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the CiXcodeVersionRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CiXcodeVersionRelationships{}

// CiXcodeVersionRelationships struct for CiXcodeVersionRelationships
type CiXcodeVersionRelationships struct {
	MacOsVersions *CiXcodeVersionRelationshipsMacOsVersions `json:"macOsVersions,omitempty"`
}

// NewCiXcodeVersionRelationships instantiates a new CiXcodeVersionRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCiXcodeVersionRelationships() *CiXcodeVersionRelationships {
	this := CiXcodeVersionRelationships{}
	return &this
}

// NewCiXcodeVersionRelationshipsWithDefaults instantiates a new CiXcodeVersionRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCiXcodeVersionRelationshipsWithDefaults() *CiXcodeVersionRelationships {
	this := CiXcodeVersionRelationships{}
	return &this
}

// GetMacOsVersions returns the MacOsVersions field value if set, zero value otherwise.
func (o *CiXcodeVersionRelationships) GetMacOsVersions() CiXcodeVersionRelationshipsMacOsVersions {
	if o == nil || IsNil(o.MacOsVersions) {
		var ret CiXcodeVersionRelationshipsMacOsVersions
		return ret
	}
	return *o.MacOsVersions
}

// GetMacOsVersionsOk returns a tuple with the MacOsVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiXcodeVersionRelationships) GetMacOsVersionsOk() (*CiXcodeVersionRelationshipsMacOsVersions, bool) {
	if o == nil || IsNil(o.MacOsVersions) {
		return nil, false
	}
	return o.MacOsVersions, true
}

// HasMacOsVersions returns a boolean if a field has been set.
func (o *CiXcodeVersionRelationships) HasMacOsVersions() bool {
	if o != nil && !IsNil(o.MacOsVersions) {
		return true
	}

	return false
}

// SetMacOsVersions gets a reference to the given CiXcodeVersionRelationshipsMacOsVersions and assigns it to the MacOsVersions field.
func (o *CiXcodeVersionRelationships) SetMacOsVersions(v CiXcodeVersionRelationshipsMacOsVersions) {
	o.MacOsVersions = &v
}

func (o CiXcodeVersionRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CiXcodeVersionRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MacOsVersions) {
		toSerialize["macOsVersions"] = o.MacOsVersions
	}
	return toSerialize, nil
}

type NullableCiXcodeVersionRelationships struct {
	value *CiXcodeVersionRelationships
	isSet bool
}

func (v NullableCiXcodeVersionRelationships) Get() *CiXcodeVersionRelationships {
	return v.value
}

func (v *NullableCiXcodeVersionRelationships) Set(val *CiXcodeVersionRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableCiXcodeVersionRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableCiXcodeVersionRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCiXcodeVersionRelationships(val *CiXcodeVersionRelationships) *NullableCiXcodeVersionRelationships {
	return &NullableCiXcodeVersionRelationships{value: val, isSet: true}
}

func (v NullableCiXcodeVersionRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCiXcodeVersionRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


