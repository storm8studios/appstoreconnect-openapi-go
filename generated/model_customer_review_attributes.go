/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
	"time"
)

// checks if the CustomerReviewAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerReviewAttributes{}

// CustomerReviewAttributes struct for CustomerReviewAttributes
type CustomerReviewAttributes struct {
	Rating *int32 `json:"rating,omitempty"`
	Title *string `json:"title,omitempty"`
	Body *string `json:"body,omitempty"`
	ReviewerNickname *string `json:"reviewerNickname,omitempty"`
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	Territory *TerritoryCode `json:"territory,omitempty"`
}

// NewCustomerReviewAttributes instantiates a new CustomerReviewAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerReviewAttributes() *CustomerReviewAttributes {
	this := CustomerReviewAttributes{}
	return &this
}

// NewCustomerReviewAttributesWithDefaults instantiates a new CustomerReviewAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerReviewAttributesWithDefaults() *CustomerReviewAttributes {
	this := CustomerReviewAttributes{}
	return &this
}

// GetRating returns the Rating field value if set, zero value otherwise.
func (o *CustomerReviewAttributes) GetRating() int32 {
	if o == nil || IsNil(o.Rating) {
		var ret int32
		return ret
	}
	return *o.Rating
}

// GetRatingOk returns a tuple with the Rating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerReviewAttributes) GetRatingOk() (*int32, bool) {
	if o == nil || IsNil(o.Rating) {
		return nil, false
	}
	return o.Rating, true
}

// HasRating returns a boolean if a field has been set.
func (o *CustomerReviewAttributes) HasRating() bool {
	if o != nil && !IsNil(o.Rating) {
		return true
	}

	return false
}

// SetRating gets a reference to the given int32 and assigns it to the Rating field.
func (o *CustomerReviewAttributes) SetRating(v int32) {
	o.Rating = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CustomerReviewAttributes) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerReviewAttributes) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CustomerReviewAttributes) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CustomerReviewAttributes) SetTitle(v string) {
	o.Title = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *CustomerReviewAttributes) GetBody() string {
	if o == nil || IsNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerReviewAttributes) GetBodyOk() (*string, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *CustomerReviewAttributes) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *CustomerReviewAttributes) SetBody(v string) {
	o.Body = &v
}

// GetReviewerNickname returns the ReviewerNickname field value if set, zero value otherwise.
func (o *CustomerReviewAttributes) GetReviewerNickname() string {
	if o == nil || IsNil(o.ReviewerNickname) {
		var ret string
		return ret
	}
	return *o.ReviewerNickname
}

// GetReviewerNicknameOk returns a tuple with the ReviewerNickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerReviewAttributes) GetReviewerNicknameOk() (*string, bool) {
	if o == nil || IsNil(o.ReviewerNickname) {
		return nil, false
	}
	return o.ReviewerNickname, true
}

// HasReviewerNickname returns a boolean if a field has been set.
func (o *CustomerReviewAttributes) HasReviewerNickname() bool {
	if o != nil && !IsNil(o.ReviewerNickname) {
		return true
	}

	return false
}

// SetReviewerNickname gets a reference to the given string and assigns it to the ReviewerNickname field.
func (o *CustomerReviewAttributes) SetReviewerNickname(v string) {
	o.ReviewerNickname = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *CustomerReviewAttributes) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerReviewAttributes) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *CustomerReviewAttributes) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *CustomerReviewAttributes) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetTerritory returns the Territory field value if set, zero value otherwise.
func (o *CustomerReviewAttributes) GetTerritory() TerritoryCode {
	if o == nil || IsNil(o.Territory) {
		var ret TerritoryCode
		return ret
	}
	return *o.Territory
}

// GetTerritoryOk returns a tuple with the Territory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerReviewAttributes) GetTerritoryOk() (*TerritoryCode, bool) {
	if o == nil || IsNil(o.Territory) {
		return nil, false
	}
	return o.Territory, true
}

// HasTerritory returns a boolean if a field has been set.
func (o *CustomerReviewAttributes) HasTerritory() bool {
	if o != nil && !IsNil(o.Territory) {
		return true
	}

	return false
}

// SetTerritory gets a reference to the given TerritoryCode and assigns it to the Territory field.
func (o *CustomerReviewAttributes) SetTerritory(v TerritoryCode) {
	o.Territory = &v
}

func (o CustomerReviewAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerReviewAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rating) {
		toSerialize["rating"] = o.Rating
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !IsNil(o.ReviewerNickname) {
		toSerialize["reviewerNickname"] = o.ReviewerNickname
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.Territory) {
		toSerialize["territory"] = o.Territory
	}
	return toSerialize, nil
}

type NullableCustomerReviewAttributes struct {
	value *CustomerReviewAttributes
	isSet bool
}

func (v NullableCustomerReviewAttributes) Get() *CustomerReviewAttributes {
	return v.value
}

func (v *NullableCustomerReviewAttributes) Set(val *CustomerReviewAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerReviewAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerReviewAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerReviewAttributes(val *CustomerReviewAttributes) *NullableCustomerReviewAttributes {
	return &NullableCustomerReviewAttributes{value: val, isSet: true}
}

func (v NullableCustomerReviewAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerReviewAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


