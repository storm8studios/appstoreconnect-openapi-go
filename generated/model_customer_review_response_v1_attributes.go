/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
	"time"
)

// checks if the CustomerReviewResponseV1Attributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerReviewResponseV1Attributes{}

// CustomerReviewResponseV1Attributes struct for CustomerReviewResponseV1Attributes
type CustomerReviewResponseV1Attributes struct {
	ResponseBody *string `json:"responseBody,omitempty"`
	LastModifiedDate *time.Time `json:"lastModifiedDate,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewCustomerReviewResponseV1Attributes instantiates a new CustomerReviewResponseV1Attributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerReviewResponseV1Attributes() *CustomerReviewResponseV1Attributes {
	this := CustomerReviewResponseV1Attributes{}
	return &this
}

// NewCustomerReviewResponseV1AttributesWithDefaults instantiates a new CustomerReviewResponseV1Attributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerReviewResponseV1AttributesWithDefaults() *CustomerReviewResponseV1Attributes {
	this := CustomerReviewResponseV1Attributes{}
	return &this
}

// GetResponseBody returns the ResponseBody field value if set, zero value otherwise.
func (o *CustomerReviewResponseV1Attributes) GetResponseBody() string {
	if o == nil || IsNil(o.ResponseBody) {
		var ret string
		return ret
	}
	return *o.ResponseBody
}

// GetResponseBodyOk returns a tuple with the ResponseBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerReviewResponseV1Attributes) GetResponseBodyOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseBody) {
		return nil, false
	}
	return o.ResponseBody, true
}

// HasResponseBody returns a boolean if a field has been set.
func (o *CustomerReviewResponseV1Attributes) HasResponseBody() bool {
	if o != nil && !IsNil(o.ResponseBody) {
		return true
	}

	return false
}

// SetResponseBody gets a reference to the given string and assigns it to the ResponseBody field.
func (o *CustomerReviewResponseV1Attributes) SetResponseBody(v string) {
	o.ResponseBody = &v
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *CustomerReviewResponseV1Attributes) GetLastModifiedDate() time.Time {
	if o == nil || IsNil(o.LastModifiedDate) {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDate
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerReviewResponseV1Attributes) GetLastModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModifiedDate) {
		return nil, false
	}
	return o.LastModifiedDate, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *CustomerReviewResponseV1Attributes) HasLastModifiedDate() bool {
	if o != nil && !IsNil(o.LastModifiedDate) {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given time.Time and assigns it to the LastModifiedDate field.
func (o *CustomerReviewResponseV1Attributes) SetLastModifiedDate(v time.Time) {
	o.LastModifiedDate = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CustomerReviewResponseV1Attributes) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerReviewResponseV1Attributes) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CustomerReviewResponseV1Attributes) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CustomerReviewResponseV1Attributes) SetState(v string) {
	o.State = &v
}

func (o CustomerReviewResponseV1Attributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerReviewResponseV1Attributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResponseBody) {
		toSerialize["responseBody"] = o.ResponseBody
	}
	if !IsNil(o.LastModifiedDate) {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableCustomerReviewResponseV1Attributes struct {
	value *CustomerReviewResponseV1Attributes
	isSet bool
}

func (v NullableCustomerReviewResponseV1Attributes) Get() *CustomerReviewResponseV1Attributes {
	return v.value
}

func (v *NullableCustomerReviewResponseV1Attributes) Set(val *CustomerReviewResponseV1Attributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerReviewResponseV1Attributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerReviewResponseV1Attributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerReviewResponseV1Attributes(val *CustomerReviewResponseV1Attributes) *NullableCustomerReviewResponseV1Attributes {
	return &NullableCustomerReviewResponseV1Attributes{value: val, isSet: true}
}

func (v NullableCustomerReviewResponseV1Attributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerReviewResponseV1Attributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


