/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the DiagnosticLogsProductDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiagnosticLogsProductDataInner{}

// DiagnosticLogsProductDataInner struct for DiagnosticLogsProductDataInner
type DiagnosticLogsProductDataInner struct {
	SignatureId *string `json:"signatureId,omitempty"`
	DiagnosticInsights []DiagnosticLogsProductDataInnerDiagnosticInsightsInner `json:"diagnosticInsights,omitempty"`
	DiagnosticLogs []DiagnosticLogsProductDataInnerDiagnosticLogsInner `json:"diagnosticLogs,omitempty"`
}

// NewDiagnosticLogsProductDataInner instantiates a new DiagnosticLogsProductDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiagnosticLogsProductDataInner() *DiagnosticLogsProductDataInner {
	this := DiagnosticLogsProductDataInner{}
	return &this
}

// NewDiagnosticLogsProductDataInnerWithDefaults instantiates a new DiagnosticLogsProductDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiagnosticLogsProductDataInnerWithDefaults() *DiagnosticLogsProductDataInner {
	this := DiagnosticLogsProductDataInner{}
	return &this
}

// GetSignatureId returns the SignatureId field value if set, zero value otherwise.
func (o *DiagnosticLogsProductDataInner) GetSignatureId() string {
	if o == nil || IsNil(o.SignatureId) {
		var ret string
		return ret
	}
	return *o.SignatureId
}

// GetSignatureIdOk returns a tuple with the SignatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticLogsProductDataInner) GetSignatureIdOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureId) {
		return nil, false
	}
	return o.SignatureId, true
}

// HasSignatureId returns a boolean if a field has been set.
func (o *DiagnosticLogsProductDataInner) HasSignatureId() bool {
	if o != nil && !IsNil(o.SignatureId) {
		return true
	}

	return false
}

// SetSignatureId gets a reference to the given string and assigns it to the SignatureId field.
func (o *DiagnosticLogsProductDataInner) SetSignatureId(v string) {
	o.SignatureId = &v
}

// GetDiagnosticInsights returns the DiagnosticInsights field value if set, zero value otherwise.
func (o *DiagnosticLogsProductDataInner) GetDiagnosticInsights() []DiagnosticLogsProductDataInnerDiagnosticInsightsInner {
	if o == nil || IsNil(o.DiagnosticInsights) {
		var ret []DiagnosticLogsProductDataInnerDiagnosticInsightsInner
		return ret
	}
	return o.DiagnosticInsights
}

// GetDiagnosticInsightsOk returns a tuple with the DiagnosticInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticLogsProductDataInner) GetDiagnosticInsightsOk() ([]DiagnosticLogsProductDataInnerDiagnosticInsightsInner, bool) {
	if o == nil || IsNil(o.DiagnosticInsights) {
		return nil, false
	}
	return o.DiagnosticInsights, true
}

// HasDiagnosticInsights returns a boolean if a field has been set.
func (o *DiagnosticLogsProductDataInner) HasDiagnosticInsights() bool {
	if o != nil && !IsNil(o.DiagnosticInsights) {
		return true
	}

	return false
}

// SetDiagnosticInsights gets a reference to the given []DiagnosticLogsProductDataInnerDiagnosticInsightsInner and assigns it to the DiagnosticInsights field.
func (o *DiagnosticLogsProductDataInner) SetDiagnosticInsights(v []DiagnosticLogsProductDataInnerDiagnosticInsightsInner) {
	o.DiagnosticInsights = v
}

// GetDiagnosticLogs returns the DiagnosticLogs field value if set, zero value otherwise.
func (o *DiagnosticLogsProductDataInner) GetDiagnosticLogs() []DiagnosticLogsProductDataInnerDiagnosticLogsInner {
	if o == nil || IsNil(o.DiagnosticLogs) {
		var ret []DiagnosticLogsProductDataInnerDiagnosticLogsInner
		return ret
	}
	return o.DiagnosticLogs
}

// GetDiagnosticLogsOk returns a tuple with the DiagnosticLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticLogsProductDataInner) GetDiagnosticLogsOk() ([]DiagnosticLogsProductDataInnerDiagnosticLogsInner, bool) {
	if o == nil || IsNil(o.DiagnosticLogs) {
		return nil, false
	}
	return o.DiagnosticLogs, true
}

// HasDiagnosticLogs returns a boolean if a field has been set.
func (o *DiagnosticLogsProductDataInner) HasDiagnosticLogs() bool {
	if o != nil && !IsNil(o.DiagnosticLogs) {
		return true
	}

	return false
}

// SetDiagnosticLogs gets a reference to the given []DiagnosticLogsProductDataInnerDiagnosticLogsInner and assigns it to the DiagnosticLogs field.
func (o *DiagnosticLogsProductDataInner) SetDiagnosticLogs(v []DiagnosticLogsProductDataInnerDiagnosticLogsInner) {
	o.DiagnosticLogs = v
}

func (o DiagnosticLogsProductDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiagnosticLogsProductDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SignatureId) {
		toSerialize["signatureId"] = o.SignatureId
	}
	if !IsNil(o.DiagnosticInsights) {
		toSerialize["diagnosticInsights"] = o.DiagnosticInsights
	}
	if !IsNil(o.DiagnosticLogs) {
		toSerialize["diagnosticLogs"] = o.DiagnosticLogs
	}
	return toSerialize, nil
}

type NullableDiagnosticLogsProductDataInner struct {
	value *DiagnosticLogsProductDataInner
	isSet bool
}

func (v NullableDiagnosticLogsProductDataInner) Get() *DiagnosticLogsProductDataInner {
	return v.value
}

func (v *NullableDiagnosticLogsProductDataInner) Set(val *DiagnosticLogsProductDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDiagnosticLogsProductDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDiagnosticLogsProductDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiagnosticLogsProductDataInner(val *DiagnosticLogsProductDataInner) *NullableDiagnosticLogsProductDataInner {
	return &NullableDiagnosticLogsProductDataInner{value: val, isSet: true}
}

func (v NullableDiagnosticLogsProductDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiagnosticLogsProductDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


