/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the InAppPurchaseAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InAppPurchaseAttributes{}

// InAppPurchaseAttributes struct for InAppPurchaseAttributes
type InAppPurchaseAttributes struct {
	ReferenceName *string `json:"referenceName,omitempty"`
	ProductId *string `json:"productId,omitempty"`
	InAppPurchaseType *string `json:"inAppPurchaseType,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewInAppPurchaseAttributes instantiates a new InAppPurchaseAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInAppPurchaseAttributes() *InAppPurchaseAttributes {
	this := InAppPurchaseAttributes{}
	return &this
}

// NewInAppPurchaseAttributesWithDefaults instantiates a new InAppPurchaseAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInAppPurchaseAttributesWithDefaults() *InAppPurchaseAttributes {
	this := InAppPurchaseAttributes{}
	return &this
}

// GetReferenceName returns the ReferenceName field value if set, zero value otherwise.
func (o *InAppPurchaseAttributes) GetReferenceName() string {
	if o == nil || IsNil(o.ReferenceName) {
		var ret string
		return ret
	}
	return *o.ReferenceName
}

// GetReferenceNameOk returns a tuple with the ReferenceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseAttributes) GetReferenceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceName) {
		return nil, false
	}
	return o.ReferenceName, true
}

// HasReferenceName returns a boolean if a field has been set.
func (o *InAppPurchaseAttributes) HasReferenceName() bool {
	if o != nil && !IsNil(o.ReferenceName) {
		return true
	}

	return false
}

// SetReferenceName gets a reference to the given string and assigns it to the ReferenceName field.
func (o *InAppPurchaseAttributes) SetReferenceName(v string) {
	o.ReferenceName = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *InAppPurchaseAttributes) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseAttributes) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *InAppPurchaseAttributes) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *InAppPurchaseAttributes) SetProductId(v string) {
	o.ProductId = &v
}

// GetInAppPurchaseType returns the InAppPurchaseType field value if set, zero value otherwise.
func (o *InAppPurchaseAttributes) GetInAppPurchaseType() string {
	if o == nil || IsNil(o.InAppPurchaseType) {
		var ret string
		return ret
	}
	return *o.InAppPurchaseType
}

// GetInAppPurchaseTypeOk returns a tuple with the InAppPurchaseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseAttributes) GetInAppPurchaseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InAppPurchaseType) {
		return nil, false
	}
	return o.InAppPurchaseType, true
}

// HasInAppPurchaseType returns a boolean if a field has been set.
func (o *InAppPurchaseAttributes) HasInAppPurchaseType() bool {
	if o != nil && !IsNil(o.InAppPurchaseType) {
		return true
	}

	return false
}

// SetInAppPurchaseType gets a reference to the given string and assigns it to the InAppPurchaseType field.
func (o *InAppPurchaseAttributes) SetInAppPurchaseType(v string) {
	o.InAppPurchaseType = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *InAppPurchaseAttributes) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseAttributes) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *InAppPurchaseAttributes) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *InAppPurchaseAttributes) SetState(v string) {
	o.State = &v
}

func (o InAppPurchaseAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InAppPurchaseAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReferenceName) {
		toSerialize["referenceName"] = o.ReferenceName
	}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if !IsNil(o.InAppPurchaseType) {
		toSerialize["inAppPurchaseType"] = o.InAppPurchaseType
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableInAppPurchaseAttributes struct {
	value *InAppPurchaseAttributes
	isSet bool
}

func (v NullableInAppPurchaseAttributes) Get() *InAppPurchaseAttributes {
	return v.value
}

func (v *NullableInAppPurchaseAttributes) Set(val *InAppPurchaseAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableInAppPurchaseAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableInAppPurchaseAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInAppPurchaseAttributes(val *InAppPurchaseAttributes) *NullableInAppPurchaseAttributes {
	return &NullableInAppPurchaseAttributes{value: val, isSet: true}
}

func (v NullableInAppPurchaseAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInAppPurchaseAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


