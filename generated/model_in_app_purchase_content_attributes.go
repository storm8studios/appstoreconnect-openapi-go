/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
	"time"
)

// checks if the InAppPurchaseContentAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InAppPurchaseContentAttributes{}

// InAppPurchaseContentAttributes struct for InAppPurchaseContentAttributes
type InAppPurchaseContentAttributes struct {
	FileName *string `json:"fileName,omitempty"`
	FileSize *int32 `json:"fileSize,omitempty"`
	Url *string `json:"url,omitempty"`
	LastModifiedDate *time.Time `json:"lastModifiedDate,omitempty"`
}

// NewInAppPurchaseContentAttributes instantiates a new InAppPurchaseContentAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInAppPurchaseContentAttributes() *InAppPurchaseContentAttributes {
	this := InAppPurchaseContentAttributes{}
	return &this
}

// NewInAppPurchaseContentAttributesWithDefaults instantiates a new InAppPurchaseContentAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInAppPurchaseContentAttributesWithDefaults() *InAppPurchaseContentAttributes {
	this := InAppPurchaseContentAttributes{}
	return &this
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *InAppPurchaseContentAttributes) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseContentAttributes) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *InAppPurchaseContentAttributes) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *InAppPurchaseContentAttributes) SetFileName(v string) {
	o.FileName = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *InAppPurchaseContentAttributes) GetFileSize() int32 {
	if o == nil || IsNil(o.FileSize) {
		var ret int32
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseContentAttributes) GetFileSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *InAppPurchaseContentAttributes) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int32 and assigns it to the FileSize field.
func (o *InAppPurchaseContentAttributes) SetFileSize(v int32) {
	o.FileSize = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *InAppPurchaseContentAttributes) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseContentAttributes) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *InAppPurchaseContentAttributes) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *InAppPurchaseContentAttributes) SetUrl(v string) {
	o.Url = &v
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *InAppPurchaseContentAttributes) GetLastModifiedDate() time.Time {
	if o == nil || IsNil(o.LastModifiedDate) {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedDate
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseContentAttributes) GetLastModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModifiedDate) {
		return nil, false
	}
	return o.LastModifiedDate, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *InAppPurchaseContentAttributes) HasLastModifiedDate() bool {
	if o != nil && !IsNil(o.LastModifiedDate) {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given time.Time and assigns it to the LastModifiedDate field.
func (o *InAppPurchaseContentAttributes) SetLastModifiedDate(v time.Time) {
	o.LastModifiedDate = &v
}

func (o InAppPurchaseContentAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InAppPurchaseContentAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.FileSize) {
		toSerialize["fileSize"] = o.FileSize
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.LastModifiedDate) {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}
	return toSerialize, nil
}

type NullableInAppPurchaseContentAttributes struct {
	value *InAppPurchaseContentAttributes
	isSet bool
}

func (v NullableInAppPurchaseContentAttributes) Get() *InAppPurchaseContentAttributes {
	return v.value
}

func (v *NullableInAppPurchaseContentAttributes) Set(val *InAppPurchaseContentAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableInAppPurchaseContentAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableInAppPurchaseContentAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInAppPurchaseContentAttributes(val *InAppPurchaseContentAttributes) *NullableInAppPurchaseContentAttributes {
	return &NullableInAppPurchaseContentAttributes{value: val, isSet: true}
}

func (v NullableInAppPurchaseContentAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInAppPurchaseContentAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


