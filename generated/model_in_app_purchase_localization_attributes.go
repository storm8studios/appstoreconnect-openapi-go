/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the InAppPurchaseLocalizationAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InAppPurchaseLocalizationAttributes{}

// InAppPurchaseLocalizationAttributes struct for InAppPurchaseLocalizationAttributes
type InAppPurchaseLocalizationAttributes struct {
	Name *string `json:"name,omitempty"`
	Locale *string `json:"locale,omitempty"`
	Description *string `json:"description,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewInAppPurchaseLocalizationAttributes instantiates a new InAppPurchaseLocalizationAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInAppPurchaseLocalizationAttributes() *InAppPurchaseLocalizationAttributes {
	this := InAppPurchaseLocalizationAttributes{}
	return &this
}

// NewInAppPurchaseLocalizationAttributesWithDefaults instantiates a new InAppPurchaseLocalizationAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInAppPurchaseLocalizationAttributesWithDefaults() *InAppPurchaseLocalizationAttributes {
	this := InAppPurchaseLocalizationAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InAppPurchaseLocalizationAttributes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseLocalizationAttributes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InAppPurchaseLocalizationAttributes) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InAppPurchaseLocalizationAttributes) SetName(v string) {
	o.Name = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *InAppPurchaseLocalizationAttributes) GetLocale() string {
	if o == nil || IsNil(o.Locale) {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseLocalizationAttributes) GetLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *InAppPurchaseLocalizationAttributes) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *InAppPurchaseLocalizationAttributes) SetLocale(v string) {
	o.Locale = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InAppPurchaseLocalizationAttributes) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseLocalizationAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InAppPurchaseLocalizationAttributes) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InAppPurchaseLocalizationAttributes) SetDescription(v string) {
	o.Description = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *InAppPurchaseLocalizationAttributes) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseLocalizationAttributes) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *InAppPurchaseLocalizationAttributes) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *InAppPurchaseLocalizationAttributes) SetState(v string) {
	o.State = &v
}

func (o InAppPurchaseLocalizationAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InAppPurchaseLocalizationAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableInAppPurchaseLocalizationAttributes struct {
	value *InAppPurchaseLocalizationAttributes
	isSet bool
}

func (v NullableInAppPurchaseLocalizationAttributes) Get() *InAppPurchaseLocalizationAttributes {
	return v.value
}

func (v *NullableInAppPurchaseLocalizationAttributes) Set(val *InAppPurchaseLocalizationAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableInAppPurchaseLocalizationAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableInAppPurchaseLocalizationAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInAppPurchaseLocalizationAttributes(val *InAppPurchaseLocalizationAttributes) *NullableInAppPurchaseLocalizationAttributes {
	return &NullableInAppPurchaseLocalizationAttributes{value: val, isSet: true}
}

func (v NullableInAppPurchaseLocalizationAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInAppPurchaseLocalizationAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


