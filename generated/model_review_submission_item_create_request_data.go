/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the ReviewSubmissionItemCreateRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReviewSubmissionItemCreateRequestData{}

// ReviewSubmissionItemCreateRequestData struct for ReviewSubmissionItemCreateRequestData
type ReviewSubmissionItemCreateRequestData struct {
	Type string `json:"type"`
	Relationships ReviewSubmissionItemCreateRequestDataRelationships `json:"relationships"`
}

// NewReviewSubmissionItemCreateRequestData instantiates a new ReviewSubmissionItemCreateRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReviewSubmissionItemCreateRequestData(type_ string, relationships ReviewSubmissionItemCreateRequestDataRelationships) *ReviewSubmissionItemCreateRequestData {
	this := ReviewSubmissionItemCreateRequestData{}
	this.Type = type_
	this.Relationships = relationships
	return &this
}

// NewReviewSubmissionItemCreateRequestDataWithDefaults instantiates a new ReviewSubmissionItemCreateRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReviewSubmissionItemCreateRequestDataWithDefaults() *ReviewSubmissionItemCreateRequestData {
	this := ReviewSubmissionItemCreateRequestData{}
	return &this
}

// GetType returns the Type field value
func (o *ReviewSubmissionItemCreateRequestData) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ReviewSubmissionItemCreateRequestData) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ReviewSubmissionItemCreateRequestData) SetType(v string) {
	o.Type = v
}

// GetRelationships returns the Relationships field value
func (o *ReviewSubmissionItemCreateRequestData) GetRelationships() ReviewSubmissionItemCreateRequestDataRelationships {
	if o == nil {
		var ret ReviewSubmissionItemCreateRequestDataRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *ReviewSubmissionItemCreateRequestData) GetRelationshipsOk() (*ReviewSubmissionItemCreateRequestDataRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *ReviewSubmissionItemCreateRequestData) SetRelationships(v ReviewSubmissionItemCreateRequestDataRelationships) {
	o.Relationships = v
}

func (o ReviewSubmissionItemCreateRequestData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReviewSubmissionItemCreateRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["relationships"] = o.Relationships
	return toSerialize, nil
}

type NullableReviewSubmissionItemCreateRequestData struct {
	value *ReviewSubmissionItemCreateRequestData
	isSet bool
}

func (v NullableReviewSubmissionItemCreateRequestData) Get() *ReviewSubmissionItemCreateRequestData {
	return v.value
}

func (v *NullableReviewSubmissionItemCreateRequestData) Set(val *ReviewSubmissionItemCreateRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableReviewSubmissionItemCreateRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableReviewSubmissionItemCreateRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReviewSubmissionItemCreateRequestData(val *ReviewSubmissionItemCreateRequestData) *NullableReviewSubmissionItemCreateRequestData {
	return &NullableReviewSubmissionItemCreateRequestData{value: val, isSet: true}
}

func (v NullableReviewSubmissionItemCreateRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReviewSubmissionItemCreateRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


