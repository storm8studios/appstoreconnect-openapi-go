/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the ReviewSubmissionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReviewSubmissionResponse{}

// ReviewSubmissionResponse struct for ReviewSubmissionResponse
type ReviewSubmissionResponse struct {
	Data ReviewSubmission `json:"data"`
	Included []ReviewSubmissionsResponseIncludedInner `json:"included,omitempty"`
	Links DocumentLinks `json:"links"`
}

// NewReviewSubmissionResponse instantiates a new ReviewSubmissionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReviewSubmissionResponse(data ReviewSubmission, links DocumentLinks) *ReviewSubmissionResponse {
	this := ReviewSubmissionResponse{}
	this.Data = data
	this.Links = links
	return &this
}

// NewReviewSubmissionResponseWithDefaults instantiates a new ReviewSubmissionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReviewSubmissionResponseWithDefaults() *ReviewSubmissionResponse {
	this := ReviewSubmissionResponse{}
	return &this
}

// GetData returns the Data field value
func (o *ReviewSubmissionResponse) GetData() ReviewSubmission {
	if o == nil {
		var ret ReviewSubmission
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ReviewSubmissionResponse) GetDataOk() (*ReviewSubmission, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ReviewSubmissionResponse) SetData(v ReviewSubmission) {
	o.Data = v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *ReviewSubmissionResponse) GetIncluded() []ReviewSubmissionsResponseIncludedInner {
	if o == nil || IsNil(o.Included) {
		var ret []ReviewSubmissionsResponseIncludedInner
		return ret
	}
	return o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReviewSubmissionResponse) GetIncludedOk() ([]ReviewSubmissionsResponseIncludedInner, bool) {
	if o == nil || IsNil(o.Included) {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *ReviewSubmissionResponse) HasIncluded() bool {
	if o != nil && !IsNil(o.Included) {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given []ReviewSubmissionsResponseIncludedInner and assigns it to the Included field.
func (o *ReviewSubmissionResponse) SetIncluded(v []ReviewSubmissionsResponseIncludedInner) {
	o.Included = v
}

// GetLinks returns the Links field value
func (o *ReviewSubmissionResponse) GetLinks() DocumentLinks {
	if o == nil {
		var ret DocumentLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *ReviewSubmissionResponse) GetLinksOk() (*DocumentLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *ReviewSubmissionResponse) SetLinks(v DocumentLinks) {
	o.Links = v
}

func (o ReviewSubmissionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReviewSubmissionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	if !IsNil(o.Included) {
		toSerialize["included"] = o.Included
	}
	toSerialize["links"] = o.Links
	return toSerialize, nil
}

type NullableReviewSubmissionResponse struct {
	value *ReviewSubmissionResponse
	isSet bool
}

func (v NullableReviewSubmissionResponse) Get() *ReviewSubmissionResponse {
	return v.value
}

func (v *NullableReviewSubmissionResponse) Set(val *ReviewSubmissionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReviewSubmissionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReviewSubmissionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReviewSubmissionResponse(val *ReviewSubmissionResponse) *NullableReviewSubmissionResponse {
	return &NullableReviewSubmissionResponse{value: val, isSet: true}
}

func (v NullableReviewSubmissionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReviewSubmissionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


