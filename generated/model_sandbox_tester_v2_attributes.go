/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the SandboxTesterV2Attributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SandboxTesterV2Attributes{}

// SandboxTesterV2Attributes struct for SandboxTesterV2Attributes
type SandboxTesterV2Attributes struct {
	FirstName *string `json:"firstName,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	AcAccountName *string `json:"acAccountName,omitempty"`
	Territory *TerritoryCode `json:"territory,omitempty"`
	ApplePayCompatible *bool `json:"applePayCompatible,omitempty"`
	InterruptPurchases *bool `json:"interruptPurchases,omitempty"`
	SubscriptionRenewalRate *string `json:"subscriptionRenewalRate,omitempty"`
}

// NewSandboxTesterV2Attributes instantiates a new SandboxTesterV2Attributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxTesterV2Attributes() *SandboxTesterV2Attributes {
	this := SandboxTesterV2Attributes{}
	return &this
}

// NewSandboxTesterV2AttributesWithDefaults instantiates a new SandboxTesterV2Attributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxTesterV2AttributesWithDefaults() *SandboxTesterV2Attributes {
	this := SandboxTesterV2Attributes{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *SandboxTesterV2Attributes) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxTesterV2Attributes) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *SandboxTesterV2Attributes) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *SandboxTesterV2Attributes) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *SandboxTesterV2Attributes) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxTesterV2Attributes) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *SandboxTesterV2Attributes) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *SandboxTesterV2Attributes) SetLastName(v string) {
	o.LastName = &v
}

// GetAcAccountName returns the AcAccountName field value if set, zero value otherwise.
func (o *SandboxTesterV2Attributes) GetAcAccountName() string {
	if o == nil || IsNil(o.AcAccountName) {
		var ret string
		return ret
	}
	return *o.AcAccountName
}

// GetAcAccountNameOk returns a tuple with the AcAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxTesterV2Attributes) GetAcAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AcAccountName) {
		return nil, false
	}
	return o.AcAccountName, true
}

// HasAcAccountName returns a boolean if a field has been set.
func (o *SandboxTesterV2Attributes) HasAcAccountName() bool {
	if o != nil && !IsNil(o.AcAccountName) {
		return true
	}

	return false
}

// SetAcAccountName gets a reference to the given string and assigns it to the AcAccountName field.
func (o *SandboxTesterV2Attributes) SetAcAccountName(v string) {
	o.AcAccountName = &v
}

// GetTerritory returns the Territory field value if set, zero value otherwise.
func (o *SandboxTesterV2Attributes) GetTerritory() TerritoryCode {
	if o == nil || IsNil(o.Territory) {
		var ret TerritoryCode
		return ret
	}
	return *o.Territory
}

// GetTerritoryOk returns a tuple with the Territory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxTesterV2Attributes) GetTerritoryOk() (*TerritoryCode, bool) {
	if o == nil || IsNil(o.Territory) {
		return nil, false
	}
	return o.Territory, true
}

// HasTerritory returns a boolean if a field has been set.
func (o *SandboxTesterV2Attributes) HasTerritory() bool {
	if o != nil && !IsNil(o.Territory) {
		return true
	}

	return false
}

// SetTerritory gets a reference to the given TerritoryCode and assigns it to the Territory field.
func (o *SandboxTesterV2Attributes) SetTerritory(v TerritoryCode) {
	o.Territory = &v
}

// GetApplePayCompatible returns the ApplePayCompatible field value if set, zero value otherwise.
func (o *SandboxTesterV2Attributes) GetApplePayCompatible() bool {
	if o == nil || IsNil(o.ApplePayCompatible) {
		var ret bool
		return ret
	}
	return *o.ApplePayCompatible
}

// GetApplePayCompatibleOk returns a tuple with the ApplePayCompatible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxTesterV2Attributes) GetApplePayCompatibleOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplePayCompatible) {
		return nil, false
	}
	return o.ApplePayCompatible, true
}

// HasApplePayCompatible returns a boolean if a field has been set.
func (o *SandboxTesterV2Attributes) HasApplePayCompatible() bool {
	if o != nil && !IsNil(o.ApplePayCompatible) {
		return true
	}

	return false
}

// SetApplePayCompatible gets a reference to the given bool and assigns it to the ApplePayCompatible field.
func (o *SandboxTesterV2Attributes) SetApplePayCompatible(v bool) {
	o.ApplePayCompatible = &v
}

// GetInterruptPurchases returns the InterruptPurchases field value if set, zero value otherwise.
func (o *SandboxTesterV2Attributes) GetInterruptPurchases() bool {
	if o == nil || IsNil(o.InterruptPurchases) {
		var ret bool
		return ret
	}
	return *o.InterruptPurchases
}

// GetInterruptPurchasesOk returns a tuple with the InterruptPurchases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxTesterV2Attributes) GetInterruptPurchasesOk() (*bool, bool) {
	if o == nil || IsNil(o.InterruptPurchases) {
		return nil, false
	}
	return o.InterruptPurchases, true
}

// HasInterruptPurchases returns a boolean if a field has been set.
func (o *SandboxTesterV2Attributes) HasInterruptPurchases() bool {
	if o != nil && !IsNil(o.InterruptPurchases) {
		return true
	}

	return false
}

// SetInterruptPurchases gets a reference to the given bool and assigns it to the InterruptPurchases field.
func (o *SandboxTesterV2Attributes) SetInterruptPurchases(v bool) {
	o.InterruptPurchases = &v
}

// GetSubscriptionRenewalRate returns the SubscriptionRenewalRate field value if set, zero value otherwise.
func (o *SandboxTesterV2Attributes) GetSubscriptionRenewalRate() string {
	if o == nil || IsNil(o.SubscriptionRenewalRate) {
		var ret string
		return ret
	}
	return *o.SubscriptionRenewalRate
}

// GetSubscriptionRenewalRateOk returns a tuple with the SubscriptionRenewalRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxTesterV2Attributes) GetSubscriptionRenewalRateOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionRenewalRate) {
		return nil, false
	}
	return o.SubscriptionRenewalRate, true
}

// HasSubscriptionRenewalRate returns a boolean if a field has been set.
func (o *SandboxTesterV2Attributes) HasSubscriptionRenewalRate() bool {
	if o != nil && !IsNil(o.SubscriptionRenewalRate) {
		return true
	}

	return false
}

// SetSubscriptionRenewalRate gets a reference to the given string and assigns it to the SubscriptionRenewalRate field.
func (o *SandboxTesterV2Attributes) SetSubscriptionRenewalRate(v string) {
	o.SubscriptionRenewalRate = &v
}

func (o SandboxTesterV2Attributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SandboxTesterV2Attributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.AcAccountName) {
		toSerialize["acAccountName"] = o.AcAccountName
	}
	if !IsNil(o.Territory) {
		toSerialize["territory"] = o.Territory
	}
	if !IsNil(o.ApplePayCompatible) {
		toSerialize["applePayCompatible"] = o.ApplePayCompatible
	}
	if !IsNil(o.InterruptPurchases) {
		toSerialize["interruptPurchases"] = o.InterruptPurchases
	}
	if !IsNil(o.SubscriptionRenewalRate) {
		toSerialize["subscriptionRenewalRate"] = o.SubscriptionRenewalRate
	}
	return toSerialize, nil
}

type NullableSandboxTesterV2Attributes struct {
	value *SandboxTesterV2Attributes
	isSet bool
}

func (v NullableSandboxTesterV2Attributes) Get() *SandboxTesterV2Attributes {
	return v.value
}

func (v *NullableSandboxTesterV2Attributes) Set(val *SandboxTesterV2Attributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxTesterV2Attributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxTesterV2Attributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxTesterV2Attributes(val *SandboxTesterV2Attributes) *NullableSandboxTesterV2Attributes {
	return &NullableSandboxTesterV2Attributes{value: val, isSet: true}
}

func (v NullableSandboxTesterV2Attributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxTesterV2Attributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


