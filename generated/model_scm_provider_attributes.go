/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the ScmProviderAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScmProviderAttributes{}

// ScmProviderAttributes struct for ScmProviderAttributes
type ScmProviderAttributes struct {
	ScmProviderType *ScmProviderType `json:"scmProviderType,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewScmProviderAttributes instantiates a new ScmProviderAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScmProviderAttributes() *ScmProviderAttributes {
	this := ScmProviderAttributes{}
	return &this
}

// NewScmProviderAttributesWithDefaults instantiates a new ScmProviderAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScmProviderAttributesWithDefaults() *ScmProviderAttributes {
	this := ScmProviderAttributes{}
	return &this
}

// GetScmProviderType returns the ScmProviderType field value if set, zero value otherwise.
func (o *ScmProviderAttributes) GetScmProviderType() ScmProviderType {
	if o == nil || IsNil(o.ScmProviderType) {
		var ret ScmProviderType
		return ret
	}
	return *o.ScmProviderType
}

// GetScmProviderTypeOk returns a tuple with the ScmProviderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmProviderAttributes) GetScmProviderTypeOk() (*ScmProviderType, bool) {
	if o == nil || IsNil(o.ScmProviderType) {
		return nil, false
	}
	return o.ScmProviderType, true
}

// HasScmProviderType returns a boolean if a field has been set.
func (o *ScmProviderAttributes) HasScmProviderType() bool {
	if o != nil && !IsNil(o.ScmProviderType) {
		return true
	}

	return false
}

// SetScmProviderType gets a reference to the given ScmProviderType and assigns it to the ScmProviderType field.
func (o *ScmProviderAttributes) SetScmProviderType(v ScmProviderType) {
	o.ScmProviderType = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ScmProviderAttributes) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmProviderAttributes) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ScmProviderAttributes) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ScmProviderAttributes) SetUrl(v string) {
	o.Url = &v
}

func (o ScmProviderAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScmProviderAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScmProviderType) {
		toSerialize["scmProviderType"] = o.ScmProviderType
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableScmProviderAttributes struct {
	value *ScmProviderAttributes
	isSet bool
}

func (v NullableScmProviderAttributes) Get() *ScmProviderAttributes {
	return v.value
}

func (v *NullableScmProviderAttributes) Set(val *ScmProviderAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableScmProviderAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableScmProviderAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScmProviderAttributes(val *ScmProviderAttributes) *NullableScmProviderAttributes {
	return &NullableScmProviderAttributes{value: val, isSet: true}
}

func (v NullableScmProviderAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScmProviderAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


