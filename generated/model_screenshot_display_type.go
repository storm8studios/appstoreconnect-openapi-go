/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
	"fmt"
)

// ScreenshotDisplayType the model 'ScreenshotDisplayType'
type ScreenshotDisplayType string

// List of ScreenshotDisplayType
const (
	SCREENSHOTDISPLAYTYPE_APP_IPHONE_67 ScreenshotDisplayType = "APP_IPHONE_67"
	SCREENSHOTDISPLAYTYPE_APP_IPHONE_61 ScreenshotDisplayType = "APP_IPHONE_61"
	SCREENSHOTDISPLAYTYPE_APP_IPHONE_65 ScreenshotDisplayType = "APP_IPHONE_65"
	SCREENSHOTDISPLAYTYPE_APP_IPHONE_58 ScreenshotDisplayType = "APP_IPHONE_58"
	SCREENSHOTDISPLAYTYPE_APP_IPHONE_55 ScreenshotDisplayType = "APP_IPHONE_55"
	SCREENSHOTDISPLAYTYPE_APP_IPHONE_47 ScreenshotDisplayType = "APP_IPHONE_47"
	SCREENSHOTDISPLAYTYPE_APP_IPHONE_40 ScreenshotDisplayType = "APP_IPHONE_40"
	SCREENSHOTDISPLAYTYPE_APP_IPHONE_35 ScreenshotDisplayType = "APP_IPHONE_35"
	SCREENSHOTDISPLAYTYPE_APP_IPAD_PRO_3_GEN_129 ScreenshotDisplayType = "APP_IPAD_PRO_3GEN_129"
	SCREENSHOTDISPLAYTYPE_APP_IPAD_PRO_3_GEN_11 ScreenshotDisplayType = "APP_IPAD_PRO_3GEN_11"
	SCREENSHOTDISPLAYTYPE_APP_IPAD_PRO_129 ScreenshotDisplayType = "APP_IPAD_PRO_129"
	SCREENSHOTDISPLAYTYPE_APP_IPAD_105 ScreenshotDisplayType = "APP_IPAD_105"
	SCREENSHOTDISPLAYTYPE_APP_IPAD_97 ScreenshotDisplayType = "APP_IPAD_97"
	SCREENSHOTDISPLAYTYPE_APP_DESKTOP ScreenshotDisplayType = "APP_DESKTOP"
	SCREENSHOTDISPLAYTYPE_APP_WATCH_ULTRA ScreenshotDisplayType = "APP_WATCH_ULTRA"
	SCREENSHOTDISPLAYTYPE_APP_WATCH_SERIES_7 ScreenshotDisplayType = "APP_WATCH_SERIES_7"
	SCREENSHOTDISPLAYTYPE_APP_WATCH_SERIES_4 ScreenshotDisplayType = "APP_WATCH_SERIES_4"
	SCREENSHOTDISPLAYTYPE_APP_WATCH_SERIES_3 ScreenshotDisplayType = "APP_WATCH_SERIES_3"
	SCREENSHOTDISPLAYTYPE_APP_APPLE_TV ScreenshotDisplayType = "APP_APPLE_TV"
	SCREENSHOTDISPLAYTYPE_IMESSAGE_APP_IPHONE_67 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_67"
	SCREENSHOTDISPLAYTYPE_IMESSAGE_APP_IPHONE_61 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_61"
	SCREENSHOTDISPLAYTYPE_IMESSAGE_APP_IPHONE_65 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_65"
	SCREENSHOTDISPLAYTYPE_IMESSAGE_APP_IPHONE_58 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_58"
	SCREENSHOTDISPLAYTYPE_IMESSAGE_APP_IPHONE_55 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_55"
	SCREENSHOTDISPLAYTYPE_IMESSAGE_APP_IPHONE_47 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_47"
	SCREENSHOTDISPLAYTYPE_IMESSAGE_APP_IPHONE_40 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_40"
	SCREENSHOTDISPLAYTYPE_IMESSAGE_APP_IPAD_PRO_3_GEN_129 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_PRO_3GEN_129"
	SCREENSHOTDISPLAYTYPE_IMESSAGE_APP_IPAD_PRO_3_GEN_11 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_PRO_3GEN_11"
	SCREENSHOTDISPLAYTYPE_IMESSAGE_APP_IPAD_PRO_129 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_PRO_129"
	SCREENSHOTDISPLAYTYPE_IMESSAGE_APP_IPAD_105 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_105"
	SCREENSHOTDISPLAYTYPE_IMESSAGE_APP_IPAD_97 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_97"
)

// All allowed values of ScreenshotDisplayType enum
var AllowedScreenshotDisplayTypeEnumValues = []ScreenshotDisplayType{
	"APP_IPHONE_67",
	"APP_IPHONE_61",
	"APP_IPHONE_65",
	"APP_IPHONE_58",
	"APP_IPHONE_55",
	"APP_IPHONE_47",
	"APP_IPHONE_40",
	"APP_IPHONE_35",
	"APP_IPAD_PRO_3GEN_129",
	"APP_IPAD_PRO_3GEN_11",
	"APP_IPAD_PRO_129",
	"APP_IPAD_105",
	"APP_IPAD_97",
	"APP_DESKTOP",
	"APP_WATCH_ULTRA",
	"APP_WATCH_SERIES_7",
	"APP_WATCH_SERIES_4",
	"APP_WATCH_SERIES_3",
	"APP_APPLE_TV",
	"IMESSAGE_APP_IPHONE_67",
	"IMESSAGE_APP_IPHONE_61",
	"IMESSAGE_APP_IPHONE_65",
	"IMESSAGE_APP_IPHONE_58",
	"IMESSAGE_APP_IPHONE_55",
	"IMESSAGE_APP_IPHONE_47",
	"IMESSAGE_APP_IPHONE_40",
	"IMESSAGE_APP_IPAD_PRO_3GEN_129",
	"IMESSAGE_APP_IPAD_PRO_3GEN_11",
	"IMESSAGE_APP_IPAD_PRO_129",
	"IMESSAGE_APP_IPAD_105",
	"IMESSAGE_APP_IPAD_97",
}

func (v *ScreenshotDisplayType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ScreenshotDisplayType(value)
	for _, existing := range AllowedScreenshotDisplayTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ScreenshotDisplayType", value)
}

// NewScreenshotDisplayTypeFromValue returns a pointer to a valid ScreenshotDisplayType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewScreenshotDisplayTypeFromValue(v string) (*ScreenshotDisplayType, error) {
	ev := ScreenshotDisplayType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ScreenshotDisplayType: valid values are %v", v, AllowedScreenshotDisplayTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ScreenshotDisplayType) IsValid() bool {
	for _, existing := range AllowedScreenshotDisplayTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ScreenshotDisplayType value
func (v ScreenshotDisplayType) Ptr() *ScreenshotDisplayType {
	return &v
}

type NullableScreenshotDisplayType struct {
	value *ScreenshotDisplayType
	isSet bool
}

func (v NullableScreenshotDisplayType) Get() *ScreenshotDisplayType {
	return v.value
}

func (v *NullableScreenshotDisplayType) Set(val *ScreenshotDisplayType) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenshotDisplayType) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenshotDisplayType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenshotDisplayType(val *ScreenshotDisplayType) *NullableScreenshotDisplayType {
	return &NullableScreenshotDisplayType{value: val, isSet: true}
}

func (v NullableScreenshotDisplayType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenshotDisplayType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

