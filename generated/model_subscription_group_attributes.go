/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the SubscriptionGroupAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionGroupAttributes{}

// SubscriptionGroupAttributes struct for SubscriptionGroupAttributes
type SubscriptionGroupAttributes struct {
	ReferenceName *string `json:"referenceName,omitempty"`
}

// NewSubscriptionGroupAttributes instantiates a new SubscriptionGroupAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionGroupAttributes() *SubscriptionGroupAttributes {
	this := SubscriptionGroupAttributes{}
	return &this
}

// NewSubscriptionGroupAttributesWithDefaults instantiates a new SubscriptionGroupAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionGroupAttributesWithDefaults() *SubscriptionGroupAttributes {
	this := SubscriptionGroupAttributes{}
	return &this
}

// GetReferenceName returns the ReferenceName field value if set, zero value otherwise.
func (o *SubscriptionGroupAttributes) GetReferenceName() string {
	if o == nil || IsNil(o.ReferenceName) {
		var ret string
		return ret
	}
	return *o.ReferenceName
}

// GetReferenceNameOk returns a tuple with the ReferenceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionGroupAttributes) GetReferenceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceName) {
		return nil, false
	}
	return o.ReferenceName, true
}

// HasReferenceName returns a boolean if a field has been set.
func (o *SubscriptionGroupAttributes) HasReferenceName() bool {
	if o != nil && !IsNil(o.ReferenceName) {
		return true
	}

	return false
}

// SetReferenceName gets a reference to the given string and assigns it to the ReferenceName field.
func (o *SubscriptionGroupAttributes) SetReferenceName(v string) {
	o.ReferenceName = &v
}

func (o SubscriptionGroupAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionGroupAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReferenceName) {
		toSerialize["referenceName"] = o.ReferenceName
	}
	return toSerialize, nil
}

type NullableSubscriptionGroupAttributes struct {
	value *SubscriptionGroupAttributes
	isSet bool
}

func (v NullableSubscriptionGroupAttributes) Get() *SubscriptionGroupAttributes {
	return v.value
}

func (v *NullableSubscriptionGroupAttributes) Set(val *SubscriptionGroupAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionGroupAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionGroupAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionGroupAttributes(val *SubscriptionGroupAttributes) *NullableSubscriptionGroupAttributes {
	return &NullableSubscriptionGroupAttributes{value: val, isSet: true}
}

func (v NullableSubscriptionGroupAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionGroupAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


