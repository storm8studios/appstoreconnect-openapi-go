/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the SubscriptionGroupLocalizationRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionGroupLocalizationRelationships{}

// SubscriptionGroupLocalizationRelationships struct for SubscriptionGroupLocalizationRelationships
type SubscriptionGroupLocalizationRelationships struct {
	SubscriptionGroup *SubscriptionGroupLocalizationRelationshipsSubscriptionGroup `json:"subscriptionGroup,omitempty"`
}

// NewSubscriptionGroupLocalizationRelationships instantiates a new SubscriptionGroupLocalizationRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionGroupLocalizationRelationships() *SubscriptionGroupLocalizationRelationships {
	this := SubscriptionGroupLocalizationRelationships{}
	return &this
}

// NewSubscriptionGroupLocalizationRelationshipsWithDefaults instantiates a new SubscriptionGroupLocalizationRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionGroupLocalizationRelationshipsWithDefaults() *SubscriptionGroupLocalizationRelationships {
	this := SubscriptionGroupLocalizationRelationships{}
	return &this
}

// GetSubscriptionGroup returns the SubscriptionGroup field value if set, zero value otherwise.
func (o *SubscriptionGroupLocalizationRelationships) GetSubscriptionGroup() SubscriptionGroupLocalizationRelationshipsSubscriptionGroup {
	if o == nil || IsNil(o.SubscriptionGroup) {
		var ret SubscriptionGroupLocalizationRelationshipsSubscriptionGroup
		return ret
	}
	return *o.SubscriptionGroup
}

// GetSubscriptionGroupOk returns a tuple with the SubscriptionGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionGroupLocalizationRelationships) GetSubscriptionGroupOk() (*SubscriptionGroupLocalizationRelationshipsSubscriptionGroup, bool) {
	if o == nil || IsNil(o.SubscriptionGroup) {
		return nil, false
	}
	return o.SubscriptionGroup, true
}

// HasSubscriptionGroup returns a boolean if a field has been set.
func (o *SubscriptionGroupLocalizationRelationships) HasSubscriptionGroup() bool {
	if o != nil && !IsNil(o.SubscriptionGroup) {
		return true
	}

	return false
}

// SetSubscriptionGroup gets a reference to the given SubscriptionGroupLocalizationRelationshipsSubscriptionGroup and assigns it to the SubscriptionGroup field.
func (o *SubscriptionGroupLocalizationRelationships) SetSubscriptionGroup(v SubscriptionGroupLocalizationRelationshipsSubscriptionGroup) {
	o.SubscriptionGroup = &v
}

func (o SubscriptionGroupLocalizationRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionGroupLocalizationRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubscriptionGroup) {
		toSerialize["subscriptionGroup"] = o.SubscriptionGroup
	}
	return toSerialize, nil
}

type NullableSubscriptionGroupLocalizationRelationships struct {
	value *SubscriptionGroupLocalizationRelationships
	isSet bool
}

func (v NullableSubscriptionGroupLocalizationRelationships) Get() *SubscriptionGroupLocalizationRelationships {
	return v.value
}

func (v *NullableSubscriptionGroupLocalizationRelationships) Set(val *SubscriptionGroupLocalizationRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionGroupLocalizationRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionGroupLocalizationRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionGroupLocalizationRelationships(val *SubscriptionGroupLocalizationRelationships) *NullableSubscriptionGroupLocalizationRelationships {
	return &NullableSubscriptionGroupLocalizationRelationships{value: val, isSet: true}
}

func (v NullableSubscriptionGroupLocalizationRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionGroupLocalizationRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


