/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the SubscriptionGroupRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionGroupRelationships{}

// SubscriptionGroupRelationships struct for SubscriptionGroupRelationships
type SubscriptionGroupRelationships struct {
	Subscriptions *SubscriptionGroupRelationshipsSubscriptions `json:"subscriptions,omitempty"`
	SubscriptionGroupLocalizations *SubscriptionGroupRelationshipsSubscriptionGroupLocalizations `json:"subscriptionGroupLocalizations,omitempty"`
}

// NewSubscriptionGroupRelationships instantiates a new SubscriptionGroupRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionGroupRelationships() *SubscriptionGroupRelationships {
	this := SubscriptionGroupRelationships{}
	return &this
}

// NewSubscriptionGroupRelationshipsWithDefaults instantiates a new SubscriptionGroupRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionGroupRelationshipsWithDefaults() *SubscriptionGroupRelationships {
	this := SubscriptionGroupRelationships{}
	return &this
}

// GetSubscriptions returns the Subscriptions field value if set, zero value otherwise.
func (o *SubscriptionGroupRelationships) GetSubscriptions() SubscriptionGroupRelationshipsSubscriptions {
	if o == nil || IsNil(o.Subscriptions) {
		var ret SubscriptionGroupRelationshipsSubscriptions
		return ret
	}
	return *o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionGroupRelationships) GetSubscriptionsOk() (*SubscriptionGroupRelationshipsSubscriptions, bool) {
	if o == nil || IsNil(o.Subscriptions) {
		return nil, false
	}
	return o.Subscriptions, true
}

// HasSubscriptions returns a boolean if a field has been set.
func (o *SubscriptionGroupRelationships) HasSubscriptions() bool {
	if o != nil && !IsNil(o.Subscriptions) {
		return true
	}

	return false
}

// SetSubscriptions gets a reference to the given SubscriptionGroupRelationshipsSubscriptions and assigns it to the Subscriptions field.
func (o *SubscriptionGroupRelationships) SetSubscriptions(v SubscriptionGroupRelationshipsSubscriptions) {
	o.Subscriptions = &v
}

// GetSubscriptionGroupLocalizations returns the SubscriptionGroupLocalizations field value if set, zero value otherwise.
func (o *SubscriptionGroupRelationships) GetSubscriptionGroupLocalizations() SubscriptionGroupRelationshipsSubscriptionGroupLocalizations {
	if o == nil || IsNil(o.SubscriptionGroupLocalizations) {
		var ret SubscriptionGroupRelationshipsSubscriptionGroupLocalizations
		return ret
	}
	return *o.SubscriptionGroupLocalizations
}

// GetSubscriptionGroupLocalizationsOk returns a tuple with the SubscriptionGroupLocalizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionGroupRelationships) GetSubscriptionGroupLocalizationsOk() (*SubscriptionGroupRelationshipsSubscriptionGroupLocalizations, bool) {
	if o == nil || IsNil(o.SubscriptionGroupLocalizations) {
		return nil, false
	}
	return o.SubscriptionGroupLocalizations, true
}

// HasSubscriptionGroupLocalizations returns a boolean if a field has been set.
func (o *SubscriptionGroupRelationships) HasSubscriptionGroupLocalizations() bool {
	if o != nil && !IsNil(o.SubscriptionGroupLocalizations) {
		return true
	}

	return false
}

// SetSubscriptionGroupLocalizations gets a reference to the given SubscriptionGroupRelationshipsSubscriptionGroupLocalizations and assigns it to the SubscriptionGroupLocalizations field.
func (o *SubscriptionGroupRelationships) SetSubscriptionGroupLocalizations(v SubscriptionGroupRelationshipsSubscriptionGroupLocalizations) {
	o.SubscriptionGroupLocalizations = &v
}

func (o SubscriptionGroupRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionGroupRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Subscriptions) {
		toSerialize["subscriptions"] = o.Subscriptions
	}
	if !IsNil(o.SubscriptionGroupLocalizations) {
		toSerialize["subscriptionGroupLocalizations"] = o.SubscriptionGroupLocalizations
	}
	return toSerialize, nil
}

type NullableSubscriptionGroupRelationships struct {
	value *SubscriptionGroupRelationships
	isSet bool
}

func (v NullableSubscriptionGroupRelationships) Get() *SubscriptionGroupRelationships {
	return v.value
}

func (v *NullableSubscriptionGroupRelationships) Set(val *SubscriptionGroupRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionGroupRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionGroupRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionGroupRelationships(val *SubscriptionGroupRelationships) *NullableSubscriptionGroupRelationships {
	return &NullableSubscriptionGroupRelationships{value: val, isSet: true}
}

func (v NullableSubscriptionGroupRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionGroupRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


