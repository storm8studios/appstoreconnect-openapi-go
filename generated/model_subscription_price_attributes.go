/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the SubscriptionPriceAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionPriceAttributes{}

// SubscriptionPriceAttributes struct for SubscriptionPriceAttributes
type SubscriptionPriceAttributes struct {
	StartDate *string `json:"startDate,omitempty"`
	Preserved *bool `json:"preserved,omitempty"`
}

// NewSubscriptionPriceAttributes instantiates a new SubscriptionPriceAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionPriceAttributes() *SubscriptionPriceAttributes {
	this := SubscriptionPriceAttributes{}
	return &this
}

// NewSubscriptionPriceAttributesWithDefaults instantiates a new SubscriptionPriceAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionPriceAttributesWithDefaults() *SubscriptionPriceAttributes {
	this := SubscriptionPriceAttributes{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *SubscriptionPriceAttributes) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPriceAttributes) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *SubscriptionPriceAttributes) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *SubscriptionPriceAttributes) SetStartDate(v string) {
	o.StartDate = &v
}

// GetPreserved returns the Preserved field value if set, zero value otherwise.
func (o *SubscriptionPriceAttributes) GetPreserved() bool {
	if o == nil || IsNil(o.Preserved) {
		var ret bool
		return ret
	}
	return *o.Preserved
}

// GetPreservedOk returns a tuple with the Preserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPriceAttributes) GetPreservedOk() (*bool, bool) {
	if o == nil || IsNil(o.Preserved) {
		return nil, false
	}
	return o.Preserved, true
}

// HasPreserved returns a boolean if a field has been set.
func (o *SubscriptionPriceAttributes) HasPreserved() bool {
	if o != nil && !IsNil(o.Preserved) {
		return true
	}

	return false
}

// SetPreserved gets a reference to the given bool and assigns it to the Preserved field.
func (o *SubscriptionPriceAttributes) SetPreserved(v bool) {
	o.Preserved = &v
}

func (o SubscriptionPriceAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionPriceAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.Preserved) {
		toSerialize["preserved"] = o.Preserved
	}
	return toSerialize, nil
}

type NullableSubscriptionPriceAttributes struct {
	value *SubscriptionPriceAttributes
	isSet bool
}

func (v NullableSubscriptionPriceAttributes) Get() *SubscriptionPriceAttributes {
	return v.value
}

func (v *NullableSubscriptionPriceAttributes) Set(val *SubscriptionPriceAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionPriceAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionPriceAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionPriceAttributes(val *SubscriptionPriceAttributes) *NullableSubscriptionPriceAttributes {
	return &NullableSubscriptionPriceAttributes{value: val, isSet: true}
}

func (v NullableSubscriptionPriceAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionPriceAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


