/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
)

// checks if the SubscriptionUpdateRequestDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionUpdateRequestDataRelationships{}

// SubscriptionUpdateRequestDataRelationships struct for SubscriptionUpdateRequestDataRelationships
type SubscriptionUpdateRequestDataRelationships struct {
	IntroductoryOffers *SubscriptionUpdateRequestDataRelationshipsIntroductoryOffers `json:"introductoryOffers,omitempty"`
	PromotionalOffers *SubscriptionUpdateRequestDataRelationshipsPromotionalOffers `json:"promotionalOffers,omitempty"`
	Prices *SubscriptionUpdateRequestDataRelationshipsPrices `json:"prices,omitempty"`
}

// NewSubscriptionUpdateRequestDataRelationships instantiates a new SubscriptionUpdateRequestDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionUpdateRequestDataRelationships() *SubscriptionUpdateRequestDataRelationships {
	this := SubscriptionUpdateRequestDataRelationships{}
	return &this
}

// NewSubscriptionUpdateRequestDataRelationshipsWithDefaults instantiates a new SubscriptionUpdateRequestDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionUpdateRequestDataRelationshipsWithDefaults() *SubscriptionUpdateRequestDataRelationships {
	this := SubscriptionUpdateRequestDataRelationships{}
	return &this
}

// GetIntroductoryOffers returns the IntroductoryOffers field value if set, zero value otherwise.
func (o *SubscriptionUpdateRequestDataRelationships) GetIntroductoryOffers() SubscriptionUpdateRequestDataRelationshipsIntroductoryOffers {
	if o == nil || IsNil(o.IntroductoryOffers) {
		var ret SubscriptionUpdateRequestDataRelationshipsIntroductoryOffers
		return ret
	}
	return *o.IntroductoryOffers
}

// GetIntroductoryOffersOk returns a tuple with the IntroductoryOffers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionUpdateRequestDataRelationships) GetIntroductoryOffersOk() (*SubscriptionUpdateRequestDataRelationshipsIntroductoryOffers, bool) {
	if o == nil || IsNil(o.IntroductoryOffers) {
		return nil, false
	}
	return o.IntroductoryOffers, true
}

// HasIntroductoryOffers returns a boolean if a field has been set.
func (o *SubscriptionUpdateRequestDataRelationships) HasIntroductoryOffers() bool {
	if o != nil && !IsNil(o.IntroductoryOffers) {
		return true
	}

	return false
}

// SetIntroductoryOffers gets a reference to the given SubscriptionUpdateRequestDataRelationshipsIntroductoryOffers and assigns it to the IntroductoryOffers field.
func (o *SubscriptionUpdateRequestDataRelationships) SetIntroductoryOffers(v SubscriptionUpdateRequestDataRelationshipsIntroductoryOffers) {
	o.IntroductoryOffers = &v
}

// GetPromotionalOffers returns the PromotionalOffers field value if set, zero value otherwise.
func (o *SubscriptionUpdateRequestDataRelationships) GetPromotionalOffers() SubscriptionUpdateRequestDataRelationshipsPromotionalOffers {
	if o == nil || IsNil(o.PromotionalOffers) {
		var ret SubscriptionUpdateRequestDataRelationshipsPromotionalOffers
		return ret
	}
	return *o.PromotionalOffers
}

// GetPromotionalOffersOk returns a tuple with the PromotionalOffers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionUpdateRequestDataRelationships) GetPromotionalOffersOk() (*SubscriptionUpdateRequestDataRelationshipsPromotionalOffers, bool) {
	if o == nil || IsNil(o.PromotionalOffers) {
		return nil, false
	}
	return o.PromotionalOffers, true
}

// HasPromotionalOffers returns a boolean if a field has been set.
func (o *SubscriptionUpdateRequestDataRelationships) HasPromotionalOffers() bool {
	if o != nil && !IsNil(o.PromotionalOffers) {
		return true
	}

	return false
}

// SetPromotionalOffers gets a reference to the given SubscriptionUpdateRequestDataRelationshipsPromotionalOffers and assigns it to the PromotionalOffers field.
func (o *SubscriptionUpdateRequestDataRelationships) SetPromotionalOffers(v SubscriptionUpdateRequestDataRelationshipsPromotionalOffers) {
	o.PromotionalOffers = &v
}

// GetPrices returns the Prices field value if set, zero value otherwise.
func (o *SubscriptionUpdateRequestDataRelationships) GetPrices() SubscriptionUpdateRequestDataRelationshipsPrices {
	if o == nil || IsNil(o.Prices) {
		var ret SubscriptionUpdateRequestDataRelationshipsPrices
		return ret
	}
	return *o.Prices
}

// GetPricesOk returns a tuple with the Prices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionUpdateRequestDataRelationships) GetPricesOk() (*SubscriptionUpdateRequestDataRelationshipsPrices, bool) {
	if o == nil || IsNil(o.Prices) {
		return nil, false
	}
	return o.Prices, true
}

// HasPrices returns a boolean if a field has been set.
func (o *SubscriptionUpdateRequestDataRelationships) HasPrices() bool {
	if o != nil && !IsNil(o.Prices) {
		return true
	}

	return false
}

// SetPrices gets a reference to the given SubscriptionUpdateRequestDataRelationshipsPrices and assigns it to the Prices field.
func (o *SubscriptionUpdateRequestDataRelationships) SetPrices(v SubscriptionUpdateRequestDataRelationshipsPrices) {
	o.Prices = &v
}

func (o SubscriptionUpdateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionUpdateRequestDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IntroductoryOffers) {
		toSerialize["introductoryOffers"] = o.IntroductoryOffers
	}
	if !IsNil(o.PromotionalOffers) {
		toSerialize["promotionalOffers"] = o.PromotionalOffers
	}
	if !IsNil(o.Prices) {
		toSerialize["prices"] = o.Prices
	}
	return toSerialize, nil
}

type NullableSubscriptionUpdateRequestDataRelationships struct {
	value *SubscriptionUpdateRequestDataRelationships
	isSet bool
}

func (v NullableSubscriptionUpdateRequestDataRelationships) Get() *SubscriptionUpdateRequestDataRelationships {
	return v.value
}

func (v *NullableSubscriptionUpdateRequestDataRelationships) Set(val *SubscriptionUpdateRequestDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionUpdateRequestDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionUpdateRequestDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionUpdateRequestDataRelationships(val *SubscriptionUpdateRequestDataRelationships) *NullableSubscriptionUpdateRequestDataRelationships {
	return &NullableSubscriptionUpdateRequestDataRelationships{value: val, isSet: true}
}

func (v NullableSubscriptionUpdateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionUpdateRequestDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


