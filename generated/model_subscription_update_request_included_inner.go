/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
	"fmt"
)

// SubscriptionUpdateRequestIncludedInner - struct for SubscriptionUpdateRequestIncludedInner
type SubscriptionUpdateRequestIncludedInner struct {
	SubscriptionIntroductoryOfferInlineCreate *SubscriptionIntroductoryOfferInlineCreate
	SubscriptionPriceInlineCreate *SubscriptionPriceInlineCreate
	SubscriptionPromotionalOfferInlineCreate *SubscriptionPromotionalOfferInlineCreate
}

// SubscriptionIntroductoryOfferInlineCreateAsSubscriptionUpdateRequestIncludedInner is a convenience function that returns SubscriptionIntroductoryOfferInlineCreate wrapped in SubscriptionUpdateRequestIncludedInner
func SubscriptionIntroductoryOfferInlineCreateAsSubscriptionUpdateRequestIncludedInner(v *SubscriptionIntroductoryOfferInlineCreate) SubscriptionUpdateRequestIncludedInner {
	return SubscriptionUpdateRequestIncludedInner{
		SubscriptionIntroductoryOfferInlineCreate: v,
	}
}

// SubscriptionPriceInlineCreateAsSubscriptionUpdateRequestIncludedInner is a convenience function that returns SubscriptionPriceInlineCreate wrapped in SubscriptionUpdateRequestIncludedInner
func SubscriptionPriceInlineCreateAsSubscriptionUpdateRequestIncludedInner(v *SubscriptionPriceInlineCreate) SubscriptionUpdateRequestIncludedInner {
	return SubscriptionUpdateRequestIncludedInner{
		SubscriptionPriceInlineCreate: v,
	}
}

// SubscriptionPromotionalOfferInlineCreateAsSubscriptionUpdateRequestIncludedInner is a convenience function that returns SubscriptionPromotionalOfferInlineCreate wrapped in SubscriptionUpdateRequestIncludedInner
func SubscriptionPromotionalOfferInlineCreateAsSubscriptionUpdateRequestIncludedInner(v *SubscriptionPromotionalOfferInlineCreate) SubscriptionUpdateRequestIncludedInner {
	return SubscriptionUpdateRequestIncludedInner{
		SubscriptionPromotionalOfferInlineCreate: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *SubscriptionUpdateRequestIncludedInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into SubscriptionIntroductoryOfferInlineCreate
	err = newStrictDecoder(data).Decode(&dst.SubscriptionIntroductoryOfferInlineCreate)
	if err == nil {
		jsonSubscriptionIntroductoryOfferInlineCreate, _ := json.Marshal(dst.SubscriptionIntroductoryOfferInlineCreate)
		if string(jsonSubscriptionIntroductoryOfferInlineCreate) == "{}" { // empty struct
			dst.SubscriptionIntroductoryOfferInlineCreate = nil
		} else {
			match++
		}
	} else {
		dst.SubscriptionIntroductoryOfferInlineCreate = nil
	}

	// try to unmarshal data into SubscriptionPriceInlineCreate
	err = newStrictDecoder(data).Decode(&dst.SubscriptionPriceInlineCreate)
	if err == nil {
		jsonSubscriptionPriceInlineCreate, _ := json.Marshal(dst.SubscriptionPriceInlineCreate)
		if string(jsonSubscriptionPriceInlineCreate) == "{}" { // empty struct
			dst.SubscriptionPriceInlineCreate = nil
		} else {
			match++
		}
	} else {
		dst.SubscriptionPriceInlineCreate = nil
	}

	// try to unmarshal data into SubscriptionPromotionalOfferInlineCreate
	err = newStrictDecoder(data).Decode(&dst.SubscriptionPromotionalOfferInlineCreate)
	if err == nil {
		jsonSubscriptionPromotionalOfferInlineCreate, _ := json.Marshal(dst.SubscriptionPromotionalOfferInlineCreate)
		if string(jsonSubscriptionPromotionalOfferInlineCreate) == "{}" { // empty struct
			dst.SubscriptionPromotionalOfferInlineCreate = nil
		} else {
			match++
		}
	} else {
		dst.SubscriptionPromotionalOfferInlineCreate = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.SubscriptionIntroductoryOfferInlineCreate = nil
		dst.SubscriptionPriceInlineCreate = nil
		dst.SubscriptionPromotionalOfferInlineCreate = nil

		return fmt.Errorf("data matches more than one schema in oneOf(SubscriptionUpdateRequestIncludedInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(SubscriptionUpdateRequestIncludedInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src SubscriptionUpdateRequestIncludedInner) MarshalJSON() ([]byte, error) {
	if src.SubscriptionIntroductoryOfferInlineCreate != nil {
		return json.Marshal(&src.SubscriptionIntroductoryOfferInlineCreate)
	}

	if src.SubscriptionPriceInlineCreate != nil {
		return json.Marshal(&src.SubscriptionPriceInlineCreate)
	}

	if src.SubscriptionPromotionalOfferInlineCreate != nil {
		return json.Marshal(&src.SubscriptionPromotionalOfferInlineCreate)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *SubscriptionUpdateRequestIncludedInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.SubscriptionIntroductoryOfferInlineCreate != nil {
		return obj.SubscriptionIntroductoryOfferInlineCreate
	}

	if obj.SubscriptionPriceInlineCreate != nil {
		return obj.SubscriptionPriceInlineCreate
	}

	if obj.SubscriptionPromotionalOfferInlineCreate != nil {
		return obj.SubscriptionPromotionalOfferInlineCreate
	}

	// all schemas are nil
	return nil
}

type NullableSubscriptionUpdateRequestIncludedInner struct {
	value *SubscriptionUpdateRequestIncludedInner
	isSet bool
}

func (v NullableSubscriptionUpdateRequestIncludedInner) Get() *SubscriptionUpdateRequestIncludedInner {
	return v.value
}

func (v *NullableSubscriptionUpdateRequestIncludedInner) Set(val *SubscriptionUpdateRequestIncludedInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionUpdateRequestIncludedInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionUpdateRequestIncludedInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionUpdateRequestIncludedInner(val *SubscriptionUpdateRequestIncludedInner) *NullableSubscriptionUpdateRequestIncludedInner {
	return &NullableSubscriptionUpdateRequestIncludedInner{value: val, isSet: true}
}

func (v NullableSubscriptionUpdateRequestIncludedInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionUpdateRequestIncludedInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


