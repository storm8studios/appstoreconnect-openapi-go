/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreopenapi

import (
	"encoding/json"
	"time"
)

// checks if the UserInvitationAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserInvitationAttributes{}

// UserInvitationAttributes struct for UserInvitationAttributes
type UserInvitationAttributes struct {
	Email *string `json:"email,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
	Roles []UserRole `json:"roles,omitempty"`
	AllAppsVisible *bool `json:"allAppsVisible,omitempty"`
	ProvisioningAllowed *bool `json:"provisioningAllowed,omitempty"`
}

// NewUserInvitationAttributes instantiates a new UserInvitationAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserInvitationAttributes() *UserInvitationAttributes {
	this := UserInvitationAttributes{}
	return &this
}

// NewUserInvitationAttributesWithDefaults instantiates a new UserInvitationAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserInvitationAttributesWithDefaults() *UserInvitationAttributes {
	this := UserInvitationAttributes{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UserInvitationAttributes) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInvitationAttributes) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserInvitationAttributes) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UserInvitationAttributes) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *UserInvitationAttributes) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInvitationAttributes) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *UserInvitationAttributes) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *UserInvitationAttributes) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *UserInvitationAttributes) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInvitationAttributes) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *UserInvitationAttributes) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *UserInvitationAttributes) SetLastName(v string) {
	o.LastName = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *UserInvitationAttributes) GetExpirationDate() time.Time {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInvitationAttributes) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *UserInvitationAttributes) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given time.Time and assigns it to the ExpirationDate field.
func (o *UserInvitationAttributes) SetExpirationDate(v time.Time) {
	o.ExpirationDate = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *UserInvitationAttributes) GetRoles() []UserRole {
	if o == nil || IsNil(o.Roles) {
		var ret []UserRole
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInvitationAttributes) GetRolesOk() ([]UserRole, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *UserInvitationAttributes) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []UserRole and assigns it to the Roles field.
func (o *UserInvitationAttributes) SetRoles(v []UserRole) {
	o.Roles = v
}

// GetAllAppsVisible returns the AllAppsVisible field value if set, zero value otherwise.
func (o *UserInvitationAttributes) GetAllAppsVisible() bool {
	if o == nil || IsNil(o.AllAppsVisible) {
		var ret bool
		return ret
	}
	return *o.AllAppsVisible
}

// GetAllAppsVisibleOk returns a tuple with the AllAppsVisible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInvitationAttributes) GetAllAppsVisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.AllAppsVisible) {
		return nil, false
	}
	return o.AllAppsVisible, true
}

// HasAllAppsVisible returns a boolean if a field has been set.
func (o *UserInvitationAttributes) HasAllAppsVisible() bool {
	if o != nil && !IsNil(o.AllAppsVisible) {
		return true
	}

	return false
}

// SetAllAppsVisible gets a reference to the given bool and assigns it to the AllAppsVisible field.
func (o *UserInvitationAttributes) SetAllAppsVisible(v bool) {
	o.AllAppsVisible = &v
}

// GetProvisioningAllowed returns the ProvisioningAllowed field value if set, zero value otherwise.
func (o *UserInvitationAttributes) GetProvisioningAllowed() bool {
	if o == nil || IsNil(o.ProvisioningAllowed) {
		var ret bool
		return ret
	}
	return *o.ProvisioningAllowed
}

// GetProvisioningAllowedOk returns a tuple with the ProvisioningAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInvitationAttributes) GetProvisioningAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.ProvisioningAllowed) {
		return nil, false
	}
	return o.ProvisioningAllowed, true
}

// HasProvisioningAllowed returns a boolean if a field has been set.
func (o *UserInvitationAttributes) HasProvisioningAllowed() bool {
	if o != nil && !IsNil(o.ProvisioningAllowed) {
		return true
	}

	return false
}

// SetProvisioningAllowed gets a reference to the given bool and assigns it to the ProvisioningAllowed field.
func (o *UserInvitationAttributes) SetProvisioningAllowed(v bool) {
	o.ProvisioningAllowed = &v
}

func (o UserInvitationAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserInvitationAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.AllAppsVisible) {
		toSerialize["allAppsVisible"] = o.AllAppsVisible
	}
	if !IsNil(o.ProvisioningAllowed) {
		toSerialize["provisioningAllowed"] = o.ProvisioningAllowed
	}
	return toSerialize, nil
}

type NullableUserInvitationAttributes struct {
	value *UserInvitationAttributes
	isSet bool
}

func (v NullableUserInvitationAttributes) Get() *UserInvitationAttributes {
	return v.value
}

func (v *NullableUserInvitationAttributes) Set(val *UserInvitationAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableUserInvitationAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableUserInvitationAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserInvitationAttributes(val *UserInvitationAttributes) *NullableUserInvitationAttributes {
	return &NullableUserInvitationAttributes{value: val, isSet: true}
}

func (v NullableUserInvitationAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserInvitationAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


